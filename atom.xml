<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Alpaca0x0&#39;s Blog</title>
  
  <subtitle>Alpaca0x0</subtitle>
  <link href="https://blog.alpaca0x0.com/atom.xml" rel="self"/>
  
  <link href="https://blog.alpaca0x0.com/"/>
  <updated>2021-10-21T09:23:39.270Z</updated>
  <id>https://blog.alpaca0x0.com/</id>
  
  <author>
    <name>Alpaca0x0</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux + Win 雙系統卻不見 Grub 開機選單？</title>
    <link href="https://blog.alpaca0x0.com/posts/Dual-Boot-with-Grub/"/>
    <id>https://blog.alpaca0x0.com/posts/Dual-Boot-with-Grub/</id>
    <published>2021-09-24T15:27:14.000Z</published>
    <updated>2021-10-21T09:23:39.270Z</updated>
    
    <content type="html"><![CDATA[安裝了 Linux + Windows 的雙系統，但卻不見開機選單？放心，很多人跟你一樣。<span id="more"></span><hr><h2 id="事先聲明">事先聲明</h2><ul><li>在磁區間操作有一定風險，若操作不當導致不可逆的後果，本站概不負責。</li><li>本文全程以  <code>Ubuntu 20.04.3 LTS</code>  操作，其他版本不一定適用。</li></ul><hr><h2 id="mbr-master-boot-record-主啟動磁區">MBR (Master Boot Record, 主啟動磁區)</h2><p>首先，一般計算機在開機時，會先執行  <code>BIOS</code>  之後才進入 OS。<br>但其實準確的說，在進入 OS 前，會先經過  <code>MBR (Master Boot Record)</code> ，也就是  <code>主啟動磁區</code> 。</p><p>至於進入哪個作業系統，這就靠 MBR 的設定了。</p><hr><h2 id="boot-loader-開機引導">Boot Loader (開機引導)</h2><p>雙系統並非什麼新鮮事，但對新手來說，可能會持續糾結 Dual Booting 的問題好一陣子。</p><p>為了方便使用雙系統，大多數的作法是在進入 OS 前，載入一個選單，由使用者手動選擇來決定使用哪個 OS 以達到雙系統的目的。而這個選單就是大家所說的 <strong>Boot Loader (開機引導)</strong>。</p><p>其中  <code>GNU Project</code>  中的程式「<a href="https://zh.wikipedia.org/wiki/GNU_GRUB"> <code>GRUB (GRand Unified Bootloader)</code> </a>」極具代表性。</p><p>而  <code>Ubuntu</code>  預設就會安裝 Grub (以下以 Ubuntu 做解說)</p><hr><h2 id="linux-windows-雙系統">Linux + Windows 雙系統</h2><blockquote><p>若使用者在已有 Windows System 下的計算機安裝第二 (或更多) 個系統，那對 MBR 會有什麼影響？<br>當計算機只有<strong>單一系統</strong>時，MBR 理所當然的只會進入該系統。<br>但若是安裝了<strong>第二個系統</strong>，這時 MBR 有著極大的可能會<strong>被第二個系統所覆寫</strong>，進而導致一個「MBR 會指向越晚安裝的系統」的現象。</p></blockquote><hr><h2 id="安裝-os-的順序也有關係">安裝 OS 的順序也有關係？</h2><p>正因為大多數情況下 MBR 會被最後一個安裝的系統給覆蓋設定，因此若是最後一個安裝的系統有如 GURB 之類的開機引導，那麼就可以成功顯示開機選單。</p><p>因此大多數情況下都會建議使用者<strong>先安裝 Windows 後，才安裝 Linux</strong>。</p><p>由於前面提到的，Ubuntu 預設會自動為使用者安裝 Grub，因此若是先安裝 Windows 再安裝 Ubuntu 的話，那麼 MBR 將會指向 Linux 的 Boot Loader 也就是 Grub。</p><hr><h2 id="我偏要先安裝-linux-再裝-windows">我偏要先安裝 Linux 再裝 Windows</h2><p>同理，若是讓 MBR 指向 Windows 的 Boot Loader，那將不會有 Grub，也就是會直接進入 Windows。<br>即便如此，在某些情況下仍然有著<strong>需要最後安裝 Windows</strong> 的需求。</p><p>而大多數的新手玩家在安裝完雙系統後，發現開機選單消失，大多數都是因為上述原因。<br>這時候其實只需要手動再安裝一次 Grub 即可。</p><hr><h2 id="正式開始-手動安裝-grub-以覆寫-mbr-設定">正式開始 - 手動安裝 Grub 以覆寫 MBR 設定</h2><blockquote><h3 id="step-1-準備-ubuntu-live-cd">Step. 1 - 準備 Ubuntu Live CD</h3><p>你需要準備一個裝有 Ubuntu OS 的開機碟，靠它來協助你手動安裝 Grub。</p></blockquote><blockquote><h3 id="step-2-進入-ubuntu">Step. 2 - 進入 Ubuntu</h3><p>利用開機碟進入 Ubuntu 的安裝界面。<br><strong>注意</strong>！<br>別急著按下安裝，我們僅需要使用試用模式即可，按下「 <code>Try Ubuntu (試用 Ubuntu)</code> 」後進入 Ubuntu 桌面環境。</p></blockquote><blockquote><h3 id="step-3-確定-efi-ubuntu-及-ubuntus-boot-所在磁區">Step. 3 - 確定 EFI、Ubuntu 及 Ubuntu’s Boot 所在磁區</h3><p>接著掛載原有的 Ubuntu 安裝區。<br>使用  <code>fdisk -l</code>  指令查看當前磁區狀況。記得使用 root 權限執行。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> <span class="token function">fdisk</span> -l<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>Device          Start        End   Sectors   Size Type/dev/sda1        <span class="token number">2048</span>     <span class="token number">624639</span>    <span class="token number">622592</span>   304M EFI System<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>/dev/sda4   <span class="token number">173963264</span>  <span class="token number">886562815</span> <span class="token number">712599552</span> <span class="token number">339</span>.8G Linux filesystem/dev/sda5   <span class="token number">886562816</span>  <span class="token number">891875327</span>   <span class="token number">5312512</span>   <span class="token number">2</span>.5G Linux filesystem<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每個人的磁區編號不同，以上面例子來說：</p><ul><li><code>/dev/sda1</code>  為  <code>EFI System</code> 。EFI 的磁區編號不重要，記得是在哪個硬碟就好，如上述為  <code>/dev/sda</code> 。</li><li>而  <code>Ubuntu</code>  則是裝在  <code>/dev/sda4</code> 。</li><li>若當初在安裝  <code>Ubuntu</code>  時，有選擇另外分割  <code>Boot</code> ，那麼就會看到如例子中的  <code>/dev/sda5</code> ，反之則沒有。</li></ul></blockquote><blockquote><h3 id="step-4-mount-ubuntu-and-its-boot">Step. 4 - Mount Ubuntu and its Boot</h3><p>確認完計算機上的磁區後，就可以開始操作了。<br>首先先將  <code>Ubuntu</code>  mount 起來，以下的磁區請依個人在  <code>Step. 3</code>  所見更改。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mount</span> /dev/sda4 /mnt<span class="token function">sudo</span> <span class="token function">mount</span> /dev/sda5 /mnt/boot/efi <span class="token comment"># 若 Boot 有獨立分割才需要</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><blockquote><h3 id="step-5-安裝-grub">Step. 5 - 安裝 Grub</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> <span class="token function">chroot</span> /mnt$ grub-install /dev/sda <span class="token comment"># 請自行依照個人在 `Step. 3` 所見的 EFI 磁碟編號更改。</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>$ <span class="token function">update-grub</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><blockquote><h3 id="step-6-重新開機迎接-grub-的到來">Step. 6 - 重新開機，迎接 Grub 的到來 😃</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><hr><h2 id="安裝過程報錯">安裝過程報錯</h2><ul><li><code>cannot find efi directory</code><ul><li>這可能是因為 Grub 安裝程式抓不到你掛載下來的 EFI 目錄，這時請在  <code>grub-install</code>  後加上參數「 <code>--efi-directory=/mnt/boot/efi</code> 」來指定。</li></ul></li></ul><p>若還有其他錯誤，那麼請試著將路徑參數手動指定 (請自行確認計算機上的路徑)：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">grub-install --boot-directory<span class="token operator">=</span>/mnt/boot --efi-directory<span class="token operator">=</span>/mnt/boot/efi --target<span class="token operator">=</span>x86_64-efi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若錯誤依舊無法解決，那麼可能是在前面幾個步驟出錯，請自行再檢查一次，或者將錯誤訊息丟上 Google，以及到 Ubuntu 社群「<a href="https://askubuntu.com">askubuntu.com</a>」看看大家的討論。</p><hr><h2 id="不再自動進入-windows改為自動進入-ubuntu-開機選單呢">不再自動進入 Windows，改為自動進入 Ubuntu ！？開機選單呢！！</h2><p>編輯以下檔案：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/default/grub <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>找到「 <code>GRUB_TIMEOUT_STYLE=hidden</code> 」在前方加上「 <code>#</code> 」註解掉，即「 <code>#GRUB_TIMEOUT_STYLE=hidden</code> 」，保存並關閉。</p><p>在更早的版本中則是「 <code>GRUB_HIDDEN_TIMEOUT=0</code> 」，一樣將其註解為「 <code>#GRUB_HIDDEN_TIMEOUT=0</code> 」後保存。</p><p>沒意外的話就可以在 Reboot 之後看見 Grub 選單了！</p>]]></content>
    
    
    <summary type="html">安裝了 Linux + Windows 的雙系統，但卻不見開機選單？放心，很多人跟你一樣。</summary>
    
    
    
    <category term="Notes" scheme="https://blog.alpaca0x0.com/categories/Notes/"/>
    
    <category term="Computer Science" scheme="https://blog.alpaca0x0.com/categories/Notes/Computer-Science/"/>
    
    
    <category term="Windows" scheme="https://blog.alpaca0x0.com/tags/Windows/"/>
    
    <category term="Linux" scheme="https://blog.alpaca0x0.com/tags/Linux/"/>
    
    <category term="Grub" scheme="https://blog.alpaca0x0.com/tags/Grub/"/>
    
  </entry>
  
  <entry>
    <title>Simply setting up a Proxy Server with SSH</title>
    <link href="https://blog.alpaca0x0.com/posts/SSH-Proxy/"/>
    <id>https://blog.alpaca0x0.com/posts/SSH-Proxy/</id>
    <published>2021-08-29T15:57:57.000Z</published>
    <updated>2021-10-21T09:23:39.330Z</updated>
    
    <content type="html"><![CDATA[Did you know that SSH can make your host as a proxy server?<span id="more"></span><hr><h2 id="ssh">SSH</h2><p>Connecte to the remote host with SSH:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># ssh &lt;user-name>@&lt;host-ip></span><span class="token comment"># example</span><span class="token function">ssh</span> alpaca@192.168.0.2<span class="token comment"># the default port of SSH is 22, or you can use the parameter "-p" to specify the ssh port of the remote host.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="tcp-port-unix-socket-forward">TCP Port / Unix Socket forward</h2><p>Forward local TCP Port or Unix Socket with parameter “-L”.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-L <span class="token punctuation">[</span>bind_address:<span class="token punctuation">]</span>port:host:hostport-L <span class="token punctuation">[</span>bind_address:<span class="token punctuation">]</span>port:remote_socket-L local_socket:host:hostport-L local_socket:remote_socket<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>Specifies that connections to the given TCP port or Unix socket on the local (client) host are to be for-warded to the given host and port, or Unix socket, on the remote side.</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># example</span><span class="token function">ssh</span> -L <span class="token number">8877</span>:192.168.0.101:7766 <span class="token number">192.168</span>.0.102<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>In the example above, it will forward the connections that given in arg( <code>192.168.0.102</code> ) from local port  <code>8877</code>  to remote server port  <code>7766</code>  , and compelete the progress.</p><hr><h2 id="make-the-host-as-a-proxy-server-with-ssh-tunnel">Make the host as a proxy server with SSH (Tunnel)</h2><p>In SSH commands, we can use parameter “ <code>-D</code> ” to make a tunnel between local host and remote server.</p><blockquote><p>Specifies a local “dynamic” application-level port forwarding.</p></blockquote><p>For example:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># ssh &lt;user-name>@&lt;host-ip> [-D [bind_address:]port]</span><span class="token comment"># example</span><span class="token function">ssh</span> alpaca@123.123.123.123 -D <span class="token number">1234</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>We made a tunnel that connects host  <code>123.123.123.123</code> , and port of tunnel is  <code>1234</code> .</p><p>Now, we can take  <code>localhost:1234</code>  as a proxy server. (That can forward for our connection to  <code>123.123.123.123:21</code> .)</p>]]></content>
    
    
    <summary type="html">Did you know that SSH can make your host as a proxy server?</summary>
    
    
    
    <category term="Notes" scheme="https://blog.alpaca0x0.com/categories/Notes/"/>
    
    <category term="Computer Science" scheme="https://blog.alpaca0x0.com/categories/Notes/Computer-Science/"/>
    
    
    <category term="SSH" scheme="https://blog.alpaca0x0.com/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>Spotlight Effect 聚光燈效應</title>
    <link href="https://blog.alpaca0x0.com/posts/Spotlight-Effect/"/>
    <id>https://blog.alpaca0x0.com/posts/Spotlight-Effect/</id>
    <published>2021-07-26T07:06:39.000Z</published>
    <updated>2021-10-21T09:23:39.340Z</updated>
    
    <content type="html"><![CDATA[總是覺得別人在說的是自己，他們好像在看我，他們好像在討論我...<span id="more"></span><hr><h2 id="spotlight-effect">Spotlight Effect</h2><p><code>Spotlight Effect</code>  又稱  <code>聚光燈效應</code> 。<br>主要描述人們對於自己往往遠比對他人有著更大的焦點。</p><ul><li>當你在拍攝團體照時，看到照片的第一眼是找尋死黨，還是自己？</li><li>小時候當你剪完頭髮，到學校去，結果發現沒人注意到，這是為什麼？ (<s>邊緣</s>)</li><li>看著自己上台演講的錄像時，儘管別人表示你表現的很好，但自己仍會將過程中的缺點放大檢視。</li></ul><p>這些都可能是  <code>Spotlight Effect</code>  的表現。(過度害怕出錯也可能是因為如此)<br> 就好比一盞聚光燈打在身上，你認為周遭的人會將目光投放在自己身上，覺得自己的一舉一動受到注目，言行倍受審視。</p><p>即便說這很正常，因為很多人都會對自己有著更高的要求，但當這盞聚光燈太過強烈時，會帶給主角過大的壓力，可能會形成「<strong> <code>Glossophobia</code>  (公開演講恐懼症)</strong>」，嚴重可能會有「<strong> <code>Socialphobia</code>  (社交恐懼症)</strong>」。</p>]]></content>
    
    
    <summary type="html">總是覺得別人在說的是自己，他們好像在看我，他們好像在討論我...</summary>
    
    
    
    <category term="Psychology" scheme="https://blog.alpaca0x0.com/categories/Psychology/"/>
    
    <category term="Social-Psychology" scheme="https://blog.alpaca0x0.com/categories/Psychology/Social-Psychology/"/>
    
    
  </entry>
  
  <entry>
    <title>How to use GnuPG to sign files and messages？</title>
    <link href="https://blog.alpaca0x0.com/posts/GnuPG-Signing-Files-and-Messages/"/>
    <id>https://blog.alpaca0x0.com/posts/GnuPG-Signing-Files-and-Messages/</id>
    <published>2021-07-19T01:55:09.000Z</published>
    <updated>2021-10-21T09:23:39.280Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://zh.wikipedia.org/wiki/GnuPG#/media/File:Gnupg_logo.svg"><img src="cover.jpg" alt="GnuPG Logo, 圖源於 Wiki 維基百科"></a></p>用 GnuPG 簽署、驗證、加密、解密 你的檔案及訊息。<span id="more"></span><hr><h2 id="how-to-get-the-keypair">How to get the keypair?</h2><p>可以看看上一篇文章「<a href="/posts/GnuPG-Generating-PGP-Key/" title="How to use GnuPG to generate PGP key？">How to use GnuPG to generate PGP key？</a>」。</p><hr><h2 id="signing-files">Signing files</h2><p>假設要簽章的文件「 <code>hello.txt</code> 」其內容為：</p><pre class="line-numbers language-none"><code class="language-none">Hello World!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以使用該指令來簽署檔案：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --armor --sign --sign-with &lt;Key-ID> &lt;File-Name></span>gpg --armor --sign --sign-with 36EECBC209A936F5AF9B25A469219C5CB53AF7C3 hello.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>之後會得出簽章後的檔案「 <code>hello.txt.asc</code> 」<br>後綴「 <code>.asc</code> 」表示此檔案為「 <code>ASCII</code> 」格式，當然如果你不想要，也可以不使用「 <code>--armor, -a</code> 」參數。</p><ul><li><p><code>--sign</code>  指定要簽章的檔案 (即例子中的檔案  <code>hello.txt</code> )</p></li><li><p><code>--sign-with</code>  指定要簽章的鑰匙，也就是簽章人 (即例子中的金鑰  <code>36EECBC209A936F5AF9B25A469219C5CB53AF7C3</code> )</p></li><li><p>P.S.</p><ul><li>「 <code>36EECBC209A936F5AF9B25A469219C5CB53AF7C3</code> 」為我 (簽章者) 的 Key ID。</li><li>如果不使用「 <code>--armor, -a</code> 」參數，則預設輸出檔名應該會是「 <code>.gpg</code> 」後綴，且內容幾乎會是「<a href="https://en.wikipedia.org/wiki/Non-printing_character_in_word_processors">Non-printing Character</a>」，因此通常建議使用。</li><li>你也可以使用上篇文章說到的參數「 <code>--output, -o</code> 」來輸出自訂的檔名。</li></ul></li></ul><p>至於 <code>hello.txt.asc</code>  的內容… 大概長這樣：</p><pre class="line-numbers language-none"><code class="language-none">-----BEGIN PGP MESSAGE-----owEB4wEc&#x2F;pANAwAKAWkhnFy1OvfDAawcYgloZWxsby50eHRg9OQZSGVsbG8gV29ybGQhCokBswQAAQoAHRYhBDbuy8IJqTb1r5slpGkhnFy1OvfDBQJg9OQZAAoJEGkhnFy1OvfD2IwL&#x2F;2L7GahIvctkXMrzsBp+TG3PqhEzriNuyDagmqtmjuWaxo4dqTZO&#x2F;iw95YjCMrGthahkDJXi2&#x2F;wKmA9sy7Z&#x2F;zUh3GFhKCoATC&#x2F;Z&#x2F;&#x2F;nUVKmemtd2ftm9q2jtO610qOifJyxPhIn3NfXGebeM6Izstgawgg7mdcCh44f3dGn+R9ItIeDfSZ5gbZJaAVbBxGAXdjjJatJDP&#x2F;qIXielvQ5fVjay08c99t64iwrnXxklAKgVgQ7SVzPmWSNXjaUcBi3HUVcPn&#x2F;271VzNivnFxQYQKYm9RORkBqDrtdhiOKOD1bTNZD7RWyR3oAxTeO3kp80y9eUyx6EWMeikyEG8TbNQ2CH6HX+vc1rMLrQkzFSvwbjwT4h1LdYr5P3uFrhhZ1+BSekeYCW0+xsJ57&#x2F;1M0lg9Re7JvuH2JIjksG4Vvd3ssCywRGBr1XDHY2B6PfANptCwg2FiEvW6kRH0+hrxYsNVH2fVyl9DORR9HllYkIeNszEmhgQDqnlKoOJR&#x2F;GGBNGRHSQ&#x3D;&#x3D;&#x3D;j6WE-----END PGP MESSAGE-----<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由「 <code>-----BEGIN PGP MESSAGE-----</code> 」至「 <code>-----END PGP MESSAGE-----</code> 」中間就是簽章後的訊息。<br>並且「 <code>-----BEGIN PGP MESSAGE-----</code> 」後會空一行 (先不用管，在某些時候會被用來塞資訊)</p><hr><h2 id="verifying-files">Verifying files</h2><p>要驗證檔案只需要在擁有該檔案相對應<strong>公鑰</strong>的情況下，輸入指令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --verify &lt;File-Name></span>gpg --verify hello.txt.asc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>不需要指定解密金鑰嗎？<ul><li>正常情況 GunPG 會自動幫你檢測是否有該檔案所對應的金鑰，因此可以不必手動指定。</li></ul></li></ul><p>若是有著相對應金鑰的情況下，應該可以正常驗證該檔案：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg: Signature made Mon Jul <span class="token number">19</span> <span class="token number">10</span>:31:53 <span class="token number">2021</span> CSTgpg:                using RSA key 36EECBC209A936F5AF9B25A469219C5CB53AF7C3gpg: Good signature from <span class="token string">"Alpaca0x0 &lt;alpaca0x0@example.com>"</span> <span class="token punctuation">[</span>ultimate<span class="token punctuation">]</span>gpg: WARNING: not a detached signature<span class="token punctuation">;</span> <span class="token function">file</span> <span class="token string">'hello.txt'</span> was NOT verified<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>最後一行怎麼有個  <code>WARNING</code> ？<ul><li>那只是在提醒 GnuPG 所驗證的檔案為簽章過的「 <code>hello.txt.asc</code> 」而非「 <code>hello.txt</code> 」，因此提醒你無法確認  <code>hello.txt</code>  是否為原本的檔案。</li></ul></li></ul><hr><h2 id="detach-signing">Detach-Signing</h2><p>上述的簽章得出的檔案「 <code>hello.txt.asc</code> 」是<strong>涵蓋原始資訊</strong>的，因此你指需要提供該 <strong> <code>檔案</code> </strong> 及 <strong> <code>公鑰</code> </strong>，他人便可以<strong>驗證</strong>並<strong>查看</strong>內容。<br>不過若是你想將 <code>簽名</code> 及 <code>檔案</code> 分開存放，那麼可以加上「 <code>--detach-sign</code> 」參數。</p><p>若是簽章檔案時使用參數「 <code>--detach-sign</code> 」則表示使用「 <code>分離式簽章</code> 」：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># e.g.</span>gpg --armor --detach-sign --sign --sign-with 36EECBC209A936F5AF9B25A469219C5CB53AF7C3 hello.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>這麼一來，產生出的「 <code>hello.txt.asc</code> 」檔案僅僅是 <code>簽名</code> ，而不包含原始檔案的內容，因此你必須將 <code>公鑰</code> 、 <code>原始檔案</code> 、 <code>簽名</code> 一並提供，他人才能驗證及查看。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg: assuming signed data <span class="token keyword">in</span> <span class="token string">'hello.txt'</span>gpg: Signature made Mon Jul <span class="token number">19</span> <span class="token number">11</span>:04:55 <span class="token number">2021</span> CSTgpg:                using RSA key 36EECBC209A936F5AF9B25A469219C5CB53AF7C3gpg: Good signature from <span class="token string">"Alpaca0x0 &lt;alpaca0x0@example.com>"</span> <span class="token punctuation">[</span>ultimate<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>也可以注意到底下不會出現「 <code>gpg: WARNING: not a detached signature; file 'hello.txt' was NOT verified!</code> 」的訊息了，因為這時候的「 <code>hello.txt</code> 」是受到「 <code>hello.txt.asc</code> 」認證過的檔案，可以確保沒有受到竄改。</p><hr><h2 id="decrypting-files">Decrypting files</h2><p>上述的都是簽章及驗證，若是要查看內容則需要用到解密指令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --decrypt &lt;File-Name></span>gpg --decrypt hello.txt.asc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>與「 <code>--verify</code> 」一樣，不需要指定解密公鑰</p><p>若是有對應的公鑰，就可以看到內容及簽章資訊了：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Hello World<span class="token operator">!</span>gpg: Signature made Mon Jul <span class="token number">19</span> <span class="token number">12</span>:30:52 <span class="token number">2021</span> CSTgpg:                using RSA key 36EECBC209A936F5AF9B25A469219C5CB53AF7C3gpg: Good signature from <span class="token string">"Alpaca0x0 &lt;alpaca0x0@example.com>"</span> <span class="token punctuation">[</span>ultimate<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>當然也可以將結果輸出到指定檔案：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --output &lt;Output-File-Name> --decrypt &lt;Input-File-Name></span><span class="token comment"># gpg --decrypt &lt;Input-File-Name> > &lt;Output-File-Name></span>gpg --output hello.txt.dec --decrypt hello.txt.asc<span class="token comment"># or</span>gpg --decrypt hello.txt.asc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="encrypting">Encrypting</h2><ul><li>What is the difference between  <code>--encrypt</code>  and  <code>--sign</code> ?<ul><li><strong> <code>--encrypt</code> </strong> - <strong>Encrypt</strong> with <strong>Public-key</strong>, and <strong>Decrypt</strong> with <strong>Private-key</strong>.</li><li><strong> <code>--sign</code> </strong> - <strong>Encrypt</strong> with <strong>Private-key</strong>, and <strong>Decrypt</strong> with <strong>Public-key</strong>.</li></ul></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --armor --encrypt --recipient &lt;Key-ID> &lt;File-Name></span>gpg --armor --encrypt --recipient 36EECBC209A936F5AF9B25A469219C5CB53AF7C3 hello.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>p.s. 參數「 <code>--recipient, -r</code> 」為指定對象，如例子中指定要執行 <code>encrypt</code>  的公鑰，即「 <code>36EECBC209A936F5AF9B25A469219C5CB53AF7C3</code> 」。</p><hr><h2 id="sign-and-encrypt">Sign and Encrypt</h2><p>在使用「 <code>--sign</code> 」簽名時，可以搭配「 <code>--encrypt</code> 」使用。</p><p>若我要將檔案「 <code>hello.txt</code> 」簽名，並且我希望僅能由我的好友 Bob 接收該檔案，因此我使用 Bob 提供給我的公鑰「 <code>CEE24977933B19A42EEA8CB96DC577B036FDDE87</code> 」來<strong>將簽名後的檔案加密</strong>：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --armor --sign --encrypt --sign-with &lt;Your-Private-Key-ID> --recipient &lt;Recipient-Public-Key-ID> --encrypt &lt;File-Name></span>gpg --armor --sign --sign-with 36EECBC209A936F5AF9B25A469219C5CB53AF7C3 --recipient CEE24977933B19A42EEA8CB96DC577B036FDDE87 hello.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>則檔案「 <code>hello.txt.asc</code> 」僅能讓<strong>同時擁有</strong>  <code>我的公鑰</code>  及  <code>Bob 的私鑰</code>  兩把鑰匙的人解密。</p><p>p.s. 用「 <code>--recipient, -r</code> 」參數來指定 <code>--encrypt</code>  的對象，也就是欲用來加密的公鑰。</p><hr><h2 id="reference">Reference</h2><p>《GnuPG documentation》<a href="https://gnupg.org/documentation/manpage.html">https://gnupg.org/documentation/manpage.html</a></p>]]></content>
    
    
    <summary type="html">用 GnuPG 簽署、驗證、加密、解密 你的檔案及訊息。</summary>
    
    
    
    <category term="Tools Using" scheme="https://blog.alpaca0x0.com/categories/Tools-Using/"/>
    
    
    <category term="Cryptography" scheme="https://blog.alpaca0x0.com/tags/Cryptography/"/>
    
    <category term="PGP" scheme="https://blog.alpaca0x0.com/tags/PGP/"/>
    
  </entry>
  
  <entry>
    <title>How to use GnuPG to generate PGP key？</title>
    <link href="https://blog.alpaca0x0.com/posts/GnuPG-Generating-PGP-Key/"/>
    <id>https://blog.alpaca0x0.com/posts/GnuPG-Generating-PGP-Key/</id>
    <published>2021-07-16T09:55:09.000Z</published>
    <updated>2021-10-21T09:23:39.280Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://zh.wikipedia.org/wiki/GnuPG#/media/File:Gnupg_logo.svg"><img src="cover.jpg" alt="GnuPG Logo, 圖源於 Wiki 維基百科"></a></p>怎麼使用 GnuPG 生成 PGP 金鑰？<span id="more"></span><hr><h2 id="what-is-gnupg">What is GnuPG？</h2><p><code>GNU Privacy Guard</code>  簡稱  <code>GnuPG</code> 、 <code>GPG</code> ，主要是用於數位 <code>加密</code> 、 <code>簽章</code> 的軟體。(<a href="https://zh.wikipedia.org/wiki/%E5%85%AC%E5%BC%80%E5%AF%86%E9%92%A5%E5%8A%A0%E5%AF%86"> <code>Asymmetric cryptography</code> </a> 金鑰的管理)</p><p>更詳細介紹請見《<a href="https://zh.wikipedia.org/zh-tw/GnuPG">Wiki 維基百科 - GnuPG</a>》</p><hr><h2 id="install">Install</h2><p>Ubuntu</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> gnupg2<span class="token comment"># OR</span><span class="token function">apt-get</span> <span class="token function">install</span> gnupg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Mac</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> gnupg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="generating-a-new-keypair">Generating a new keypair</h2><ul><li>如果你想 <code>簡單快速</code> 的 <code>生成金鑰</code> ，可以使用指令：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg --gen-key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>想 <code>手動選擇</code> 更完整的選項可以使用指令：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg --full-gen-key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><p>如果是  <code>--full-gen-key</code>  則會顯示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Please <span class="token keyword">select</span> what kind of key you want:   <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> RSA and RSA <span class="token punctuation">(</span>default<span class="token punctuation">)</span>   <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> DSA and Elgamal   <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> DSA <span class="token punctuation">(</span>sign only<span class="token punctuation">)</span>   <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> RSA <span class="token punctuation">(</span>sign only<span class="token punctuation">)</span>  <span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span> Existing key from cardYour selection?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>輸入數字選擇自己要的 <code>加密演算法類型</code> ，或者直接按下 Enter 使用預設。</p><p>接著是輸入 <code>金鑰的長度</code> 及 <code>金鑰時效</code> 設定：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">RSA keys may be between <span class="token number">1024</span> and <span class="token number">4096</span> bits long.What keysize <span class="token keyword">do</span> you want? <span class="token punctuation">(</span><span class="token number">3072</span><span class="token punctuation">)</span> <span class="token comment"># 輸入金鑰位元長度，1024 ～ 4096 之間</span>Requested keysize is <span class="token number">3072</span> bits<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Please specify how long the key should be valid.         <span class="token number">0</span> <span class="token operator">=</span> key does not expire      <span class="token operator">&lt;</span>n<span class="token operator">></span>  <span class="token operator">=</span> key expires <span class="token keyword">in</span> n days      <span class="token operator">&lt;</span>n<span class="token operator">></span>w <span class="token operator">=</span> key expires <span class="token keyword">in</span> n weeks      <span class="token operator">&lt;</span>n<span class="token operator">></span>m <span class="token operator">=</span> key expires <span class="token keyword">in</span> n months      <span class="token operator">&lt;</span>n<span class="token operator">></span>y <span class="token operator">=</span> key expires <span class="token keyword">in</span> n yearsKey is valid for? <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># 選擇金鑰過期設定</span>Key does not expire at allIs this correct? <span class="token punctuation">(</span>y/N<span class="token punctuation">)</span> y <span class="token comment"># 輸入「y」確認</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接著就是輸入主要的資訊了 (使用  <code>--gen-key</code>  參數會直接跳到這)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Terminal</span>Real name: Alpaca0x0 <span class="token comment"># 你的名稱</span>Email address: alpaca0x0@example.com <span class="token comment"># 你的 Email</span>Comment: My First PGP Key. <span class="token comment"># 註釋 (使用 full-gen-key 參數才會顯示)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>最後確認資訊<br>若有誤可以輸入「 <code>N</code> 」修改 <code>名稱</code> ，輸入「 <code>E</code> 」修改  <code>Email</code> 。</p><p>輸入「 <code>O</code> 」進行確認</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">You selected this <span class="token environment constant">USER</span>-ID:    <span class="token string">"Alpaca0x0 &lt;alpaca0x0@example.com>"</span>Change <span class="token punctuation">(</span>N<span class="token punctuation">)</span>ame, <span class="token punctuation">(</span>E<span class="token punctuation">)</span>mail, or <span class="token punctuation">(</span>O<span class="token punctuation">)</span>kay/<span class="token punctuation">(</span>Q<span class="token punctuation">)</span>uit? O<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>之後會要求你輸入密碼，可以設定也可以留空。</p><p>完成後會顯示該金鑰的資訊：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pub   rsa3072 <span class="token number">2021</span>-07-16 <span class="token punctuation">[</span>SC<span class="token punctuation">]</span> <span class="token punctuation">[</span>expires: <span class="token number">2023</span>-07-16<span class="token punctuation">]</span>      36EECBC209A936F5AF9B25A469219C5CB53AF7C3uid                      Alpaca0x0 <span class="token operator">&lt;</span>alpaca0x0@example.com<span class="token operator">></span>sub   rsa3072 <span class="token number">2021</span>-07-16 <span class="token punctuation">[</span>E<span class="token punctuation">]</span> <span class="token punctuation">[</span>expires: <span class="token number">2023</span>-07-16<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>「 <code>rsa3072</code> 」指的是「 <code>RSA</code> 」算法，金鑰長度「 <code>3072</code> 」位元</li><li>「 <code>36EECBC209A936F5AF9B25A469219C5CB53AF7C3</code> 」就是  <code>Key ID</code></li></ul><hr><h2 id="displaying-keys">Displaying keys</h2><h3 id="displaying-public-keys">Displaying public keys</h3><p>要 <code>查看</code> 已有的 <code>公鑰</code> ，使用指令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg --list-public-keys<span class="token comment"># OR</span>gpg --list-keys<span class="token comment"># OR</span>gpg -k<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>顯示</code> 已有的 <code>公鑰</code> ：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pub   rsa3072 <span class="token number">2021</span>-07-16 <span class="token punctuation">[</span>SC<span class="token punctuation">]</span> <span class="token punctuation">[</span>expires: <span class="token number">2023</span>-07-16<span class="token punctuation">]</span>      36EECBC209A936F5AF9B25A469219C5CB53AF7C3uid           <span class="token punctuation">[</span>ultimate<span class="token punctuation">]</span> Alpaca0x0 <span class="token operator">&lt;</span>alpaca0x0@example.com<span class="token operator">></span>sub   rsa3072 <span class="token number">2021</span>-07-16 <span class="token punctuation">[</span>E<span class="token punctuation">]</span> <span class="token punctuation">[</span>expires: <span class="token number">2023</span>-07-16<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>也可以在後方加上 <code>關鍵字</code>  ( <code>名稱</code> 、 <code>Email</code> )：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --list-keys &lt;Keyword></span>gpg --list-keys alpaca0x0<span class="token comment"># OR</span>gpg --list-keys alpaca<span class="token comment"># OR</span>gpg --list-keys example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="displaying-secret-keys">Displaying secret keys</h3><p><code>查看</code> 已有的 <code>私鑰</code> ，使用指令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg --list-secret-keys <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>與  <code>--list-public-keys</code>  用法類似，一樣可以加入關鍵字查詢：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --list-secret-keys &lt;Keyword></span>gpg --list-secret-keys alpaca0x0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="exporting-key">Exporting key</h2><h3 id="exporting-public-key">Exporting public key</h3><p>若要 <code>導出公鑰</code> ，則使用指令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg --export <span class="token operator">&lt;</span>Key-ID<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但這樣導出的密鑰是  <code>binary format</code> ，所以使用參數「 <code>--armor, -a</code> 」來使其輸出為  <code>ASCII-Code format</code> 。<br>使用「 <code>--output, -o</code> 」或者「 <code>&gt;</code> 」將輸出結果寫入檔案：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --export --armor &lt;Key-ID> > &lt;Output-File-Name></span><span class="token comment"># gpg --export --armor --output &lt;Output-File-Name> &lt;Key-ID></span>gpg --export --armor --output public_key.pub 36EECBC209A936F5AF9B25A469219C5CB53AF7C3<span class="token comment"># OR</span>gpg --export --armor 36EECBC209A936F5AF9B25A469219C5CB53AF7C3 <span class="token operator">></span> public_key.pub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exporting-secret-key">Exporting secret key</h3><p><code>導出私鑰</code> 使用指令：</p><pre class="line-numbers language-none"><code class="language-none">gpg --export-secret-keys &lt;Key-ID&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>與  <code>--export</code>  用法相同<br> p.s. 若是當初生成鑰匙時有輸入密碼，則導出時也需要輸入驗證。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># e.g.</span>gpg --export-secret-keys --armor 36EECBC209A936F5AF9B25A469219C5CB53AF7C3 <span class="token operator">></span> secret_key.asc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="sending-the-key-to-the-key-server">Sending the key to the key server</h2><p><code>公鑰</code> 可以上傳至公開的  <code>Keyserver</code>  上讓他人能方便下載你的公鑰。<br>上傳的指令是：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg --send-keys 0x<span class="token operator">&lt;</span>Key-ID<span class="token operator">></span><span class="token comment"># 可以使用「--keyserver」參數指定上傳的伺服器</span>gpg --send-keys --keyserver <span class="token operator">&lt;</span>Server<span class="token operator">></span> 0x<span class="token operator">&lt;</span>Key-ID<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>這邊要特別注意的是，大多數時候，在  <code>&lt;Key-ID&gt;</code>  的前方要加上「 <code>0x</code> 」(Hexadecimal)。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># e.g.</span>gpg --send-keys --keyserver pgp.mit.edu 0x36EECBC209A936F5AF9B25A469219C5CB53AF7C3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="deleting-key">Deleting key</h2><p><code>刪除</code> 本地的 <code>公鑰</code> ，使用指令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --delete-key &lt;Key-ID></span>gpg --delete-keys 36EECBC209A936F5AF9B25A469219C5CB53AF7C3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但當我們執行時，會發現終端返回這則訊息：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpg: there is a secret key <span class="token keyword">for</span> public key <span class="token string">"36EECBC209A936F5AF9B25A469219C5CB53AF7C3"</span><span class="token operator">!</span>gpg: use option <span class="token string">"--delete-secret-keys"</span> to delete it first.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>這是因為你還留有該 <code>公鑰</code> 的 <code>私鑰</code> ，所以先刪除 <code>私鑰</code> ，再刪除 <code>公鑰</code> ：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Delete secret keys</span>gpg --delete-secret-keys <span class="token operator">&lt;</span>Key-ID<span class="token operator">></span><span class="token comment"># Delete public keys</span>gpg --delete-keys <span class="token operator">&lt;</span>Key-ID<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># e.g.</span>gpg --delete-secret-keys 36EECBC209A936F5AF9B25A469219C5CB53AF7C3gpg --delete-keys 36EECBC209A936F5AF9B25A469219C5CB53AF7C3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>或者使用「 <code>--delete-secret-and-public-keys</code> 」一次刪除 <code>公私鑰</code> ：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --delete-secret-and-public-keys &lt;Key-ID></span>gpg --delete-secret-and-public-keys 36EECBC209A936F5AF9B25A469219C5CB53AF7C3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="importing-key">Importing key</h2><p>要匯入金鑰主要有兩種方式</p><p>從檔案匯入 (本地端匯入)：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --import &lt;Key-File></span>gpg --import Private_OR_Public.key<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>從 Key-Server 上匯入 (遠端匯入)：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --keyserver &lt;Server> --recv-key 0x&lt;Key-ID></span>gpg --keyserver keyserver.ubuntu.com --recv-key 0xA91A9E8A0EE6BAB3742464861DF369D42499F3F1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果要查詢該 Key-Server 上的鑰匙資訊，可以使用指令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># gpg --keyserver &lt;Server> --search-key &lt;Key-ID></span>gpg --keyserver keyserver.ubuntu.com --search-key 0xA91A9E8A0EE6BAB3742464861DF369D42499F3F1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="reference">Reference</h2><p>《GnuPG documentation》<a href="https://gnupg.org/documentation/manpage.html">https://gnupg.org/documentation/manpage.html</a></p>]]></content>
    
    
    <summary type="html">怎麼使用 GnuPG 生成 PGP 金鑰？</summary>
    
    
    
    <category term="Tools Using" scheme="https://blog.alpaca0x0.com/categories/Tools-Using/"/>
    
    
    <category term="Cryptography" scheme="https://blog.alpaca0x0.com/tags/Cryptography/"/>
    
    <category term="PGP" scheme="https://blog.alpaca0x0.com/tags/PGP/"/>
    
  </entry>
  
  <entry>
    <title>「𝝿」到底是什麼？度、弧度又是...？</title>
    <link href="https://blog.alpaca0x0.com/posts/PI/"/>
    <id>https://blog.alpaca0x0.com/posts/PI/</id>
    <published>2021-06-09T08:09:07.000Z</published>
    <updated>2021-10-21T09:23:39.310Z</updated>
    
    <content type="html"><![CDATA[圓周率「𝝿」是什麼？而熟悉的一圈為 360度 是怎麼被訂定的？ 弧度又是什麼？<span id="more"></span><hr><h2 id="圓周率π">圓周率「𝝿」</h2><p>圓周率<strong>約</strong>為「 <code>3.1415926</code> 」，它被歸類在<a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E5%AD%A6%E5%B8%B8%E6%95%B0"><strong>常數</strong></a>中，且是<a href="https://zh.wikipedia.org/wiki/%E7%84%A1%E7%90%86%E6%95%B8"><strong>無理數</strong></a>，是個 <code>無限不循環小數</code> 同時也是一個<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E8%B6%8A%E6%95%B8"> <code>超越數</code> </a>，數學用小寫希臘字母「 <code>𝝿</code> 」符號表示，發音相似於「 <code>pie</code> 」，源自希臘語「 <code>περίμετρος</code> ( <code>周長</code> )」的首字母。</p><hr><h2 id="圓周率的意思是">圓周率的意思是？</h2><p>圓周率讓人感覺很抽象，但其實就只是指「<strong>一半的圓周</strong>與<strong>半徑</strong>之<strong>比</strong>」，又或者可以說是「<strong>圓周</strong>與<strong>直徑</strong>之<strong>比</strong>」。也就是代表一圓的 <code>周長</code> 與 <code>直徑</code> 的 <code>比例關係</code>  ( <code>比值</code> )。</p><p>由於 <code>周長</code> 是該圓 <code>直徑</code> 的 <code>3.1415926....</code>  倍，因此將這個無理數定義成「 <code>𝝿</code> 」符號，命名為 <code>圓周率</code> 。所以才會出現 <code>周長</code> 算 <code>圓周長</code> 的公式「 <code>2r 𝝿</code> 」。( <code>r</code>  為半徑)</p><hr><h2 id="degree-與-radian">degree 與 radian</h2><p><code>degree</code>  與  <code>radian</code>  都是表示 <code>角</code> 的大小，將其 <code>單位量化</code> 後的表示方式。</p><p>其中較常被使用的是「 <code>degree</code> 」也就是所謂的「 <code>度</code> 度量」，簡稱「 <code>deg</code> 」。(e.g. 一圈等於 360 deg)<br> 而「 <code>radian</code> 」中文翻譯為「 <code>弧度</code> 」或者「 <code>弳度</code> 」，簡稱「 <code>rad</code> 」。<br>其中「 <code>弳</code> 」這個字很有趣，它是<strong>弧度</strong>的「 <code>弧</code> 」與<strong>半徑</strong>的「 <code>徑</code> 」取字旁而選的字。</p><hr><h2 id="圓弧-產生出-角度單位">圓弧 產生出 角度單位</h2><p>一開始的圓在訂定角度單位之前，先稱某角為  <code>theta</code> ，該圓半徑為  <code>r</code> ，而  <code>theta</code>  與某弧長  <code>S</code>  與  <code>r</code>  有絕對的 <code>比例關係</code> ，這個才是一切的<strong>重點</strong>…</p><p>「角  <code>theta</code>  對  <code>S</code>  與  <code>r</code>  之間的 <code>比例關係</code> 」才是這些<strong>角度單位</strong>的指標。(當 <code>半徑 r 相同</code> ，且 <code>弧長 S 越長</code> ，則  <code>角 theta 越大</code> )</p><blockquote><ul><li><strong>弳 (radian, rad)</strong><br> 得到了比例「 <code>S / r</code> 」後… 欸等等！這麼一來不就是一個 <code>單位量</code> 了嗎？<br>對的，這個 <code>單位量</code> 就命名做「 <code>radian</code> 」簡稱「 <code>rad</code> 」中文稱作「 <code>弳</code> 」。<br>因此 <code>角 theta</code>  可以表示成「 <code>theta = S / r</code> 」即是使用 <code>弳度</code> 表示該  <code>theta</code>  角的大小。<br>就這樣，現在大家所使用的「 <code>弧度</code> 」被定義了， <code>弧</code> 衍生出了表示 <code>角大小</code> 的 <code>單位量</code> 。</li></ul><p>若定義 <code>圓弧 S</code>  為 <code>圓周長</code> ，可以寫成「 <code>S = 2r 𝝿</code> 」。<br>因此將表示 <code>角大小</code> 的 <code>弳度</code> 式子「 <code>theta = S / r</code> 」寫作「 <code>theta = (2r 𝝿) / r</code> 」化簡得「 <code>theta = 2 𝝿</code> 」。因此 <code>一周角</code> 相當於「 <code>2 𝝿</code> 」單位  <code>rad</code>  。</p></blockquote><blockquote><ul><li><strong>度 (degree, deg)</strong><br> 若我們將 <code>圓周長 S</code>  劃分成  <code>360 等分</code> <br>並且將其中 <code>一等份</code> 所對應的 <code>角度大小</code> 當作一個 <code>單位</code> ，這單位就叫做 <code>degree</code>  簡稱 <code>deg</code> ，也就是大家目前常用的 <code>度</code> 度量。<br> <code>1 deg</code>  也可以寫作 「 <code>1°</code> 」，所對應的弧長為  <code>(2 𝝿 / 360) / r</code> 。</li></ul></blockquote><hr><h2 id="補充">補充</h2><blockquote><h4 id="梯度-gradian-grad">梯度 (Gradian, GRAD)</h4><p>這也是一個單位，其定義為 <code>一圓周長</code> 平均分為  <code>400</code>  等分，每一等份為  <code>1 grad</code>  。<br>由於寫在這是因為，這東西真的比較少人在用，就不聚焦在這了。</p></blockquote><blockquote><h4 id="換算">換算</h4><p><strong> <code>一周角</code> </strong> = <strong> <code>360 deg</code> </strong> = <strong> <code>2 𝝿 rad</code> </strong> = <strong> <code>400 grad</code> </strong></p></blockquote><blockquote><h4 id="無單位">無單位</h4><p>有些人不能理解為什麼說  <code>deg</code>  與  <code>rad</code>  是 <code>無單位</code> 的… (<s>對就是我</s>)<br> 就好比常見的寬螢幕 <code>長寬比</code> 為「 <code>16:9</code> 」，試問  <code>16</code>  與  <code>9</code>  的單位是什麼一樣。<br>「 <code>S / r</code> 」該算式只是用來表示 <code>圓周長</code> 與 <code>半徑</code> 之間的比例關係，自然就不需要有 <code>單位</code> 。</p></blockquote><hr><h2 id="參考資料">參考資料</h2><p>《Wiki 維基百科 - 圓周率》<a href="https://zh.wikipedia.org/wiki/%E5%9C%93%E5%91%A8%E7%8E%87">https://zh.wikipedia.org/wiki/ 圓周率</a></p>]]></content>
    
    
    <summary type="html">圓周率「𝝿」是什麼？而熟悉的一圈為 360度 是怎麼被訂定的？ 弧度又是什麼？</summary>
    
    
    
    <category term="Learning" scheme="https://blog.alpaca0x0.com/categories/Learning/"/>
    
    <category term="Mathematics" scheme="https://blog.alpaca0x0.com/categories/Learning/Mathematics/"/>
    
    
    <category term="Mathematics" scheme="https://blog.alpaca0x0.com/tags/Mathematics/"/>
    
  </entry>
  
  <entry>
    <title>《SQL Basics-03》UPDATE、ALTER、DROP</title>
    <link href="https://blog.alpaca0x0.com/posts/SQL-Basic-03/"/>
    <id>https://blog.alpaca0x0.com/posts/SQL-Basic-03/</id>
    <published>2021-05-25T09:48:08.000Z</published>
    <updated>2021-10-21T09:23:39.330Z</updated>
    
    <content type="html"><![CDATA[一些基礎常見的 SQL 語法。<span id="more"></span><hr><h2 id="示範的資料">示範的資料</h2><p>目前資料表內有以下資料：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">phone</th><th style="text-align:left">name</th><th style="text-align:left">age</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">0123456789</td><td style="text-align:left">新之助</td><td style="text-align:left">5</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">Anonymous</td><td style="text-align:left">19</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">向日葵</td><td style="text-align:left">0</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">0111222333</td><td style="text-align:left">美冴</td><td style="text-align:left">29</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">0444555666</td><td style="text-align:left">廣志</td><td style="text-align:left">35</td></tr></tbody></table><p>如果可以的話也試著一起做做看。</p><hr><h2 id="修改">修改</h2><h3 id="修改資料筆">修改資料筆</h3><p>修改資料筆需要使用「 <code>UPDATE</code> 」語法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">UPDATE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">SET</span> <span class="token punctuation">`</span>欄位<span class="token number">1</span><span class="token punctuation">`</span> <span class="token operator">=</span> 欄位<span class="token number">1</span>新的值<span class="token punctuation">,</span> <span class="token punctuation">`</span>欄位<span class="token number">2</span><span class="token punctuation">`</span> <span class="token operator">=</span> 欄位<span class="token number">2</span>新的值<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">WHERE</span> 修改條件<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="範例-修改資料筆">範例 - 修改資料筆</h3><p>輸入語法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">UPDATE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">SET</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token string">"小白"</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">WHERE</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">LIKE</span> <span class="token string">'%onym%'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>原資料：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">phone</th><th style="text-align:left">name</th><th style="text-align:left">age</th></tr></thead><tbody><tr><td style="text-align:left">2</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">Anonymous</td><td style="text-align:left">19</td></tr></tbody></table><p>被更改為：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">phone</th><th style="text-align:left">name</th><th style="text-align:left">age</th></tr></thead><tbody><tr><td style="text-align:left">2</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">小白</td><td style="text-align:left">0</td></tr></tbody></table><p>條件「<strong>`name` LIKE  <code>'%onym%'</code> </strong>」表示模糊查詢  <code>name</code>  欄位「 <code>含有 &quot;onym&quot;</code> 」的資料筆。<br>ps. 若沒有寫  <code>WHERE</code>  條件，則會更改所有資料。<br>所有資料的欄位  <code>name</code>  會變「 <code>小白</code> 」，欄位  <code>age</code>  會變「 <code>0</code> 」…</p><h3 id="修改欄位">修改欄位</h3><h4 id="新增欄位">新增欄位</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span>欄位名稱<span class="token punctuation">`</span> 資料型態<span class="token punctuation">(</span>長度<span class="token punctuation">)</span> 屬性<span class="token number">1</span> 屬性<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="範例-新增欄位">範例 - 新增欄位</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span>name_jp<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>資料表欄位多出「 <code>name_jp</code> 」：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">phone</th><th style="text-align:left">name</th><th style="text-align:left">age</th><th style="text-align:left">jp_name</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">0123456789</td><td style="text-align:left">新之助</td><td style="text-align:left">5</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">小白</td><td style="text-align:left">0</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">向日葵</td><td style="text-align:left">0</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">0111222333</td><td style="text-align:left">美冴</td><td style="text-align:left">29</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">0444555666</td><td style="text-align:left">廣志</td><td style="text-align:left">35</td><td style="text-align:left"><em>NULL</em></td></tr></tbody></table><h4 id="修改欄位-2">修改欄位</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> CHANGE <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span>舊欄位名稱<span class="token punctuation">`</span><span class="token punctuation">`</span>新欄位名稱<span class="token punctuation">`</span> 新資料形態<span class="token punctuation">(</span>長度<span class="token punctuation">)</span> 屬性<span class="token number">1</span> 屬性<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="範例-修改欄位">範例 - 修改欄位</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> CHANGE <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span>phone<span class="token punctuation">`</span><span class="token punctuation">`</span>phone<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>則資料欄位  <code>phone</code>  由型態「 <code>char(10)</code> 」更改至「 <code>varchar(11)</code> 」。</p><h4 id="刪除欄位">刪除欄位</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span>欄位名稱<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="範例-刪除欄位">範例 - 刪除欄位</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>欄位「 <code>age</code> 」被刪除了：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">phone</th><th style="text-align:left">name</th><th style="text-align:left">jp_name</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">0123456789</td><td style="text-align:left">新之助</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">小白</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">向日葵</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">0111222333</td><td style="text-align:left">美冴</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">0444555666</td><td style="text-align:left">廣志</td><td style="text-align:left"><em>NULL</em></td></tr></tbody></table><hr><h2 id="刪除">刪除</h2><h3 id="刪除資料筆">刪除資料筆</h3><p>刪除資料筆使用的語法為「 <code>DELETE</code> 」：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> 刪除條件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="範例-刪除資料筆">範例 - 刪除資料筆</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>phone<span class="token punctuation">`</span> <span class="token operator">IS</span> <span class="token boolean">NULL</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ps. 「<strong> <code>IS NULL</code> </strong>」這個寫法表示比對值為  <code>NULL (空值)</code> ，等同於「<strong>`phone`  <code>= &quot;&quot;</code> </strong>」。</p><p>原資料為：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">phone</th><th style="text-align:left">name</th><th style="text-align:left">jp_name</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">0123456789</td><td style="text-align:left">新之助</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">小白</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">向日葵</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">0111222333</td><td style="text-align:left">美冴</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">0444555666</td><td style="text-align:left">廣志</td><td style="text-align:left"><em>NULL</em></td></tr></tbody></table><p>刪除後：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">phone</th><th style="text-align:left">name</th><th style="text-align:left">jp_name</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">0123456789</td><td style="text-align:left">新之助</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">0111222333</td><td style="text-align:left">美冴</td><td style="text-align:left"><em>NULL</em></td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">0444555666</td><td style="text-align:left">廣志</td><td style="text-align:left"><em>NULL</em></td></tr></tbody></table><p>當然，如同  <code>UPDATE</code>  語法一樣，<strong>沒有</strong>指定  <code>WHERE</code>  刪除條件，則會 <code>刪除全部</code> ！</p><h3 id="刪除資料表">刪除資料表</h3><p>刪除資料表使用的是「 <code>DROP</code> 」語法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="刪除資料庫">刪除資料庫</h3><p>刪除資料庫一樣使用「 <code>DROP</code> 」語法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token punctuation">`</span>資料庫名稱<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">一些基礎常見的 SQL 語法。</summary>
    
    
    
    <category term="Computer Science" scheme="https://blog.alpaca0x0.com/categories/Computer-Science/"/>
    
    <category term="SQL" scheme="https://blog.alpaca0x0.com/categories/Computer-Science/SQL/"/>
    
    <category term="Basics of SQL" scheme="https://blog.alpaca0x0.com/categories/Computer-Science/SQL/Basics-of-SQL/"/>
    
    
    <category term="SQL" scheme="https://blog.alpaca0x0.com/tags/SQL/"/>
    
    <category term="Database" scheme="https://blog.alpaca0x0.com/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>《SQL Basics-02》SELECT、LIKE</title>
    <link href="https://blog.alpaca0x0.com/posts/SQL-Basic-02/"/>
    <id>https://blog.alpaca0x0.com/posts/SQL-Basic-02/</id>
    <published>2021-05-25T09:47:08.000Z</published>
    <updated>2021-10-21T09:23:39.330Z</updated>
    
    <content type="html"><![CDATA[一些基礎常見的 SQL 語法。<span id="more"></span><hr><h2 id="查詢">查詢</h2><p>要在資料表內查詢資料筆，則需要用到「<strong> <code>SELECT</code> </strong>」語法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token punctuation">`</span>查詢欄位<span class="token number">1</span><span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>查詢欄位<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">`</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> 查詢條件<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>而查詢的欄位也可以填入「<strong> <code>*</code> </strong>」來表示查詢「 <code>全部欄位</code> 」：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱 <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>查詢條件<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>至於條件… 各種寫法，常見的寫法為  <code>比對資料值相符與否</code> 。</p><h3 id="範例-比對數字">範例 - 比對數字</h3><p>利用上一篇文章「<a href="/posts/SQL-Basic-01/" title="《SQL Basics-01》CREATE、INSERT">《SQL Basics-01》CREATE、INSERT</a>」中所說的語法，陸續寫入幾筆資料後，目前的資料表內容為：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">phone</th><th style="text-align:left">name</th><th style="text-align:left">age</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">0123456789</td><td style="text-align:left">新之助</td><td style="text-align:left">5</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">Anonymous</td><td style="text-align:left">19</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">向日葵</td><td style="text-align:left">0</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">0111222333</td><td style="text-align:left">美冴</td><td style="text-align:left">29</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">0444555666</td><td style="text-align:left">廣志</td><td style="text-align:left">35</td></tr></tbody></table><p>輸入查詢語法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Database Server 返回以下結果：</p><table><thead><tr><th style="text-align:left">name</th><th style="text-align:left">age</th></tr></thead><tbody><tr><td style="text-align:left">Anonymous</td><td style="text-align:left">19</td></tr><tr><td style="text-align:left">美冴</td><td style="text-align:left">29</td></tr><tr><td style="text-align:left">廣志</td><td style="text-align:left">35</td></tr></tbody></table><p>因為  <code>WHERE</code>  後方所寫的查詢條件為「 <code>age</code> 」的值須 <code>大於</code> 「10」，<br>因此  <code>age</code>  小於等於 10 的資料筆將不顯示。</p><p><code>大於</code> 使用「 <code>&gt;</code> 」； <code>小於</code> 使用「 <code>&lt;</code> 」；<br> <code>等於</code> 使用「 <code>=</code> 」； <code>不等於</code> 使用「 <code>!=</code> 」或「 <code>&lt;&gt;</code> 」；<br> <code>大於等於</code> 使用「 <code>&gt;=</code> 」； <code>小於等於</code> 使用「 <code>&lt;=</code> 」；</p><p>ps. 若不指定查詢條件，則表示查詢全部：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Database Server 返回以下結果：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">name</th><th style="text-align:left">age</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">新之助</td><td style="text-align:left">5</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">Anonymous</td><td style="text-align:left">19</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">向日葵</td><td style="text-align:left">0</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">美冴</td><td style="text-align:left">29</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">廣志</td><td style="text-align:left">35</td></tr></tbody></table><h3 id="範例-比對字串">範例 - 比對字串</h3><p>輸入查詢語法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token string">"新之助"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Database Server 返回以下結果：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">name</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">新之助</td></tr></tbody></table><p>不等於的字串查詢：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">!=</span> <span class="token string">"Anonymous"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Database Server 返回以下結果：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">name</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">新之助</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">向日葵</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">美冴</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">廣志</td></tr></tbody></table><h3 id="範例-模糊比對">範例 - 模糊比對</h3><p>當有時候我們<strong>不確定</strong>目標欄位的<strong>值</strong>時，我們可以用<strong>部份特徵</strong>來比對。<br>要模糊查詢則是使用「 <code>LIKE</code> 」語法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>phone<span class="token punctuation">`</span> <span class="token operator">LIKE</span> <span class="token string">"01%"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Database Server 返回以下結果：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">phone</th><th style="text-align:left">name</th><th style="text-align:left">age</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">0123456789</td><td style="text-align:left">新之助</td><td style="text-align:left">5</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">0111222333</td><td style="text-align:left">美冴</td><td style="text-align:left">29</td></tr></tbody></table><p>百分號「 <code>%</code> 」表示任意字元比對  <code>0</code>  次或  <code>0 次以上</code> 。<br>該語法的意思是，查詢  <code>phone</code>  的值為  <code>01 開頭</code>  的資料筆。<br>所以假設「 <code>蘋果%</code> 」可以配對「 <code>蘋果</code> 」、「 <code>蘋果汁</code> 」、「 <code>蘋果派不好吃</code> 」，但 <code>不</code> 能配對「 <code>青蘋果</code> 」，因為「 <code>青蘋果</code> 」開頭並非是「 <code>蘋果</code> 」，若要配對它，則可以寫成「 <code>%蘋果%</code> 」。</p><p>如果輸入以下語法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token operator">LIKE</span> <span class="token string">"_9"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Database Server 返回以下結果：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">phone</th><th style="text-align:left">name</th><th style="text-align:left">age</th></tr></thead><tbody><tr><td style="text-align:left">2</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">Anonymous</td><td style="text-align:left">19</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">0111222333</td><td style="text-align:left">美冴</td><td style="text-align:left">29</td></tr></tbody></table><p>底線「 <code>_</code> 」表示任意字元比對  <code>1</code>  次。<br>該語法表示，查詢  <code>age</code>  欄位「 <code>第二字為 9</code> 」的結果。<br>所以「 <code>_9</code> 」可以配對「 <code>39</code> 」、「 <code>59</code> 」但不能配對「 <code>22</code> 」、「 <code>9</code> 」，當然也不能配對「 <code>193</code> 」，如果要配對「 <code>193</code> 」則須寫做「 <code>_9_</code> 」或者「 <code>_9%</code> 」。</p>]]></content>
    
    
    <summary type="html">一些基礎常見的 SQL 語法。</summary>
    
    
    
    <category term="Computer Science" scheme="https://blog.alpaca0x0.com/categories/Computer-Science/"/>
    
    <category term="SQL" scheme="https://blog.alpaca0x0.com/categories/Computer-Science/SQL/"/>
    
    <category term="Basics of SQL" scheme="https://blog.alpaca0x0.com/categories/Computer-Science/SQL/Basics-of-SQL/"/>
    
    
    <category term="SQL" scheme="https://blog.alpaca0x0.com/tags/SQL/"/>
    
    <category term="Database" scheme="https://blog.alpaca0x0.com/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>《SQL Basics-01》CREATE、INSERT</title>
    <link href="https://blog.alpaca0x0.com/posts/SQL-Basic-01/"/>
    <id>https://blog.alpaca0x0.com/posts/SQL-Basic-01/</id>
    <published>2021-05-25T09:46:08.000Z</published>
    <updated>2021-10-21T09:23:39.330Z</updated>
    
    <content type="html"><![CDATA[一些基礎常見的 SQL 語法。<span id="more"></span><hr><h2 id="創建">創建</h2><h3 id="創建資料庫">創建資料庫</h3><p>創建使用的是「<strong> <code>CREATE</code> </strong>」語法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token punctuation">`</span>資料庫名稱<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="創建資料表及欄位">創建資料表及欄位</h3><p>由於要先指定資料庫才能使用裡面的資料表，所以先選擇資料庫：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> <span class="token punctuation">`</span>資料庫名稱<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之後創建資料表，創建格式如下：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>欄位<span class="token number">1</span>名稱<span class="token punctuation">`</span> 資料型態<span class="token punctuation">(</span>長度<span class="token punctuation">)</span> 屬性<span class="token number">1</span> 屬性<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token punctuation">`</span>欄位<span class="token number">2</span>名稱<span class="token punctuation">`</span> 資料型態<span class="token punctuation">(</span>長度<span class="token punctuation">)</span> 屬性<span class="token number">1</span> 屬性<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="範例">範例</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span><span class="token punctuation">`</span>phone<span class="token punctuation">`</span> <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'Anonymous'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="語法說明">語法說明</h3><p>欄位格式為「<strong> <code>欄位名稱</code>   <code>資料類別(長度)</code>   <code>屬性1</code>   <code>屬性2...</code> </strong>」。每筆資料以「<strong> <code>,</code> </strong>」區隔。</p><ul><li><p>欄位「 <code>id</code> 」為「 <code>int</code> 」表示「 <code>整數</code> 」，範圍為「 <code>-2,147,483,648</code>  ~  <code>2,147,483,647</code> 」。<br>屬性 「 <code>PRIMARY KEY</code> 」則表示  <code>主鍵</code> ，同時加上「 <code>AUTO_INCREMENT</code> 」使其能在新增一筆新資料時，<strong>自動累加</strong> id 以確保資料筆之間的 id 值唯一。</p></li><li><p>欄位「 <code>phone</code> 」為「 <code>char</code> 」表示「 <code>字元</code> 」，最大字元長度為「 <code>255</code> 」。在後方有「 <code>(10)</code> 」則限制其長度為 10 。(ps. 若長度 <code>不足</code>  10 則會自動補足 10，總之在儲存上 <code>佔用的容量是固定的</code> )</p></li><li><p>而「 <code>name</code> 」欄位同樣是字元，但寫作「 <code>varchar</code> 」，最大字元長度為「 <code>65535</code> 」，差別在於資料儲存上，若字元長度不足 20 ，則只會佔用 <code>資料的字元長度大小</code> ，相較於「 <code>char</code> 」更為彈性，通常建議使用這個類別而非「 <code>char</code> 」。<br>屬性「 <code>DEFAULT</code> 」意思為「 <code>預設</code> 」。在新增資料筆時，若沒有指定該欄位的情況下，會自動寫入預設值，舉上述例子，當沒有指定「 <code>name</code> 」欄位寫入時，該欄位將自動寫入「 <code>Anonymous</code> 」。</p></li><li><p>最後的「 <code>age</code> 」欄位屬性「 <code>NOT NULL</code> 」表示該欄位 <code>不能為空值</code> 。<br>若要表示該資料可以為空，則使用「 <code>NULL</code> 」屬性。<br>若沒有特別指定，則使用系統預設，通常為「 <code>NULL</code> 」屬性。<br>(ps.  <code>id</code>  雖然沒有該屬性，但  <code>PRIMARY KEY</code>  屬性本身就自帶  <code>NOT NULL</code>  了)</p></li></ul><p>另外，你也可以將欄位格式寫好後，在最後才將其定義為主鍵：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="新增">新增</h2><p>想要在資料表內新增資料筆，則需要用到「<strong> <code>INSERT</code> </strong>」語法：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>欄位<span class="token number">1</span><span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>欄位<span class="token number">2</span><span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token keyword">VALUES</span> <span class="token punctuation">(</span>欄位<span class="token number">1</span>的值<span class="token punctuation">,</span> 欄位<span class="token number">2</span>的值<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>填寫<strong>值的順序</strong>是對應前面<strong>欄位順序</strong>的。</p><p>這邊要特別注意的是，兩行之間並<strong>沒有</strong>「 <code>,</code> 」或「 <code>;</code> 」區隔。<br>本質上它算是一行，只是為了提高 <code>可讀性</code> ，所以習慣寫作兩行或以上。</p><p>(ps. 另外，舉上述例子，我們不需要在新增時手動寫入「 <code>id</code> 」欄位，因為「 <code>AUTO_INCREMENT</code> 」會自動寫入。)</p><h3 id="範例-2">範例</h3><p>舉上述 <code>創建</code> 例子中的資料表為例：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>phone<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">"0123456789"</span><span class="token punctuation">,</span> <span class="token string">"新之助"</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>會寫入以下資料：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">phone</th><th style="text-align:left">name</th><th style="text-align:left">age</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">0123456789</td><td style="text-align:left">新之助</td><td style="text-align:left">5</td></tr></tbody></table><p>再寫入一筆，但這次只指定必要的欄位「 <code>age</code> 」：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>age<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>目前資料為：</p><table><thead><tr><th style="text-align:left">id</th><th style="text-align:left">phone</th><th style="text-align:left">name</th><th style="text-align:left">age</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">0123456789</td><td style="text-align:left">新之助</td><td style="text-align:left">5</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left"><em>NULL</em></td><td style="text-align:left">Anonymous</td><td style="text-align:left">19</td></tr></tbody></table><ul><li>由於  <code>id</code>  欄位的「 <code>AUTO_INCREMENT</code> 」屬性，所以自動累加上一筆資料的  <code>id</code> 。</li><li>欄位  <code>phone</code>  並未指定，而又不存在預設值，因此為 <code>NULL (空值)</code> 。</li><li>欄位  <code>name</code>  並未指定，但存在預設值「 <code>Anonymous</code> 」，因此寫入預設值。</li><li>欄位  <code>age</code>  指定為  <code>19</code>  。</li></ul><p>但如果這麼寫：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>phone<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">"小葵"</span><span class="token punctuation">,</span> <span class="token string">"0987654321"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>會發生什麼事情？</strong></p><p>答案是噴一個錯誤 -  <code>Field 'age' doesn't have a default value</code> <br> 還記得剛剛創建資料表時，設置了  <code>age</code>  欄位為「 <code>NOT NULL</code> 」屬性嗎？<br>而在此並未給予  <code>age</code>  值，而  <code>age</code>  又不存在「 <code>DEFAULT</code> 」預設值，因此出錯。</p>]]></content>
    
    
    <summary type="html">一些基礎常見的 SQL 語法。</summary>
    
    
    
    <category term="Computer Science" scheme="https://blog.alpaca0x0.com/categories/Computer-Science/"/>
    
    <category term="SQL" scheme="https://blog.alpaca0x0.com/categories/Computer-Science/SQL/"/>
    
    <category term="Basics of SQL" scheme="https://blog.alpaca0x0.com/categories/Computer-Science/SQL/Basics-of-SQL/"/>
    
    
    <category term="SQL" scheme="https://blog.alpaca0x0.com/tags/SQL/"/>
    
    <category term="Database" scheme="https://blog.alpaca0x0.com/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>資料庫概念 DB、DBMS、SQL 之間的關係</title>
    <link href="https://blog.alpaca0x0.com/posts/DB-DBMS-SQL/"/>
    <id>https://blog.alpaca0x0.com/posts/DB-DBMS-SQL/</id>
    <published>2021-05-22T07:01:08.000Z</published>
    <updated>2021-10-21T09:23:39.270Z</updated>
    
    <content type="html"><![CDATA[資料庫早已被大量使用，如果還分不清楚 Database 與 DBMS 及 SQL 的關係，那還真是場災難呢！<span id="more"></span><hr><h2 id="database-資料庫">Database (資料庫)</h2><p><strong> <code>Database (資料庫)</code> </strong> 簡稱「<strong> <code>DB</code> </strong>」。就如同名稱般，是存放資料的地方。<br>如果放在傳統的「<strong>資料庫</strong>」來說，可以單指<strong>堆滿文件</strong>的倉庫，或者一間<strong>圖書館</strong>。</p><p>但在現今所聽到的「<strong>資料庫</strong>」多半是指「<strong> <code>數位化</code> </strong>」的資料庫，存放在<strong>計算機上</strong>的。</p><p>是否有想過，你在網站上的<strong>帳號</strong>、<strong>密碼</strong>，或者<strong>社群</strong>上的<strong>圖片</strong>、<strong>貼文</strong>等，這些資料是存放在哪裡？這麼一想就不難發現 Database 的重要性！</p><hr><h2 id="dbms-資料庫管理系統">DBMS (資料庫管理系統)</h2><p>「<strong> <code>DBMS</code> </strong>」全名「<strong> <code>Database Management System</code> </strong>」，中文為「<strong> <code>資料庫管理系統</code> </strong>」。</p><p>存放多筆數據的資料庫，不易被管理。<br>設想一下若圖書館內<strong>沒有電腦的管理系統</strong>協助查詢，要找一本書需要花多久的時間？</p><p>但有了管理系統，你只需要到櫃台請工作人員 <code>查詢書名</code> ，便可以在短短幾秒內知道這本書的 <code>作者</code> 、 <code>出版日期</code> … 等資訊，另外也可以知道這本書在該圖書館的 <code>數量</code> 、 <code>類別</code> 、 <code>位置</code> 等。</p><p>而上述這一切僅發生在工作人員按下執行查詢工作的<strong>一瞬間</strong>。<br>這就是 <strong>DBMS (資料庫管理系統)</strong> 的效率。</p><p>當前常見的 DBMS 有 <a href="https://zh.wikipedia.org/wiki/MySQL">MySQL</a>、<a href="https://zh.wikipedia.org/wiki/Oracle%E6%95%B0%E6%8D%AE%E5%BA%93">Oracle Database</a>、<a href="https://zh.wikipedia.org/wiki/Microsoft_Access">Microsoft Access</a>、<a href="https://zh.wikipedia.org/wiki/Microsoft_SQL_Server">Microsoft SQL Server</a>、<a href="https://zh.wikipedia.org/wiki/MariaDB">MariaDB</a>、<a href="https://zh.wikipedia.org/wiki/SQLite">SQLite</a>、<a href="https://zh.wikipedia.org/wiki/IBM_DB2">IBM DB2</a>、<a href="https://zh.wikipedia.org/wiki/PostgreSQL">PostgreSQL</a>、<a href="https://zh.wikipedia.org/wiki/MongoDB">MongoDB</a> 等。</p><hr><h2 id="什麼是-sql-結構化查詢語言">什麼是 SQL (結構化查詢語言) ？</h2><p>「<strong> <code>SQL</code> </strong>」全名「<strong> <code>Structured Query Language</code> </strong>」，中文為「<strong> <code>結構化查詢語言</code> </strong>」。</p><p>用來操作 DBMS 的查詢語言。<br>不過稍微科普一下，通常 SQL 語法是寫在程式碼中，使程式可以自動化發送請求。<br>在企業中較少提供管理員手動輸入 SQL 語法查詢的情境，因為人為失誤可能導致嚴重的後果。(通常是提供後台管理的操作頁面操作 Database)</p><hr><h2 id="統整">統整</h2><p>為了方便了解，我製作了這張圖給各位參考：</p><p><img src="SQL-DBMS-DB.jpg" alt="SQL、DBMS、DB 之間的關係"></p><hr><h2 id="參考資料">參考資料</h2><p>《Wiki 維基百科 - SQL》<a href="https://zh.wikipedia.org/wiki/SQL">https://zh.wikipedia.org/wiki/SQL</a><br>《Wiki 維基百科 - 資料庫管理系統》<a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F">https://zh.wikipedia.org/wiki/ 数据库管理系统</a><br>《Wiki 維基百科 - SQL 語法》<a href="https://zh.wikipedia.org/wiki/SQL%E8%AF%AD%E6%B3%95">https://zh.wikipedia.org/wiki/SQL 语法</a></p>]]></content>
    
    
    <summary type="html">資料庫早已被大量使用，如果還分不清楚 Database 與 DBMS 及 SQL 的關係，那還真是場災難呢！</summary>
    
    
    
    <category term="Computer Science" scheme="https://blog.alpaca0x0.com/categories/Computer-Science/"/>
    
    <category term="SQL" scheme="https://blog.alpaca0x0.com/categories/Computer-Science/SQL/"/>
    
    
    <category term="SQL" scheme="https://blog.alpaca0x0.com/tags/SQL/"/>
    
    <category term="Database" scheme="https://blog.alpaca0x0.com/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>如何使用 Hexo 在 Github Pages 上部署部落格？</title>
    <link href="https://blog.alpaca0x0.com/posts/How-to-deploy-Hexo-on-Github-Pages/"/>
    <id>https://blog.alpaca0x0.com/posts/How-to-deploy-Hexo-on-Github-Pages/</id>
    <published>2021-05-15T07:57:36.000Z</published>
    <updated>2021-10-21T09:23:39.290Z</updated>
    
    <content type="html"><![CDATA[想要創建部落格，但又不想要一堆複雜又用不到的功能，輕盈的靜態頁面及 Git 版本控制，使用 Markdown 來撰寫文章，用 Hexo 架設部落格並發布在 Github Pages 這一切就是那麼容易且方便。<span id="more"></span><hr><h2 id="評估自己部落格的需求">評估自己部落格的需求</h2><p>說到架設部落格，許多人會選擇使用「<a href="https://zh.wikipedia.org/wiki/WordPress">WordPress</a>」這套網頁框架，雖然有著許多 <code>外掛功能</code> 及 <code>強大且方便的管理</code> 設計，但 WordPress 仍存在不少缺點…</p><blockquote><ul><li>檔案太肥<br>因為強大的功能，導致整體檔案變得肥大笨重，在執行速度上並不出色。(尤其一堆功能其實根本用不到…)</li><li>使用 PHP + MySQL<br> 乍聽之下好像不是什麼缺點，不過試問一下自己，真的有需要嗎？一旦牽扯到後端，一切都變得複雜。就好比接下來要說的安全性問題。</li><li>安全性<br> WordPress 的 <code>安全問題</code> 一直都是個有待討論的議題。若是在 WordPress 重大漏洞被發現後沒有即時做更新，可能站點容易遭到攻擊者利用舊版本的漏洞攻擊，這會使得攻擊者可能獲取你的 <code>資料庫權限</code> ，文章也可能因此遭到竄改。這也就是我為什麼建議若非必要，盡量使用<a href="https://zh.wikipedia.org/wiki/%E5%8B%95%E6%85%8B%E7%B6%B2%E9%A0%81"> <code>靜態頁面</code> </a>。</li></ul></blockquote><p>試想一下，架設部落格所需的功能有哪些？<br>不外乎就是可以 <code>撰寫文章</code> ，並且將文章 <code>發布到網絡上</code> 供大家觀看。</p><p>那麼我們是否其實可以在 <code>本地端撰寫文章</code> 後，用一些工具將文章 <code>渲染成靜態頁面</code> ？<br>這麼一來不僅可以避免過於複雜的 <code>資安問題</code> ，也可以使網站 <code>架構變得更簡單</code> 。</p><p>Hexo 作為部落格的應用，就是這麼一個角色的存在。<br>(當然，這麼做的缺點是，可能無法使你方便的在 <code>線上編輯文章</code> )</p><hr><h2 id="什麼是-hexo">什麼是 Hexo ？</h2><p>官方是這麼介紹的：<br>「 <code>Hexo</code>  是一個快速，簡單且功能強大的博客框架。您使用 Markdown (或其他標記語言) 撰寫文章，Hexo 會在幾秒鐘內生成帶有精美主題的 <code>靜態文件</code> 。(<em>Hexo is a fast, simple and powerful blog framework. You write posts in Markdown (or other markup languages) and Hexo generates static files with a beautiful theme in seconds.</em>)」。</p><p>Hexo 使用的是「<a href="https://zh.wikipedia.org/wiki/Markdown"> <code>Markdown</code> </a>」來撰寫部落格文章，這麼做的優點是，可以使你 <code>方便的對文章進行排版</code> 及 <code>以文字的方式</code> 快速的 <code>操作插件功能</code> 。<br>Hexo 會將這些 Markdown 的文章 <code>渲染</code> 成有序的 <a href="https://zh.wikipedia.org/wiki/HTML"> <code>HTML</code> </a> 文件。並且在撰寫文章的過程中，Hexo 可以在 <code>本地端開啟伺服器</code> ，使你對自己的站點及文章做 <code>即時預覽</code> 。</p><p>搭配「 <code>hexo-deployer-git</code> 」插件，可以將這些靜態頁面快速的佈署在你的 <a href="https://pages.github.com/"> <code>Github Pages</code> </a> 上。</p><hr><h2 id="正式開始">正式開始</h2><h3 id="step1-安裝-nodejs-及-git-如果已經安裝請直接進入下個步驟">Step.1 安裝 Node.js 及 Git (如果已經安裝，請直接進入下個步驟)</h3><p>請確保你的環境有安裝  <code>Git</code>  及  <code>Node.js</code>  。<br>注意：Node.js 版本若是太低，可能會在許多功能上不支援</p><ul><li>安裝 <strong>Git</strong><ul><li><strong> <code>Windows</code> </strong>：<strong><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></strong> 下載並安裝</li><li><strong> <code>Mac</code> </strong>：使用 <a href="https://brew.sh/"><strong>Homebrew</strong></a>, <a href="http://www.macports.org/"><strong>MacPorts</strong></a> 或 <a href="http://sourceforge.net/projects/git-osx-installer/"><strong>安裝程式</strong></a> 安裝</li><li><strong> <code>Linux (Ubuntu, Debian)</code> </strong>：<strong> <code>sudo apt-get install git-core</code> </strong></li><li><strong> <code>Linux (Fedora, Red Hat, CentOS)</code> </strong>：<strong> <code>sudo yum install git-core</code> </strong></li></ul></li><li>安裝 <strong>Node.js</strong><br>Node.js 為大多數平台提供了官方的 <a href="https://nodejs.org/en/download/"><strong>安裝程序</strong></a>。對於中國大陸地區用戶，可以前往 <a href="https://npm.taobao.org/mirrors/node"><strong>淘寶 Node.js 鏡像</strong></a> 下載。<br>又或者使用其他的安裝方式：<ul><li><strong> <code>Windows</code> </strong>：通過 <a href="https://github.com/jasongin/nvs/"><strong>nvs</strong></a> (推薦) 或者 <a href="https://github.com/nvm-sh/nvm"><strong>nvm</strong></a> 安裝。</li><li><strong> <code>Mac</code> </strong>：使用 <a href="https://brew.sh/"><strong>Homebrew</strong></a> 或 <a href="http://www.macports.org/"><strong>MacPorts</strong></a> 安裝。</li><li><strong> <code>Linux (DEB/RPM-based)</code> </strong>：從 <a href="https://github.com/nodesource/distributions"><strong>NodeSource</strong></a> 安裝。</li><li>其它：使用相應的軟件包管理器進行安裝，可以參考由 Node.js 提供的 <a href="https://nodejs.org/en/download/package-manager/">指導</a></li></ul></li></ul><hr><h3 id="step2-安裝-hexo">Step.2 安裝 Hexo</h3><p>使用 Node.js 進行下載</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>沒意外的話，將會進行好一段時間的安裝過程，請耐心等候。<br>若安裝成功，應該可以使用以下指令顯示 Hexo 的版本：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若在安裝時顯示 <code>不存在 npm 指令</code> ，則表示可能你並未安裝成功  <code>Node.js</code> 。<br>試試以下指令來嘗試顯示 Node.js 版本，以此檢查是否有成功安裝：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">node -v<span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h3 id="step3-初始化-hexo">Step.3 初始化 Hexo</h3><p>安裝完 Hexo 之後，請先創建一個 <code>部落格目錄</code> ，進入該目錄中使用指令  <code>npm install</code>  將 Node.js 安裝在此以方便管理套件，之後使用  <code>hexo init</code>  初始化 Hexo 於該目錄。(所有 <code>部落格文件(包括插件)</code> ，將會存放在該資料夾中)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> ~/MyBlog<span class="token builtin class-name">cd</span> ~/MyBlog<span class="token function">npm</span> <span class="token function">install</span>hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在 Hexo 初始化完畢後，應該會看到該目錄已經自動產生許多檔案。<br>其中設定檔名為「<strong> <code>_config.yml</code> </strong>」。<br>不過呢，暫時不動這些檔案，先嘗試將本地服務開啟：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>預設的  <code>Port</code>  為  <code>4000</code> ，若成功運行，我們可以直接在瀏覽器訪問「<strong> <code>localhost:4000</code> </strong>」即可看到 Hexo 部落格頁面，及預設主題「<strong>Landscape</strong>」。</p><p><a href="https://hexo.io/"><img src="landscape.png" alt="圖源自: https://hexo.io/"></a></p><p>這麼一來就表示成功運作 Hexo 部落格啦！</p><hr><h3 id="step4-設定-hexo-config">Step.4 設定 Hexo Config</h3><p>接著就可以開始自訂自己的 <code>部落格資訊</code> 及 <code>Hexo 主題</code> 了！</p><p>編輯目錄下的  <code>_config.yml</code>  ：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">#_config.ymltitle: Alpaca-Techsubtitle: AlpacaBlogdescription: 這是一個 Hexo 部落格keywords:  - alpaca - blogauthor: Alpaca0x0language: zhtimezone: Asia&#x2F;Taipei<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td>title</td><td>網站標題</td></tr><tr><td>subtitle</td><td>網站副標題</td></tr><tr><td>description</td><td>網站描述</td></tr><tr><td>keywords</td><td>網站的關鍵字，這有助於 Google SEO 的運作</td></tr><tr><td>author</td><td>您的名字，通常會用於顯示文章作者</td></tr><tr><td>language</td><td>網站使用的語言，參考 <a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">2-lettter ISO-639-1 code</a>，預設為 en</td></tr><tr><td>timezone</td><td>網站時區，Hexo 預設使用您電腦的時區，您可以在 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">時區列表</a> 尋找適當的時區，例如 America/New_York 、 Japan 與 UTC</td></tr></tbody></table><p>更多<strong>詳細設定</strong>可以在<strong>官方文檔</strong>中了解：<strong><a href="https://hexo.io/zh-tw/docs/configuration.html">https://hexo.io/zh-tw/docs/configuration.html</a></strong></p><hr><h3 id="step5-更換-hexo-主題">Step.5 更換 Hexo 主題</h3><p>Hexo 是社群維護的，有著許多設計者開發的主題可以使你免費使用。<br>可以在 <strong><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></strong> 挑選自己喜歡的主題下載。</p><p><img src="themes.png" alt=""></p><p>將 <code>下載的主題</code> 放在 <code>部落格根目錄</code> 下的「 <code>themes/</code> 」目錄中。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> ~/Download/butterfly/ ./themes/ <span class="token comment">#移動主題至 themes/ 目錄下 (ex. butterfly)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>並且記得在  <code>_config.yml</code>  中設定使用的主題名稱 (下載的檔案名稱)：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">#_config.ymltheme: butterfly #主題名稱 (ex. butterfly)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>再回到瀏覽器重新整理，應該就可以看到新的主題囉！</p><p>ps. 若是終端顯示 <code>錯誤訊息</code> ，很多時候是因為你<strong>沒有依照主題作者規定</strong> <code>設定主題設定檔</code> 。<br>主題設定檔通常位於目錄「<strong> <code>themes/&lt;主題名稱&gt;/_config.yml</code> </strong>」。<br>不同主題<strong>設定檔檔名可能不同</strong>，再請自行前往該主題文檔查閱使用方式。</p><hr><h3 id="step6-撰寫文章">Step.6 撰寫文章</h3><p>於 <code>部落格根目錄</code> 下使用以下指令可以 <code>創建新文章</code> ：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token string">"&lt;文章名稱>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>值得注意的是， <code>文章名稱</code> 要盡量 <code>避免特殊符號</code> ，以免<strong>渲染過程</strong>出現<strong>錯誤</strong>。</p><p>而文章會生成在目錄「<strong> <code>source/_posts/&lt;文章名稱&gt;.md</code> </strong>」。<br>附檔名為「<strong>.md</strong>」，開啟該檔案會發現這是一個「 <code>Markdown</code> 」檔。</p><p>前面有提到，Hexo 部落格的文章是以「 <code>Markdown</code> 」來撰寫的。<br>可以在 <code>文章的開頭</code> 設定一些 <code>基本資訊</code> ，例如 <code>標題</code> 、 <code>分類</code> 、 <code>標籤</code> … 等</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">title: 如何使用 Hexo 在 Github 上部署部落格？categories:  - 教學tags:  - Hexo  - Blogkeywords:  - hexo  - blog  - 部落格  - githubdate: 2021-05-13 15:38:36description: &quot;這是一則關於文章的簡要說明&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>開始撰寫文章內容：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">##</span> 標題</span>這是一則內容...第二行...<span class="token title important"><span class="token punctuation">###</span> 更小的標題</span>插入一張圖片<span class="token url"><span class="token operator">!</span>[<span class="token content">圖片說明</span>](<span class="token url">image.png</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更多  <code>Markdown</code>  語法請查閱 <strong><a href="https://markdown.tw/">https://markdown.tw/</a></strong> 。</p><hr><h3 id="step7-創建-github-pages">Step.7 創建 Github Pages</h3><p>如果你不知道什麼是「Github」，那可能要先了解一下。<br>簡單來說，它是透過 Git 進行版本控制的軟體原始碼代管服務平台。詳情請見 <a href="https://zh.wikipedia.org/wiki/GitHub"><strong>Wiki 維基百科</strong></a></p><p>而「 <code>Github Pages</code> 」是就是「<a href="https://zh.wikipedia.org/wiki/GitHub"><strong>Github</strong></a>」所提供的一個 <code>網頁代管服務</code> ，我們可以將部落格交給 Github Pages 來代管。(注意，Github Pages 只能託管 <code>靜態網站</code> )</p><p>先請按照官方指示，建立一個 Github Pages 。<br>創建名為「<strong> <code>username</code> .github.io</strong>」的 Repositories 。</p><div class="video-container"><iframe src="https://www.youtube.com/embed/2MsN8gpT6jY" frameborder="0" loading="lazy" allowfullscreen></iframe></div><hr><h3 id="step8-設定-hexo-的推送設定">Step.8 設定 Hexo 的推送設定</h3><p>首先要先安裝 Hexo 的  <code>hexo-deployer-git</code>  插件。<br>於部落格根目錄輸入以下指令安裝：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安裝完畢後編輯設定檔「 <code>_config.yml</code> 」：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">#_config.ymldeploy:  type: git  repo: http:&#x2F;&#x2F;github.com&#x2F;alpaca0x0&#x2F;alpaca0x0.github.io  branch: dev  message: Site updated: &#123;&#123; now(&#39;YYYY-MM-DD HH:mm:ss&#39;) &#125;&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>由於我們要推送至「Github Pages」，因此  <code>type</code>  設定為 「 <code>git</code> 」。</li><li>其中  <code>repo</code>  為 「 <code>Repositories</code> 」，此指要部署的目的地。</li><li>而  <code>branch</code>  則是分支，可以不做此設定 (使用預設分支)。</li><li>最後  <code>message</code>  則是提交訊息，此項同樣可以不做設定。</li></ul><p>另外，這是允許一次部署多個站點的 (如果有需要的話)：</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">deploy: - type: git   repo: ............ - type: heroku   repo: ............<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="step9-佈署到-github-pages">Step.9 佈署到 Github Pages</h3><p>渲染靜態網頁：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo generate <span class="token comment">#或者使用縮寫 hexo g</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成完之後就可以部署站點了：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo deploy <span class="token comment">#或者使用縮寫 hexo d</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接著輸入 Github 帳號密碼即可成功部署。<br>如果嫌每次都要<strong>輸入帳號密碼很麻煩</strong>，也可以使用 Github 提供的  <code>SSH</code>  方法來連接。<br>更據官方格式將  <code>_config.yml</code>  中的佈署設定  <code>deploy</code>  裡面的  <code>repo</code>  改為對應的  <code>SSH</code>  連結。</p><p>詳情請見 <a href="https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh"><strong>Github 官方文檔</strong></a></p><p>你也可以直接輸入以下指令來  <code>渲染檔案並部署站點</code> ：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>這麼一來就大功告成啦～</p><p>另外  <code>hexo clean</code>  可以清理暫存檔案，使站點重新抓取資料及設定。</p><hr><h2 id="參考資料">參考資料</h2><p>《Hexo Documentation》<a href="https://hexo.io/docs/">https://hexo.io/docs/</a></p>]]></content>
    
    
    <summary type="html">想要創建部落格，但又不想要一堆複雜又用不到的功能，輕盈的靜態頁面及 Git 版本控制，使用 Markdown 來撰寫文章，用 Hexo 架設部落格並發布在 Github Pages 這一切就是那麼容易且方便。</summary>
    
    
    
    <category term="Notes" scheme="https://blog.alpaca0x0.com/categories/Notes/"/>
    
    <category term="Computer Science" scheme="https://blog.alpaca0x0.com/categories/Notes/Computer-Science/"/>
    
    
    <category term="Github" scheme="https://blog.alpaca0x0.com/tags/Github/"/>
    
    <category term="Hexo" scheme="https://blog.alpaca0x0.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Encode、Encrypt and Hash are different！</title>
    <link href="https://blog.alpaca0x0.com/posts/Encode-Encrypt-Hash/"/>
    <id>https://blog.alpaca0x0.com/posts/Encode-Encrypt-Hash/</id>
    <published>2021-04-19T16:55:42.000Z</published>
    <updated>2021-10-21T09:23:39.280Z</updated>
    
    <content type="html"><![CDATA[Encode (編碼)、Encrypt (加密)、Hash (雜湊) 一直令許多新手們搞混，雖然說可能運算後的結果看起來都是一串亂碼，但原理及使用場合卻天差地遠，千萬不要再分不清處了！<hr><h2 id="encode-編碼">Encode (編碼)</h2><p>在計算機中，需要儲存大量資料，而這些資料基於各國的語言不同，可能是基本的 <code>英文</code> 或是博大精深的 <code>中文</code> ，中文又分 <code>簡體</code> 、 <code>繁體</code> ，甚至是由右至左書寫的 <code>阿拉伯文</code> 等。</p><p>雖然各種國家的文字零零種種非常多，尤其中文數量更是大的驚人，但這些文字對計算機來說都只是「<strong>字元</strong>」，更精確來說都只是機器語言，也就是常聽見的「<strong>0</strong>、<strong>1</strong>」，所以儲存上並難不倒它，問題就出在，如何 <code>顯示</code> 給使用者觀看？</p><blockquote><h3 id="ascii">ASCII</h3><p>舉例剛開始美國人使用的編碼「<strong> <code>ASCII</code> </strong>」，全名「<strong> <code>American Standard Code for Information Interchange (美國資訊交換標準代碼)</code> </strong>」，主要是用來顯示基本的  <code>阿拉伯數字</code> 、 <code>26 個英文字母(大小寫)</code> 、 <code>英式標點符號</code> 。但這很快就使得在其他語系的國家顯示上出現問題，例如 <code>西歐語言</code> 就無法套用在  <code>ASCII</code>  上。</p><p><a href="https://zh.wikipedia.org/wiki/ASCII#/media/File:USASCII_code_chart.png"><img src="USASCII_code_chart.png" alt="1968年版ASCII編碼速見表｜圖源自 Wiki 維基百科"></a></p><p>雖然後來也使用  <code>EASCII</code>  解決了部分西歐語言的顯示問題，但還是有著各式各樣的語言在顯示上有問題，這也是導致為什麼會有那麼多種編碼的原因之一，儘管有著這麼多的編碼，但也出現了一個新的問題「如何統一」？直到「<strong> <code>Unicode</code> </strong>」被發明。</p></blockquote><blockquote><h3 id="unicode-utf">Unicode (UTF)</h3><p>「 <code>Unicode</code> 」簡稱「 <code>UTF</code> 」又稱「 <code>萬國碼</code> 、 <code>統一碼</code> 」，是一種被大家公認的標準編碼。<br>它最大的優點在於，該編碼納入了世界上大部分的文字系統，也就是將那些 <code>雜亂的編碼</code> 給 <code>統整</code> 了，所以其實它是一種「 <code>編碼集</code> 」，這也就使得計算機能夠更簡單方便的呈現和處理文字。</p></blockquote><p>說了這麼多，你可能已經發現，<strong>名詞</strong>「 <code>Encode (編碼)</code> 」其實就只是在指 <code>資料的格式</code> ，放在<strong>動詞</strong>上解釋就只是 <code>轉換資料格式的過程</code> 。因此，編碼僅僅只是將<strong>文字轉換成不同格式</strong>做儲存、顯示等，並<strong>無</strong>實質上的<strong>安全作用</strong>。</p><hr><h2 id="decode解碼">Decode (解碼)</h2><p>基本上就是將 Encode (編碼) 過後的資料做 <code>反向編碼</code> 的動作。<br>其實從字面上意思也不難理解「<strong>編</strong>」與「<strong>解</strong>」所表達的含意，就像是 <code>加工</code> 與 <code>還原</code> 般。</p><hr><h2 id="encrypt-加密">Encrypt (加密)</h2><blockquote><p>基於資料的 <code>隱私</code> 及 <code>安全</code> 性考量，在許多時候我們不得將資料給加密以確保資料內容不被輕易讀取。<br>但要特別在此聲明的一點是，這裡所指的「 <code>Encrypt (加密)</code> 」並<strong>非</strong>是大家常使用的「帳號、密碼」系統。</p><p>以往我們不希望他人讀取自己較私人的訊息時，我們會在這些資料被讀取前請求驗證身份，舉例將檔案放在保險箱中，若是密碼不正確則無法開啟保險箱，藉此達到資料不被讀取的安全功能。<br>理論上沒問題，但這其實有個致命的缺點… 如果鎖被破壞呢？</p></blockquote><p>萬一有些方法能破壞這些鎖，進而達到<strong>不用輸入密碼也能存取</strong>的動作，那這種加密豈不是失去作用了。</p><blockquote><p>會導致這樣的原因主要是因為，這些聲稱加密的檔案其實並沒有被真正的「<strong>加密運算</strong>」，只是在外層加上了一道防護而已。而安全的加密應該是連同裡面的資料進行改變，這麼一來若是無法有相對應的金鑰，則無法解密資料。</p></blockquote><p>可以想像成  <code>Encrypt (加密)</code>  就是將  <code>Encode (編碼)</code>  中融入了  <code>Key (密鑰)</code>  及 <a href="https://zh.wikipedia.org/wiki/%E7%AE%97%E6%B3%95"> <code>Algorithm (演算法)</code> </a> 的元素，使  <code>Key (密鑰)</code>  參與了這整個利用  <code>Algorithm (演算法)</code>  轉換格式的過程，因此若是缺少  <code>Key (密鑰)</code>  是無法反推算原始含意的。</p><p>而加密的方式有成千上萬中種，大致上可以分成兩類，分別是「 <code>Symmetric-key algorithm (對稱加密)</code> 」及「 <code>Public-key Cryptography (非對稱加密)</code> 」。<br>對這部份想更深入了解的朋友可以看看我之前寫的文章「<strong><a href="#">Post not found: Symmetric-keyAlgorithm(對稱加密)</a></strong>」及「<strong><a href="#">Post not found: Public-keyCryptography(非對稱加密)</a></strong>」。</p><hr><h2 id="decrypt-解密">Decrypt (解密)</h2><p>指對於「 <code>Encrypt (加密)</code> 」過的檔案使用對應的  <code>Key(密鑰)</code>  進行反運算以得出<strong>原本內容</strong>的過程。</p><hr><h2 id="hash-雜湊">Hash (雜湊)</h2><p>相較於上述的  <code>Encode (編碼)</code>  及  <code>Encrypt (加密)</code>  來說， <code>Hash (雜湊)</code>  算是個特別的存在。<br>直接道出重點的話就是「<strong>Hash (雜湊) 是不可逆的</strong>」。</p><blockquote><h3 id="可逆性-reversibility">可逆性 (Reversibility)</h3><p>顧名思義就是可以<strong>逆向回朔原始狀態</strong>的意思。與其相反的詞為「<strong>不可逆性 (Irreversible)</strong>」。<br>好比上述的「 <code>Encode (編碼)</code> 」，基本上各式各樣的<strong>編碼方式</strong>及<strong>編碼對應表</strong>在網絡上都可以搜尋的到，也就表示任何人都可以對這些編碼進行解碼的動作，因為方法是公開的。(當然，自創的編碼例外)<br> 再者，「 <code>Encrypt (加密)</code> 」也可以被持有「 <code>Key (密鑰)</code> 」者透過「 <code>Decrypt (解密)</code> 」的動作還原出原始的含意。<br>這些可以被成功<strong>回朔至原始含意</strong>的都代表含有 <strong> <code>可逆性 (Reversibility)</code> </strong>。</p></blockquote><blockquote><h3 id="不可逆性-irreversible">不可逆性 (Irreversible)</h3><p>與上述的 <code>可逆性 (Reversibility)</code>  擁有相反性質，表示 <code>無法單純透過字串或亂碼追朔其原始含意</code> 。<br> <code>Hash (雜湊)</code>  就是這樣的存在。</p></blockquote><p>那麼是如何做到 <strong>不可逆性 (Irreversible)</strong> 的呢？</p><blockquote><h3 id="破壞性的運算">破壞性的運算</h3><p>有著 <code>可逆性 (Reversibility)</code>  的主要原因是因為其內容依舊被「 <code>完整的保留</code> 」，只是換了種儲存方式而已。但 <code>Hash (雜湊)</code>  則不會如此，也就是說 Hash (雜湊) 會將原始的資料給破壞保存。</p></blockquote><blockquote><p>舉個例子，我們都知道的<strong>除法</strong>。<br>除法「<strong> <code>16 / 8</code> </strong>」會等於「<strong> <code>2</code> </strong>」，若試問你「<strong> <code>X / 8</code> </strong>」結果為「<strong> <code>2</code> </strong>」，你依然能透過「<strong> <code>2 * 8</code> </strong>」得出 「<strong> <code>X</code> </strong> = <strong> <code>16</code> </strong>」，因為「<strong> <code>除法</code> </strong>」可以被理解成是「<strong> <code>乘法的反運算</code> </strong>」。</p><p>這個道理大家都懂，那麼若是 <code>取餘數</code> 呢？(或說是 <code>取模數</code> )<br> 舉例「<strong> <code>16 Mod 4</code> </strong>」會是「<strong> <code>0</code> </strong>」，因為 <strong> <code>16</code> </strong> 能被 <strong> <code>4</code> </strong> 整除。<br>而「<strong> <code>16 Mod 5</code> </strong>」則會是「<strong> <code>1</code> </strong>」，問題來了，若試問你「<strong> <code>X Mod 5</code> </strong>」結果為「<strong> <code>1</code> </strong>」，你能推出「<strong> <code>X</code> </strong>」的值嗎？<br>這可能的值將趨近<strong>無限多種</strong>，你<strong>無法</strong>光靠<strong>保留下來的資訊</strong>推算原始內容，因此就可以達到 <strong>不可逆性 (Irreversible)</strong> 的效果。</p></blockquote><p>這只是其中一個簡單的例子，而 <strong>Hash (雜湊)</strong> 中含有各種類似的概念以確保運算後的結果<strong>不能被反推</strong>。<br>並且 Hash (雜湊) 有著特點，就是當輸入的內容相差了哪怕只有一點，也會導致雜湊結果截然不同。</p><p>舉例「 <code>alpaca blog</code> 」的  <code>SHA-256</code>  雜湊為「 <code>58e93956c3cc49342b607a931e4fd60e37518d7f21f29e1dfc968d4be98c976a</code> 」。那在後面加個小點變成「 <code>alpaca blog.</code> 」的  <code>SHA-256</code>  會是長怎樣呢？<br>答案是「 <code>3e445a9b450005d71ce28992d24871ddd5bcf5495a6eb52d3fe91f594cf3c35d</code> 」。<br>完全不同的結果，若要分析破解雜湊值根本無跡可尋。</p><p>但也因此，其實雜湊是「 <code>可能會重複</code> 」的！<br>畢竟即使擁有「 <code>2^256+1</code> 」種可能性的  <code>SHA-256</code>  也不能裝下第「 <code>2^256+2</code> 」種輸入還不產出重複的輸出結果吧！<br>只是 <code>很難</code> 找到重複的兩筆資料，因為實在是<strong>太多種可能性</strong>了！<br>即使找到了，但也 <code>很難是有意義的資料</code> ，通常是 <code>亂碼</code> ，這也可以使<strong>人為修改幾乎成為不可能的事情</strong>。</p><p>(ps. 許多雜湊是不論輸入的字串長度多長，輸出的長度皆相同的。舉例「 <code>SHA-256</code> 」就是輸出  <code>256 bits</code> ，大小寫英文及數字，字元長度為「 <code>64</code> 」，而  <code>MD5</code>  則固定輸出  <code>128 bits</code> ，大小寫英文及數字，字元長度為「 <code>32</code> 」。)</p><p>大致上都了解雜湊的特性了<br>那麼問題來了，什麼情況下我們會需要將資料  <code>Hash (雜湊)</code>  ？<br>既然不能被還原，那要那串雜湊過後的亂碼有什麼用？</p><hr><h2 id="驗證資料完整性">驗證資料完整性</h2><p>由於基本上很難找到兩筆有意義的重複雜湊值，因此就可以透過此方式來驗證檔案的完整性。</p><p>舉例「<strong>虛擬貨幣</strong>」就使用這點來驗證每筆交易的<strong>可信度</strong>，又或者你可能在下載某些檔案時，就曾看過官方在該檔案旁標示的「 <code>識別亂碼</code> 」，就是使用雜湊的原理。<br>常見的雜湊就有「 <code>SHA-1</code> 、 <code>SHA-256</code> 、 <code>MD5</code> 」等。</p><p>每個在計算機上的「 <code>File (檔案)</code> 」不論是  <code>mp3</code> 、 <code>mp4</code> 、 <code>txt</code> 、 <code>jpg</code> 、 <code>png</code> 、 <code>gif</code>  等，對電腦來說都只是一串很長的 <code>文字</code> ，更精確來說都只是  <code>0</code>  與  <code>1</code> 。<br>既然如此，那麼我們就可以將檔案進行 <code>雜湊運算</code> ！</p><p>有什麼用處？</p><p>試想一下，是否曾經聽過駭客入侵網站後，將原有的檔案<strong>竄改</strong>加入病毒使他人下載並執行到被加工檔案的事件。若是有個機制能<strong>檢測檔案是否遭到竄改</strong>，但過程又<strong>不必要去比對整個檔案的內容</strong> (太耗效能資源)，該怎麼做？<br>看看上面的 <strong>Hash (雜湊)</strong> 特性，就不難理解它可以有效的做到這點。</p><p>官方在釋出檔案的同時，附上一段該檔案的 <code>雜湊值</code> 及 <code>雜湊演算法</code> ，使用者下載了該檔案後，可以自己將檔案再次經過雜湊後 <code>比對是否跟官方所附上的雜湊值一致</code> ，若<strong>不一致表示該檔案被竄改</strong>過！</p><p>例如 <a href="https://"><strong>bitcoin.org</strong></a> 網站提供大家下載「 <code>bitcoin core</code> 」比特幣錢包。<br>並且付上了對於檔案的數字簽名。<br>內容大致上長這樣：</p><pre class="line-numbers language-none"><code class="language-none">-----BEGIN PGP SIGNED MESSAGE-----Hash: SHA25643416854330914992bbba2d0e9adf2a6fff4130be9af8ae2ef1186e743d9a3fe  bitcoin-0.21.0-aarch64-linux-gnu.tar.gzf028af308eda45a3c4c90f9332f96b075bf21e3495c945ebce48597151808176  bitcoin-0.21.0-arm-linux-gnueabihf.tar.gz695fb624fa6423f5da4f443b60763dd1d77488bfe5ef63760904a7b54e91298d  bitcoin-0.21.0-osx64.tar.gz6223fd23d07133a6bfa2aa3d2554a09dc1d790d28ce67b0085d3fdcc1c126e05  bitcoin-0.21.0-osx.dmgf8b2adfeae021a672effbc7bd40d5c48d6b94e53b2dd660f787340bf1a52e4e9  bitcoin-0.21.0-riscv64-linux-gnu.tar.gz1a91202c62ee49fb64d57a52b8d6d01cd392fffcbef257b573800f9289655f37  bitcoin-0.21.0.tar.gz54050748ef4d4f000ea1ece472491b3e5fd546efc74ed52119354b2893f6624b  bitcoin-0.21.0-win64-setup.exe1d0052c4ce80227fb6d0bc1c4e673ba21033e219c1f935d25f130ef7f43360d4  bitcoin-0.21.0-win64.zipda7766775e3f9c98d7a9145429f2be8297c2672fe5b118fd3dc2411fb48e0032  bitcoin-0.21.0-x86_64-linux-gnu.tar.gz-----BEGIN PGP SIGNATURE-----Version: GnuPG v1.4.11 (GNU&#x2F;Linux)iQIcBAEBCAAGBQJgADqTAAoJEJDIAZ42wulkjtkQAJwlSTDinKsxZIMky3MeVhwBCmxxYiMLPQA8bwgxyc4RaTxUrqL2oExPOtfcDzcR1WbQe12niG40N&#x2F;2yrtf66lG9KbSsQD6nKat9B3mCk9&#x2F;jNkJHWmq5JJbOyfRs2mex75Lj7UHaPPrqh2rMfEewljedkHkDuaqeqYlTAh981WqLD+l5jnpQZqBSrcz3YTTvXWd7xKfFSVzqF&#x2F;tD4CQFrPX29b2BLzA&#x2F;u+29Z3s+zio1l5c7fikNDd404T5U&#x2F;y+NMOyCmgT4eiDGLQPlEpoGNq3wGYU7FNZUO9xXeatx4PI8qiq5mIK46UwfPUTeruTzNrHsME7YioUa87uSYKM8jqwPFSnbhYoUqCB&#x2F;wPaKZwEF+2WzG88yj2+PzalVt8cnjRnTQ77COtHJqs8AjLWnVACFLluplM16xyiLn0FWkrEHyi5HlI+X+cqIiTtehojMBXIkHugIYMnT5XB9llh5OWXgBp1UGupojLXYuMNF5R6cU5Iq+xJjbUiQ&#x2F;PDm38MBlFlQ9RzRCYyZpMYZE3K9p789jpjdYdMPtzkYlIKD87S89JtE1s6i&#x2F;SkTPhebyu&#x2F;328rqkqnNKSCHnuB7Fy2iEKJj5kLs&#x2F;LjY8yxSMuGeNl6LhWGKVZKy0AS&#x2F;BztSHr2jgThfhN1BemFRcViSvcXhMeNwka8Z9KLt&#x2F;N0ziabBexAw&#x3D;bi4p-----END PGP SIGNATURE-----<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在第二行的位置，官方標示了「 <code>Hash 方式為 SHA256</code> 」，接著就列出了各個檔案的 <code>雜湊值</code> 供大家驗證，可是該文檔也是可能受到偽造的，那怎麼辦？<br>還記得前面所說的「 <code>非對稱加密</code> 」嗎？在此情境當中被用在了「 <code>數字簽名</code> 」，並且將簽章寫在文檔最後，也就是最後那串很長的亂碼。</p><p>官方將前面的整段「 <code>BEGIN PGP SIGNED MESSAGE</code>  與  <code>-----BEGIN PGP SIGNATURE-----</code>  中間」的內容給簽章成「 <code>-----BEGIN PGP SIGNATURE-----</code>  與  <code>-----END PGP SIGNATURE-----</code>  中間」的那串亂碼了！你只需要使用官方提供的公鑰便可以驗證這一切的資訊是否源自官方。</p><p>萬一駭客 <code>更改了檔案</code> ，則無法通過該文檔的  <code>Hash (雜湊)</code>  驗證，若駭客連該文檔一起修改，將 <code>檔案對應的雜湊值</code> 也更改了，但由於駭客 <code>沒有官方所釋出的公鑰所對應的私鑰</code> ，因此也 <code>無法對修改後的訊息進行官方簽章</code> 。</p><hr><h2 id="hash-雜湊-其實可以被破解">Hash (雜湊) 其實可以被破解？</h2><p>雜湊也並非無敵，它只是盡量的避免了原文被修改成其他 <code>有意義的內容</code> ，藉此達到降低被欺騙的可能而已。<br>有些網站標榜能破解 Hash (雜湊)，那其實是利用大數據來進行「 <code>暴力攻擊 (Brute-force attack)</code>  又稱 <a href="https://zh.wikipedia.org/wiki/%E8%9B%AE%E5%8A%9B%E6%94%BB%E5%87%BB"> <code>窮舉攻擊 (Exhaustive attack)</code> </a> 或  <code>爆破</code> 」或者「<a href="https://zh.wikipedia.org/wiki/%E5%BD%A9%E8%99%B9%E8%A1%A8"> <code>彩虹表 (Rainbow Table)</code> </a>」。</p><ul><li>暴力攻擊 (Brute-force attack)<br> 暴力攻擊其實就是以「 <code>窮舉</code> 」的方式來找出該雜湊值對應的明文，因此需要嘗試許多種的可能性，也非常耗時，通常<strong>不</strong>太會真正的<strong>窮舉</strong>，畢竟可能性太多了。<br>假設我們是要利用該方法來找出某一串「 <code>已知是人工輸入的密碼的雜湊值</code> 」的明文，那只要我們可以 <code>收集許多常見密碼的列表</code> ，就可以使用這些列表來嘗試，萬一該密碼有在列表中，就可以<strong>成功找到比對一致的結果</strong>。而這種方式依賴的那個 <code>裝著許多待比對的字串的檔案</code> 我們稱它為「 <code>字典檔</code> 」。<br>將字典檔中的各項可能結果使用腳本或特定程式一個個的雜湊後，再去比對是否有與欲破解的雜湊值有相符結果，若沒有則繼續嘗試下一筆資料，若成功批配，則表示該項就是 (幾乎是) 該雜湊值的原文，同時我們也稱這種雜湊過後得出相同值的狀況為「 <code>發生碰撞</code> 」。</li><li>彩虹表 (Rainbow Table)<br> 嚴格來說也算是一種暴力攻擊的方式，但在某些時候效率比暴力攻擊更高。<br>通常是指將雜湊的公式 <code>逆向運算回推</code> 所預先計算好的表。在密碼學打滾的人一定都知道這個！<br>關於彩虹表的原理解釋相對較複雜，簡單來說就是…<blockquote><p>假設原本的雜湊函式為  <code>H</code> ，則創建一個與其對應的相反函式  <code>R</code>  又稱「 <code>歸約函式 (Reduction function)</code> 」。函式  <code>R</code>  可以將利用函式  <code>H</code>  所計算出的雜湊值反算回 <code>與原本格式類似的亂碼</code> ，這裡也可以理解成是將這 <code>雜湊值</code>  Hash 成  <code>新雜湊值</code> ，而這個 <code>新雜湊值</code> 格式是 <code>類似原文的格式</code> 。就這樣持續的經過  <code>R 運算</code> 、 <code>H 運算</code> 、 <code>R 運算</code> 、 <code>H 運算</code> … 形成了一條很長的鏈，由於這條鏈的結果是必然的，因此只需要對該鏈的 <code>初始節點</code> 及 <code>末端節點</code> 儲存即可。<br>假設原文為「 <code>aaaaaa</code> 」在經過  <code>H 運算</code>  之後雜湊值為「 <code>281DAF40</code> 」，則我們將該雜湊值用  <code>R 運算</code>  得出一個反雜湊值為「 <code>sgfnyd</code> 」之後再進行一次  <code>H 運算</code>  得出「 <code>920ECF10</code> 」再進行  <code>R 運算</code>  得出「 <code>kiebgt</code> 」，之後將這條鏈存入表中 (只存頭尾節點)。過程如下圖：</p><p><a href="https://wikimedia.org/api/rest_v1/media/math/render/svg/bbacb4ee3811ce261fa6023c6de90718e22c7b49"><img src="01.png" alt="圖源自 Wiki 維基百科"></a><br>若 <code>欲破解的雜湊值</code> 所運算出的 <code>雜湊鏈</code> 中的 <code>任意節點</code> 與 <code>表中</code> 的 <code>某項末端節點</code> 發生 <code>碰撞</code> ，就可以由該鏈的 <code>初始節點</code> 開始嘗試重建對應的雜湊鏈。<br>延續剛剛的情境，假設 <code>欲破解的雜湊值</code> 為「 <code>920ECF10</code> 」，在使用  <code>R 運算</code>  後得出「 <code>kiebgt</code> 」。</p><p><a href="https://wikimedia.org/api/rest_v1/media/math/render/svg/6f221f7b41880f40014bb8a62c238fc393dfaa7b"><img src="02.png" alt="圖源自 Wiki 維基百科"></a><br>我們發現該值出現在表中，於是我們將該鏈的 <code>初始節點</code> 開始進行  <code>H 及 R 運算</code>  直到找出「 <code>920ECF10</code> 」為止，若成功找到，則表示該鏈中的「 <code>920ECF10</code> 」的 <code>前個節點</code> 便是解，即為下圖的「 <code>sgfnyd</code> 」。</p><p><a href="https://wikimedia.org/api/rest_v1/media/math/render/svg/c1f95ab4100e23af7fa96fa7f3f71c28edeb7a17"><img src="03.png" alt="圖源自 Wiki 維基百科"></a><br>但由於剛剛說過，雜湊是可能會重複的，因此在此情境中，即便「 <code>kiebgt</code> 」在表中的 <code>某項末節點</code> 被找到，但也<strong>可能發生</strong>當你嘗試利用該鏈的 <code>初始節點</code> 開始進行運算後，也無法找到「 <code>920ECF10</code> 」的狀況，對此我們稱作「 <code>誤報 (False alarm)</code> 」，接著只需要跳過該次批配，繼續做運算嘗試找出下個配對即可。<br>舉例上述情境可能在「 <code>FB107E70</code>  (不同的雜湊值)」進行  <code>R 運算</code>  後得出「 <code>kiebgt</code>  (有著一樣的雜湊)」。</p><p><a href="https://wikimedia.org/api/rest_v1/media/math/render/svg/7e3220acb1fc2552f863e5fc14eaf76fa269ec37"><img src="04.png" alt="圖源自 Wiki 維基百科"></a></p></blockquote></li></ul><hr><h2 id="總結">總結</h2><p>只能說現在在資訊安全上真的衍生出了許多方法，這些方法能有著許多優點，但同時也能帶來許多危機。<br>在寫這篇文章時，寫著寫著突然發現好像重心著重在  <code>Hash (雜湊)</code>  的部份太多了，造成各位在觀看時可能有點失去平衡，真的很抱歉，但這也是因為我希望將<strong>較完整的資訊</strong>帶給各位。</p><p>文章內容較為繁瑣，也有些許離題。資料都是自己的知識及  <code>Wiki 維基百科</code>  的輔助！<br>若內容有誤請不吝嗇通知我，非常感謝！</p><p>另外喜歡這篇文章也別忘了分享給你身邊的朋友觀看！</p><hr><h2 id="參考資料">參考資料</h2><p>《<strong>Wiki 維基百科 - ASCII</strong>》<a href="https://zh.wikipedia.org/wiki/ASCII">https://zh.wikipedia.org/wiki/ASCII</a><br>《<strong>Wiki 維基百科 - Unicode</strong>》 <a href="https://zh.wikipedia.org/wiki/Unicode">https://zh.wikipedia.org/wiki/Unicode</a><br>《<strong>Wiki 維基百科 - SHA-2</strong>》<a href="https://zh.wikipedia.org/wiki/SHA-2">https://zh.wikipedia.org/wiki/SHA-2</a><br>《<strong>Wiki 維基百科 - MD5</strong>》<a href="https://zh.wikipedia.org/wiki/MD5">https://zh.wikipedia.org/wiki/MD5</a><br>《<strong>Wiki 維基百科 - 蠻力攻擊</strong>》<a href="https://zh.wikipedia.org/wiki/%E8%9B%AE%E5%8A%9B%E6%94%BB%E5%87%BB">https://zh.wikipedia.org/wiki/ 蛮力攻击</a><br>《<strong>Wiki 維基百科 - 彩虹表</strong>》<a href="https://zh.wikipedia.org/wiki/%E5%BD%A9%E8%99%B9%E8%A1%A8">https://zh.wikipedia.org/wiki/ 彩虹表</a></p>]]></content>
    
    
    <summary type="html">Encode (編碼)、Encrypt (加密)、Hash (雜湊) 一直令許多新手們搞混，雖然說可能運算後的結果看起來都是一串亂碼，但原理及使用場合卻天差地遠，千萬不要再分不清處了！</summary>
    
    
    
    <category term="Computer Science" scheme="https://blog.alpaca0x0.com/categories/Computer-Science/"/>
    
    
    <category term="Cyber Security" scheme="https://blog.alpaca0x0.com/tags/Cyber-Security/"/>
    
    <category term="Cryptography" scheme="https://blog.alpaca0x0.com/tags/Cryptography/"/>
    
    <category term="Public-key Cryptography" scheme="https://blog.alpaca0x0.com/tags/Public-key-Cryptography/"/>
    
    <category term="Digital Signature" scheme="https://blog.alpaca0x0.com/tags/Digital-Signature/"/>
    
  </entry>
  
  <entry>
    <title>Github 檔案太大無法推送！？安裝「Git-LFS」馬上解決！</title>
    <link href="https://blog.alpaca0x0.com/posts/Git-LFS/"/>
    <id>https://blog.alpaca0x0.com/posts/Git-LFS/</id>
    <published>2021-03-28T04:54:04.000Z</published>
    <updated>2021-10-21T09:23:39.280Z</updated>
    
    <content type="html"><![CDATA[<p>使用 git push 推送檔案到 Github 上時，被告知<strong>檔案太大</strong>無法推送！？馬上教你怎麼解決！</p><span id="more"></span><hr><h2 id="報錯">報錯</h2><p>當你嘗試使用  <code>git push</code>  推送超過 <code>100 MB</code>  的檔案時，沒意外就會收到這樣的錯誤。<br>這是因為 Github <strong>一個檔案最大上傳限制</strong>就是 <code>100 MB</code> 。(ps. 分開上傳可以，但不能同個檔案 100 MB)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ remote: error: GH001: Large files detected.$ remote: error: Trace: xxxxxxxxxxxxxxxxxxxx$ remote: error: See http://git.io/iEPt8g <span class="token keyword">for</span> <span class="token function">more</span> information.$ remote: error: File xxxxxxxxxxxxx is <span class="token number">101.00</span> MB<span class="token punctuation">;</span> this exceeds GitHub's <span class="token function">file</span> size limit of <span class="token number">100</span> MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="安裝-git-lfs-解決">安裝 Git-LFS 解決！</h2><p>為此 Github 也提供解決方法 - 「<strong>Large File Storage</strong>」。</p><h3 id="debian-and-ubuntu">Debian and Ubuntu</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> git-lfs<span class="token function">git</span> lfs <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h3 id="mac-osx">Mac OSX</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew updatebrew <span class="token function">install</span> git-lfs<span class="token function">git</span> lfs <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h3 id="rhelcentos">RHEL/CentOS</h3><h4 id="step1-安裝-git-182">Step.1 安裝 git &gt;= <strong>1.8.2</strong></h4><blockquote><p>如果你的版本是 <strong>RHEL/CentOS</strong>  <code>5</code>  或  <code>7</code>  (而不是  <code>6</code> ) 的話：<br>a. 可以<a href="https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F">按這裡</a>安裝 (如果是 CentOS 那麼你只需要執行  <code>sudo yum install epel-release</code> )<br>b.  <code>sudo yum install git</code></p></blockquote><blockquote><p>如果你的版本是 <strong>RHEL/CentOS</strong>  <code>6</code> <br>a.  <code>curl -s https://setup.ius.io/ | sudo bash</code> <br>b.  <code>sudo yum install git2u</code></p></blockquote><blockquote><p>如果你想，你也可以自己建構原始碼。您將需要手動下載 Git-lfs rpm 並進行安裝  <code>rpm -i --nodeps git-lfs*.rpm</code> 。</p></blockquote><h4 id="step2-安裝-git-lfs">Step.2 安裝 <strong>git-lfs</strong></h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -s https://packagecloud.io/install/repositories/github/git-lfs/script.rpm.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span><span class="token function">sudo</span> yum <span class="token function">install</span> git-lfs<span class="token function">git</span> lfs <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h3 id="windows">Windows</h3><h4 id="step1-下載安裝檔">Step.1 下載安裝檔</h4><p>可以從 <a href="https://github.com/git-lfs/git-lfs/releases">https://github.com/git-lfs/git-lfs/releases</a> 選擇你要的版本進行下載。</p><h4 id="step2-執行安裝檔">Step.2 執行安裝檔</h4><h4 id="step3-在-cmd-或者-git-bash-執行-git-lfs-install">Step.3 在 CMD 或者 Git-Bash 執行  <code>git lfs install</code></h4><hr><h2 id="開始使用">開始使用</h2><blockquote><p>在下 git 指令時，你只需要將追蹤大檔案 (超過 100 MB) 的指令  <code>git add</code>  改成  <code>git lfs track</code> 。<br>舉例來說，如果要追蹤副檔名為 <code>.psd</code>  的大檔案，那請使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> lfs track <span class="token string">"*.psd"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>而<strong>不是</strong>  <code>git add &quot;*.psd&quot;</code>  ！</p></blockquote><blockquote><p>並且確保檔案  <code>.gitattributes</code>  有被追蹤。 (這是用來告知 github 此為大型檔案的文件)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> .gitattributes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><p>之後呢？後面的指令都是一樣的。<br>直接  <code>git add</code>  &gt;  <code>git commit</code>  &gt;  <code>git push</code>  ！<br>回到 Github Repository 就可以發現成功被推送了。</p><hr><h2 id="如何取消-lfs">如何取消 LFS ？</h2><ul><li>刪除單個檔案<br>如果你是要刪除 <code>單個檔案</code> ，那麼就需要麻煩點到「<strong> <code>.gitattributes</code> </strong>」這個檔案中去刪除單筆資料，使 Github 知道該檔案不用再被 LFS 給追蹤。</li><li>移除全部 (不使用 LFS 了)<br> 你需要使用指令「<strong> <code>git lfs uninstall</code> </strong>」，如果你是較舊的版本則是使用指令「<strong> <code>git lfs uninit</code> </strong>」來刪除該 Repository 中的 LFS 。<br>另外也請確保檔案「<strong> <code>.gitattributes</code> </strong>」不再被追蹤。(建議如果不需要，請直接下 <strong> <code>git rm .gitattributes</code> </strong> 刪除它)</li></ul><p>範例:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> lfs uninstall<span class="token function">git</span> <span class="token function">rm</span> .gitattributes<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit <span class="token string">"Uninstall LFS"</span><span class="token function">git</span> push origin main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="參考資料">參考資料</h2><p>《Git Large File Storage》<a href="https://git-lfs.github.com/">https://git-lfs.github.com/</a><br>《Cover Image》<a href="https://git-lfs.github.com/images/graphic.gif">https://git-lfs.github.com/images/graphic.gif</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用 git push 推送檔案到 Github 上時，被告知&lt;strong&gt;檔案太大&lt;/strong&gt;無法推送！？馬上教你怎麼解決！&lt;/p&gt;</summary>
    
    
    
    <category term="Notes" scheme="https://blog.alpaca0x0.com/categories/Notes/"/>
    
    <category term="Computer Science" scheme="https://blog.alpaca0x0.com/categories/Notes/Computer-Science/"/>
    
    
    <category term="Github" scheme="https://blog.alpaca0x0.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Maslow&#39;s Hierarchy Of Needs</title>
    <link href="https://blog.alpaca0x0.com/posts/Maslow-s-Hierarchy-Of-Needs/"/>
    <id>https://blog.alpaca0x0.com/posts/Maslow-s-Hierarchy-Of-Needs/</id>
    <published>2021-03-16T18:32:56.000Z</published>
    <updated>2021-10-21T09:23:39.300Z</updated>
    
    <content type="html"><![CDATA[<p>Maslow 將心理需求與生理需求分成了五個層級來探討…</p><span id="more"></span><hr><h2 id="起源">起源</h2><p><strong>Maslow’s Hierarchy Of Needs (馬斯洛 需求層次理論)</strong> 是由一名美國心理學家 <a href="https://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%AF%E6%8B%89%E7%BD%95%C2%B7%E9%A9%AC%E6%96%AF%E6%B4%9B"><strong>Abraham Harold Maslow</strong></a> 於 <strong>1943</strong> 年《<strong>心理學評論</strong>》的論文〈<strong>人類動機的理論 (A Theory of Human Motivation)</strong>〉 中所提出的理論。該理論屬於<strong>心理健康</strong>的理論，主張認為人類天生的需求是首先要被滿足的，隨後更進一步滿足自己，最後達成自我實現。</p><p><a href="https://upload.wikimedia.org/wikipedia/zh/e/e0/Abraham_Maslow.jpg"><img src="Abraham_Maslow.jpg" alt="Abraham Harold Maslow (圖源: Wiki 維基百科)"></a></p><hr><h2 id="需求比較">需求比較</h2><p>凡是人便有需求，<strong>食衣住行娛樂</strong>皆是。<br>而這些需求有<strong>輕重緩急</strong>之分，舉例「 <code>食</code> 」相較「 <code>娛樂</code> 」來的更重要，因此在滿足「 <code>食</code> 」的需求之前，「 <code>娛樂</code> 」先放一旁。又好比說「 <code>安全</code> 」與「 <code>理想</code> 」來說，當一個人面臨<strong>威脅自身安全</strong>的處境而又<strong>無法解決</strong>時，是<strong>沒</strong>有心思去<strong>思考自己的理想</strong>的，安全相對是更重要的，也正是大家常聽到的「<strong>安全第一</strong>」。</p><p>Maslow 將這些需求進行<strong>排列</strong>、<strong>分級</strong>就形成了著名的「<strong>需求層級圖</strong>」。</p><hr><h2 id="需求層級">需求層級</h2><p><a href="https://upload.wikimedia.org/wikipedia/commons/thumb/6/60/Maslow%27s_Hierarchy_of_Needs.svg/1280px-Maslow%27s_Hierarchy_of_Needs.svg.png"><img src="1280px-Maslow's_Hierarchy_of_Needs.svg.png.jpg" alt="需求層級圖 (圖源: Wiki 維基百科)"></a></p><p>這些需求被以<strong>優先需要的程度</strong> <code>高至低</code> 分別為 <code>下到上</code> 分級，及形成上圖的<strong>需求層級金字塔</strong>。<br>以下為生理層面的需求：</p><blockquote><h3 id="physiological-needs-生理需求">Physiological Needs (生理需求)</h3><p>級別最低，在整個需求層級金字塔最底部，也就是<strong>最優先需要</strong>的層級。<br>其中就包括 <code>空氣</code> 、 <code>食物</code> 、 <code>水</code> 、 <code>睡眠</code> 、 <code>性</code> 等。<br>這些是使人能存活下去的主要條件。當不被滿足時，其他層級的需求相對不再重要，甚至可能被捨棄，像是「<a href="https://zh.wikipedia.org/wiki/%E7%83%8F%E6%8B%89%E5%9C%AD%E7%A9%BA%E8%BB%8D571%E8%99%9F%E7%8F%AD%E6%A9%9F%E7%A9%BA%E9%9B%A3">烏拉圭空軍 571 號班機空難</a>」事件中，遇難的 45 人中，只剩 16 名生還者，使這些生還者能夠生存的關鍵在於，他們選擇<strong>吃了其他同伴的遺體</strong>，聽起來殘忍，但也正是因為這個選擇滿足了生理需求才能活下來。</p></blockquote><blockquote><p>「<em>倖存者的食物很少：幾塊巧克力、什錦點心和幾瓶紅酒。墜機後的幾天裡，眾人將食物分成很少的量，以免把他們微薄的補給用盡。費托還設計一種把雪融成水的辦法，他把雪放上金屬座位。用陽光把雪融掉後滴入空酒瓶。即便分配很嚴格，他們的食物還是很快地減少。白雪皚皚的山上不會有天然植物或動物存活。眾人作出集體決定，吃死去戰友的屍體。這個決定不是輕易做出的，因為大多死難者都是親密的朋友和同學。</em>」 - <a href="https://zh.wikipedia.org/wiki/%E7%83%8F%E6%8B%89%E5%9C%AD%E7%A9%BA%E8%BB%8D571%E8%99%9F%E7%8F%AD%E6%A9%9F%E7%A9%BA%E9%9B%A3">Wiki 維基百科</a></p></blockquote><blockquote><h3 id="safety-needs-安全需求">Safety Needs (安全需求)</h3><p>為次要需求層級，在滿足了 <strong>Physiological (生理)</strong> 層面的需求後，生物的基本生存條件就被鞏固了，但以群觀視角來說，依舊無法滿足真正「<strong>穩定的生存</strong>」。<br>對一般動物而言，身處的<strong>環境</strong>及自己處在<a href="https://zh.wikipedia.org/wiki/%E9%A3%9F%E7%89%A9%E9%8F%88">食物鏈</a>的哪一環決定了自己的安全條件如何。而人類不只是如此，人類還必須得面臨在人類社會中的 <code>經濟</code> 問題。<br>諸如 <code>人身安全</code> 、 <code>生活安穩</code> 、 <code>疾病或痛苦</code> 、 <code>威脅</code> 等，只要是影響到<strong>自身生命安全</strong>的因素，皆是屬於該層級。</p></blockquote><hr><p>以上皆是為了「生存」的生理需求，<br>從這裡才開始有了心理需求：</p><blockquote><h3 id="love-and-belonging-needs-愛與歸屬感需求">Love And Belonging Needs (愛與歸屬感需求)</h3><p>又稱「<strong>社交需求</strong>」。既然是「<strong>社交</strong>」就<strong>不</strong>會只有<strong>自己</strong>。<br><strong>生理需求</strong>中所作的一切都只是<strong>為了自己</strong>，讓自己能夠活下去，但在此層級中，開始會<strong>為他人著想</strong>、<strong>付出</strong>。<br>開始有了 <code>親情</code> 、 <code>友誼</code> 、 <code>愛情</code> 等需求，可以為了愛付出貢獻，甚至是無私的奉獻。</p></blockquote><blockquote><h3 id="esteem-needs-尊嚴需求">Esteem Needs (尊嚴需求)</h3><p>屬於高級需求。在文明社會中，大家所追求的基本上就是該層級的相關內容。<br>尊嚴不只是<strong>他人對自己</strong>，也包括<strong>自己對自己</strong>，分別又稱<strong>外部尊重</strong>及<strong>內部尊重</strong>。<br>舉例 <code>社會地位</code> 、 <code>成就</code> 、 <code>名聲</code> 、 <code>被他人認同</code> 、 <code>被他人尊重</code> 屬於<strong>外部尊重</strong>；<br> <code>自我認知價值</code> 、 <code>自信(自我肯定)</code> 、 <code>自尊</code> 則屬於<strong>內部尊重</strong>。</p></blockquote><blockquote><h3 id="need-for-self-actualization-自我實現需求">Need For Self-Actualization (自我實現需求)</h3><p>為最高層級的需求。主要是指獲得更高<strong>人生境界</strong>的需求。<br>像是<strong>發覺自我潛能</strong>、<strong>做到自我實現</strong>等。<br>聽起來很複雜，但例子就在生活周遭： <code>愛護動物而選擇吃素</code> 、 <code>運動國手勤奮訓練為了超越自己</code> 、 <code>為了幫助弱勢族群而捐款</code> ，是一種衍生性需求。</p></blockquote><hr><blockquote><h3 id="over-actualization-超自我實現">Over Actualization (超自我實現)</h3><p>Maslow 在晚期提出的延伸理論。<br>當人們充分的滿足 <strong>Need For Self-Actualization (自我實現需求)</strong> 時，所出現短暫的「<strong>高峰體驗</strong>」。<br>可能是 <code>成就感</code> 或 <code>某種體悟</code> ，通常都是在進行或完成一件事情時，<strong>深刻體驗</strong>到的感覺，通常<strong>藝術家</strong>或是<strong>音樂家</strong>較常體會到。<br>「<em>一位音樂家，在演奏音樂時，所感受到的一股「忘我」的體驗。一位藝術家在畫圖時，感受不到時間的消逝，他在畫圖的每一分鐘，對他來說跟一秒一樣快，但每一秒卻活的比一個禮拜還充實。</em>」 - <a href="https://zh.wikipedia.org/wiki/%E9%9C%80%E6%B1%82%E5%B1%82%E6%AC%A1%E7%90%86%E8%AE%BA">Wiki 維基百科</a></p></blockquote><hr><h2 id="參考資料">參考資料</h2><p>《Wiki 維基百科 - 需求層級理論》<a href="https://zh.wikipedia.org/wiki/%E9%9C%80%E6%B1%82%E5%B1%82%E6%AC%A1%E7%90%86%E8%AE%BA">https://zh.wikipedia.org/wiki/ 需求层次理论</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Maslow 將心理需求與生理需求分成了五個層級來探討…&lt;/p&gt;</summary>
    
    
    
    <category term="Learning" scheme="https://blog.alpaca0x0.com/categories/Learning/"/>
    
    <category term="Management Science" scheme="https://blog.alpaca0x0.com/categories/Learning/Management-Science/"/>
    
    
    <category term="Psychology" scheme="https://blog.alpaca0x0.com/tags/Psychology/"/>
    
  </entry>
  
  <entry>
    <title>進階 Google 搜尋技巧 - Google Hacking</title>
    <link href="https://blog.alpaca0x0.com/posts/Google-Hacking/"/>
    <id>https://blog.alpaca0x0.com/posts/Google-Hacking/</id>
    <published>2021-03-05T10:01:51.000Z</published>
    <updated>2021-10-21T09:23:39.280Z</updated>
    
    <content type="html"><![CDATA[<p>這個被稱作「<strong>Google Hacking</strong>」的技巧，不僅可以快速找到你要的資料，甚至常被拿來… <strong>肉搜</strong>。</p><span id="more"></span><hr><h2 id="search-engine">Search Engine</h2><p>搜尋引擎是利用 <strong>Web-Crawler (網絡爬蟲)</strong> 技術為基礎所製作的一種工具，其目的顧名思義就是用來搜索資料。</p><p>搜索引擎是現代人不可沒有的一項發明，成堆的檔案、照片、音樂總是讓人需要花大把時間將其分類，一陣子沒注意，下一次在找檔案時可能就要花許多時間，直到搜尋引擎的出現。</p><p>其中， Google 的搜索引擎最為出名且被廣泛運用，由於非常強大，身為<strong>名詞</strong>的「Google」如今在許多地方已經被當作<strong>動詞</strong>使用，舉例來說，現在的人總是將「<strong>上網找資料</strong>」直接稱作「<strong>上網 Google</strong>」，這也間接說明了 Google 搜索引擎的影響力。</p><p>以下為你介紹關於 Google　搜尋引擎，你所可能不知道的技巧。</p><hr><h2 id="基礎技巧-應該很多人都知道了">基礎技巧 (應該很多人都知道了)</h2><blockquote><h3 id="過舊的資訊過濾">過舊的資訊過濾</h3><p>在 Google 搜索引擎上，位於搜尋欄位右下角的「 <code>工具</code> 」按鈕，透過設定時間，可以過濾掉許多老舊、雜亂的資訊，讓你能更快速找到你要的資料。</p><p><img src="01.png" alt=""></p></blockquote><hr><blockquote><h3 id="精準搜尋圖片">精準搜尋圖片</h3><p>在圖片搜索後，按下搜索欄位旁的「 <code>設定</code>  &gt;  <code>進階搜尋</code> 」即可過濾不必要的關鍵字，甚至可以選擇圖片<strong>比例</strong>、<strong>格式</strong>、<strong>地區</strong>、<strong>使用權</strong>等。</p><p><img src="02.png" alt=""><br><img src="02-1.png" alt=""><br><img src="02-2.png" alt=""></p></blockquote><hr><blockquote><h3 id="以圖搜圖">以圖搜圖</h3><p>這個相信比較多人知道，不過為了還不知道的朋友還是說一下。<br>一般來說我們搜尋圖片都是以「<strong>關鍵字</strong>」搜尋後得到結果，但 Google 允許你使用「<strong>圖片</strong>」進行搜索。許多人盜用網美照行騙，在過去可能很難查證照片真偽，現在則只需要將圖丟上網以圖搜圖，立刻抓包！<br>點選圖片搜尋欄位的右方 <code>相機圖示</code> ，即可選擇要搜尋的圖片，可以使用<strong>網址</strong>或者<strong>本地上傳</strong>。</p><p><img src="03.png" alt=""><br><img src="03-1.png" alt=""></p></blockquote><hr><h2 id="進階技巧-google-hacking">進階技巧 - Google Hacking</h2><p><strong>Google Hacking</strong> 又稱 <strong>Google Dorking</strong>，是一種利用 Google 內建的搜尋功能來找到安全漏洞或敏感資訊的技巧。許多人並不知道，Google 是可以透過許多內建的過濾器來更精準的搜索資訊的，而這些技巧也很常被用於<strong>肉搜</strong>。</p><blockquote><h3 id="特定標題">特定標題</h3><p>可以透過「intitle:“<strong>標題</strong>” <strong>關鍵字</strong>」來搜索特定標題的網站。<br>舉例「intitle:“<strong>新北市</strong>” <strong>反毒</strong>」可以用來搜尋<strong>標題</strong>含有「 <code>新北市</code> 」且<strong>內容</strong>含有「 <code>反毒</code> 」的相關資訊</p><p><img src="04.png" alt=""></p></blockquote><hr><blockquote><h3 id="網頁內容含有特定文字">網頁內容含有特定文字</h3><p>可以透過「intext:“<strong>文字</strong>”」來搜索含有特定文字的網站。<br>舉例「intext:“<strong>麥當勞活動</strong>”」可以用來搜尋<strong>網站內容</strong>中含有「 <code>麥當勞活動</code> 」文字的頁面。(並<strong>非</strong>只是關鍵字，而是更加精確的特定文字)</p><p><img src="07.png" alt=""></p></blockquote><hr><blockquote><h3 id="特定網域">特定網域</h3><p>透過「site:“<strong>網域</strong>” <strong>關鍵字</strong>」來搜尋基於該網域下關於該關鍵字的搜尋結果。<br>舉例「site:“www.dcard.tw” <strong>情侶 吵架</strong>」可以搜尋「 <code>www.dcard.tw</code> 」網站中<strong>內容</strong>含有「 <code>情侶 吵架</code> 」相關的頁面。</p><p><img src="05.png" alt=""></p></blockquote><hr><blockquote><h3 id="含有特定文字的網址">含有特定文字的網址</h3><p>可以透過「inurl:<strong> 文字</strong>」來搜索含有該字串的網址。<br>舉例「inurl:<strong>login</strong>」可以用來搜尋「 <code>網址</code> 」中含有「 <code>login</code> 」的結果。</p><p><img src="09.png" alt=""></p></blockquote><hr><blockquote><h3 id="特定檔案格式">特定檔案格式</h3><p>查詢特定檔案格式可以用「filetype:<strong> 格式</strong> <strong>關鍵字</strong>」來搜尋。<br>舉例「filetype:<strong>doc</strong> <strong>統一超商 財務報表</strong>」可以搜尋與「 <code>統一超商 財務報表</code> 」有關且為「 <code>.doc</code> 」的文件。也可以使用「ext:<strong>doc</strong>」來精確搜尋副檔名。</p><p><img src="06.png" alt=""></p></blockquote><hr><blockquote><h3 id="網頁在-google-的-cache-快取">網頁在 Google 的 Cache (快取)</h3><p>可以透過「cache:“<strong>網域</strong>”」來搜索網站在 Google 中的緩存。<br>舉例「cache:“<strong>reddit.com</strong>”」可以用來搜尋「 <code>reddit.com</code> 」在 Google 中的緩存。</p><p><img src="08.png" alt=""></p></blockquote><hr><blockquote><h3 id="單字的解釋-定義">單字的解釋、定義</h3><p>可以透過「define:<strong> 單字</strong>」來搜索關於該單字的解釋、定義。(前提是 Google 要有收入該單字)<br> 舉例「define:<strong> 科普</strong>」可以用來搜尋「 <code>科普</code> 」在 Google 中解釋、定義。</p><p><img src="10.png" alt=""></p></blockquote><hr><h2 id="其他運用">其他運用</h2><h3 id="混合查詢">混合查詢</h3><p>舉例「site:“<strong>i.4cdn.org</strong>” filetype:<strong>pdf</strong> intitle:<strong>test</strong>」。<br><img src="11.png" alt=""></p><hr><h3 id="強調搜尋-排除搜尋">強調搜尋、排除搜尋</h3><p>關鍵字前加上「<strong>+</strong>」可以強調搜尋，加上「<strong>-</strong>」則排除相關資訊。<br>舉例以下搜尋結果會顯示關於「 <code>台灣風景</code> 」的資訊，尤其「 <code>台南</code> 」，並且排除關於「 <code>台北</code> 」關鍵字的資訊。<br><img src="12.png" alt=""></p><hr><h3 id="精確搜尋">精確搜尋</h3><p>用雙引號「<strong>&quot;</strong>」將關鍵字框起可以更加精確的搜尋。<br>舉例將搜尋「<strong>台大醫院</strong>」改為「<strong>“台大醫院”</strong>」<br><img src="13.png" alt=""></p><hr><h3 id="更多用法請自行上網搜尋">更多用法請自行上網搜尋</h3><p>以下附上網路上其他人製作的表格：</p><p><a href="https://i.imgur.com/MesRgnG.png"><img src="14.png" alt="圖源: imgur.com"></a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;這個被稱作「&lt;strong&gt;Google Hacking&lt;/strong&gt;」的技巧，不僅可以快速找到你要的資料，甚至常被拿來… &lt;strong&gt;肉搜&lt;/strong&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="Notes" scheme="https://blog.alpaca0x0.com/categories/Notes/"/>
    
    <category term="Computer Science" scheme="https://blog.alpaca0x0.com/categories/Notes/Computer-Science/"/>
    
    
    <category term="Google" scheme="https://blog.alpaca0x0.com/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>Monty-Hall Problem 三門問題｜選擇的順序改變了機率？並非如此！</title>
    <link href="https://blog.alpaca0x0.com/posts/MontyHall-Problem/"/>
    <id>https://blog.alpaca0x0.com/posts/MontyHall-Problem/</id>
    <published>2021-03-03T16:18:00.000Z</published>
    <updated>2021-10-21T09:23:39.310Z</updated>
    
    <content type="html"><![CDATA[<p><strong>三分之一</strong>的機率中，可以透過<strong>更換選擇</strong>來<strong>提高機率</strong>，這是曾經讓許多人摸不著頭緒的 Monty-Hall Problem (三門問題)，你能參透其中的答案嗎？</p><span id="more"></span><hr><h2 id="起源">起源</h2><p><strong>Monty-Hall Problem</strong> 又稱<strong>三門問題</strong>、<strong>山羊問題</strong>、<strong>蒙提霍爾問題</strong>。<br>起源是一個源自<a href="https://zh.wikipedia.org/wiki/%E5%8D%9A%E5%BC%88%E8%AE%BA"><strong> Game Theory (博奕論)</strong></a> 的數學遊戲問題，最早推測可能出自 1963 年的一個美國電視遊戲節目 - 「<strong>Let’s Make a Deal (讓我們一起交易)</strong>」，其中該節目的主人名為「<strong>Monty Hall</strong>」，故稱做「<strong>Monty-Hall Problem</strong>」。</p><hr><h2 id="三門遊戲">三門遊戲</h2><p><a href="https://zh.wikipedia.org/wiki/%E8%92%99%E6%8F%90%E9%9C%8D%E7%88%BE%E5%95%8F%E9%A1%8C#/media/File:Monty_open_door.svg"><img src="01.png" alt="圖源: Wiki 維基百科"></a></p><p>在節目中，參賽者的面前會有<strong>三道關閉的門</strong>，其中一道門後有著一輛<strong>汽車</strong>，其餘兩道門後則是<strong>山羊</strong> (我也不知道為啥是山羊…)，若是參賽者選中門後為汽車的門，那麼即可贏得汽車。</p><p>遊戲開始後，主持人會要求參賽者<strong>選擇一道門</strong>，不論這道門後是<strong>汽車</strong>或者<strong>山羊</strong>，主持人都會開啟 <code>參賽者所選的門之外，其餘兩道門中含有山羊的那道門</code>  (主持人是知道門後狀況的)。</p><p>舉例，三道門分別為  <code>A</code> 、 <code>B</code> 、 <code>C</code>  ，參賽者選擇了  <code>C</code>  ，若是  <code>B</code> 、 <code>C</code>  門後皆為 <code>山羊</code> ，那麼主持人則會開啟  <code>B</code>  門；若是  <code>A</code> 、 <code>B</code>  門後為山羊，那麼主持人隨機選擇開啟  <code>A</code>  或  <code>B</code>  門。</p><p>到目前為止沒什麼太大問題，這時候我們探討的核心問題是…<br>「在主持人打開一道背後是山羊的門後，會詢問參賽者<strong>是否要更換剛剛所選的門</strong>，若是選擇換門，那麼參賽者贏得汽車的的<strong>機率是否會增加</strong>？」</p><p>聽起來很荒謬對吧！換不換門，其實對於結果並不會改變才對。<br>但若是我告訴你，這的確會使得贏得汽車的機率提高至 <strong>1/2</strong> 呢？</p><hr><h2 id="驗證">驗證</h2><p>為了方便探討機率，我們實際列舉所有可能性:</p><blockquote><p>先假設  <code>A</code> 、 <code>B</code>  門後是 <code>山羊</code> ，而  <code>C</code>  門後則是 <code>汽車</code></p><ul><li>不換門<ul><li>參賽者堅持選擇  <code>A</code>  門，獲得 <code>山羊</code></li><li>參賽者堅持選擇  <code>B</code>  門，獲得 <code>山羊</code></li><li>參賽者堅持選擇  <code>C</code>  門，獲得 <code>汽車</code></li></ul></li></ul><p>由此可知，贏得 <code>汽車</code> 機率為  <code>1/3</code></p><ul><li>換門<ul><li>參賽者選擇  <code>A</code>  門，主持人開  <code>B</code>  門，參賽者換  <code>C</code>  門，獲得 <code>汽車</code></li><li>參賽者選擇  <code>B</code>  門，主持人開  <code>A</code>  門，參賽者換  <code>C</code>  門，獲得 <code>汽車</code></li><li>參賽者選擇  <code>C</code>  門，主持人開  <code>A</code>  門，參賽者換  <code>B</code>  門，獲得 <code>山羊</code></li><li>參賽者選擇  <code>C</code>  門，主持人開  <code>B</code>  門，參賽者換  <code>A</code>  門，獲得 <code>山羊</code></li></ul></li></ul><p>欸？贏得 <code>汽車</code> 的機率變成  <code>1/2</code>  ！？</p></blockquote><p>這太不符合常理了，怎麼可能在選擇過後機率發生改變！？<br>別擔心，帶你繼續看下去。<br>但在解答之前，喜歡解題的朋友，可以先停在這邊好好思考一下。</p><hr><h2 id="解答">解答</h2><p>其實，機率是沒有變的，一直都是  <code>1/2</code> ！<br>在一開始的選擇當中，三道門選一道的機率確實是  <code>1/3</code> ，但在主持人開啟一道門後 (後面是山羊的門)，這等於刪除了一道門，此刻若是再給參賽者一次選擇，這次的選擇機率將會是  <code>1/2</code> ，重點在於，我們必須將前後兩次選擇視為 <strong> <code>獨立事件</code> </strong>，真正影響參賽者贏得汽車機率的關鍵在於<strong>第二次</strong>的選擇。</p><p>我們再來重新列舉一次可能性:</p><blockquote><p>先假設  <code>A</code> 、 <code>B</code>  門後是 <code>山羊</code> ，而  <code>C</code>  門後則是 <code>汽車</code> <br>並且 主持人已經開啟一道門 ( <code>第一次</code> 選擇不重要，此指的選擇是 <code>第二次</code> 選擇)</p><ul><li>不換門<ul><li>主持人刪除  <code>B</code>  門，參賽者仍選擇  <code>A</code>  門，獲得 <code>山羊</code></li><li>主持人刪除  <code>A</code>  門，參賽者仍選擇  <code>B</code>  門，獲得 <code>山羊</code></li><li>主持人刪除  <code>A</code>  門，參賽者仍選擇  <code>C</code>  門，獲得 <code>汽車</code></li><li>主持人刪除  <code>B</code>  門，參賽者仍選擇  <code>C</code>  門，獲得 <code>汽車</code></li></ul></li></ul><p>機率為  <code>1/2</code></p></blockquote><p>沒錯，這道陷阱題使人容易忽略了參賽者選擇汽車那道門時，主人持人選擇刪除門的可能性是有<strong>兩種</strong>的。</p><p><a href="https://zh.wikipedia.org/wiki/File:Monty_tree_door1.svg"><img src="02.jpg" alt="圖源:  Wiki 維基百科"></a></p><hr><h2 id="結論">結論</h2><p>這麼一來你知道為什麼了嗎？(如果還是很矇，可以再重頭看一次 XD)<br> 有時候看一件事物時， <strong>第一直覺</strong> 有可能會是 <strong>錯</strong> 的，當你深信自己的第一直覺而不求證時，很容易造成如同該題目一般的狀況，一直反覆的問自己為什麼，總是不能理解為什麼機率為 <strong>1/2</strong> 。<br>那是因為題目一開始就告訴你機率是 <strong>1/3</strong> ，而我們在看到題目是「<strong>三道門選一道</strong>」的時候，就對此深信不已。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;三分之一&lt;/strong&gt;的機率中，可以透過&lt;strong&gt;更換選擇&lt;/strong&gt;來&lt;strong&gt;提高機率&lt;/strong&gt;，這是曾經讓許多人摸不著頭緒的 Monty-Hall Problem (三門問題)，你能參透其中的答案嗎？&lt;/p&gt;</summary>
    
    
    
    <category term="Interesting" scheme="https://blog.alpaca0x0.com/categories/Interesting/"/>
    
    
    <category term="Mathematics" scheme="https://blog.alpaca0x0.com/tags/Mathematics/"/>
    
  </entry>
  
  <entry>
    <title>《Manage-Sci 02》管理原則、角色分配｜管理的運作架構</title>
    <link href="https://blog.alpaca0x0.com/posts/Management-Science-02/"/>
    <id>https://blog.alpaca0x0.com/posts/Management-Science-02/</id>
    <published>2020-10-22T16:20:28.000Z</published>
    <updated>2021-10-21T09:23:39.300Z</updated>
    
    <content type="html"><![CDATA[<p>負責管理真的比較<strong>輕鬆</strong>嗎？<strong>責任</strong>與<strong>壓力</strong>不是人人都可以<strong>承擔</strong>的。</p><span id="more"></span><hr><h1 id="14-項管理原則-principles-of-management">14 項管理原則 (Principles Of Management)</h1><p>上一篇文章提到的那位提出「<strong>古典管理理論 (法約爾主義)</strong>」的法國管理學理論學家 <a href="https://zh.wikipedia.org/wiki/%E4%BA%A8%E5%88%A9%C2%B7%E6%B3%95%E7%BA%A6%E5%B0%94"><strong>Henri Fayol (亨利・法約爾)</strong></a> 總結出了<strong> 14 項管理原則</strong>：</p><blockquote><ol><li><strong>勞動分工 (Division Of Work)</strong><ul><li>該原則屬於<strong>自然規律</strong>。和 <a href="https://zh.wikipedia.org/wiki/%E4%BA%9A%E5%BD%93%C2%B7%E6%96%AF%E5%AF%86"><strong>Adam Smith (亞當・史密斯)</strong></a> 的「<a href="https://wiki.mbalib.com/zh-tw/%E6%96%AF%E5%AF%86%E7%9A%84%E5%88%86%E5%B7%A5%E7%90%86%E8%AE%BA" title="MBA 智庫百科"><strong>分工理論</strong></a>」相同。<strong>專業化</strong>使得員工<strong>提高效率</strong>來提升產出。通過<strong>分工</strong>來提高<strong>管理工作的效率</strong>，但勞動分工有一定的<strong>限度</strong>，<strong>經驗</strong>與<strong>尺度感</strong>告訴我們<strong>不</strong>應超越這些<strong>限度</strong>。</li></ul></li><li><strong>權力與責任 (Authority and Responsibilities)</strong><ul><li>管理者必須擁有能夠下達指令的權利，而「<strong>有權利就也代表著有責任</strong>」，這就是著名的<a href="https://wiki.mbalib.com/zh-tw/%E6%9D%83%E8%B4%A3%E5%AF%B9%E7%AD%89%E5%8E%9F%E5%88%99" title="MBA 智庫百科"><strong>權責相符</strong></a>原則。而要貫徹<strong>權責相符</strong>原則，就應該要存在有效地<strong>獎勵</strong>和<strong>懲罰</strong>制度。</li></ul></li><li><strong>紀律 (Discipline)</strong><ul><li>員工必須嚴謹的<strong>遵守</strong>組織<strong>規章</strong>，而<strong>規章</strong>是<strong>領導人造就的</strong>，其<strong>紀律</strong>狀況主要取決於其<strong>領導人</strong>的<strong>道德</strong>標準。</li><li><strong>紀律</strong>是一個企業<strong>成功的關鍵</strong>，若沒有紀律，任何一個企業都<strong>不</strong>能興旺繁榮。</li><li><strong>制定</strong>和<strong>維持紀律</strong>最有效的辦法是：<ul><li><strong>優良的領導</strong>：一個好的<strong>紀律</strong>來源於<strong>有效的領導力</strong>。</li><li><strong>明確而又公平的協定</strong>：<strong>管理者</strong>必須能與<strong>下屬</strong>有效<strong>溝通</strong>、<strong>理解</strong>。</li><li><strong>合理的懲罰機制</strong>：<strong>違反紀律者</strong>必須給予正確地<strong>懲罰</strong></li></ul></li></ul></li><li><strong>統一命令 (Unity Of Command)</strong><ul><li><strong>下屬</strong>只能接受<strong>一位上司</strong>的<strong>命令</strong>。</li><li>如果<strong>兩個領導人</strong>同時對<strong>同一個人</strong>或<strong>同一件事</strong>下達<strong>命令</strong>就容易形成<strong>混亂</strong>。任何情況下都<strong>不</strong>會出現「<strong>適應雙重指揮</strong>」的<strong>社會組織</strong>。</li></ul></li><li><strong>統一領導 (Unity Of Direction)</strong><ul><li>只能有<strong>一個領導人</strong>和<strong>一項計劃</strong>。聽起來跟<strong>統一命令 (Unity Of Command)<strong> 很像，但</strong>統一命令 (Unity Of Command)<strong> 所強調的是「一個下屬只能接受一個上級的</strong>指令</strong>」，而<strong>統一領導 (Unity Of Direction)<strong> 強調的則是「一個下屬只能有一個</strong>直接上級</strong>」。</li></ul></li><li><strong>個體利益服從整體利益 (Subordination Of Individual Interest to the General Interest)</strong><ul><li><strong>犧牲小我</strong>，<strong>完成大我</strong>。<strong>任何員工</strong>的<strong>利益</strong>都不應該居先於<strong>組織整體</strong>的<strong>利益</strong>。</li></ul></li><li><strong>報酬 (Remuneration)</strong><ul><li>員工必須被支付與自己的<strong>付出 合理</strong>、<strong>公平</strong>的<strong>薪水</strong>，同時<strong>不</strong>應導致<strong>超過合理限度</strong>的<strong>過多報酬</strong>。</li></ul></li><li><strong>集權或分權 (Centralization Or Decentralization)</strong><ul><li><strong>集權</strong>指的是<strong>下級</strong>參與<strong>組織決策制定</strong>的<strong>程度</strong>。目的在於對於各種情況找到<strong>最適合</strong>的<strong>集權程度</strong>。</li><li>舉例當一般<strong>小型企業</strong>，上級在傳達命令給下級時，幾乎可以<strong>直接傳達</strong>，這種<strong>權力擴散範圍小</strong>、<strong>較集中</strong>，等於<strong>集權</strong>程度高，這種管理方式稱為「<strong>集權管理 (Centralized Management)</strong>」。</li><li>而相較<strong>大型企業</strong>來說，例如「<strong>Google</strong>」則不可能如此運作。在<strong>大型企業</strong>中，由上級傳達命令給下級的過程中，可能會經過許多<strong>中階</strong>的<strong>部門</strong>或<strong>人員</strong>，此時<strong>權力</strong>就被<strong>分散</strong>了，等同<strong>集權</strong>程度小，這樣的管理方式又稱「<strong>分權管理 (Decentralized Management)</strong>」。</li></ul></li><li><strong>層級制度 (Scalar Chain/Line Of Authority)</strong><ul><li>主要原則是指必須創造一個「由高至低階級的<strong>層級</strong>所劃分構成」的<strong>層級鏈</strong>，而組織中的溝通應當遵循這條等級鏈的路徑。</li><li><strong>層級鏈</strong>使組織中各<strong>環節之間</strong>的<strong>權力關係</strong>更加明顯。有了這個<strong>等級鏈</strong>，組織中的<strong>成員</strong>就可以更<strong>明確了解</strong>各個階級的<strong>權力關係</strong>，以及誰有<strong>資格</strong>對誰下達<strong>命令</strong>，誰又應該對誰<strong>負責</strong>等。</li><li>這同時也表明了組織中<strong>信息傳遞</strong>的<strong>路徑</strong>。</li><li>雖然說組織中的<strong>溝通</strong>需要透過<strong>等級鏈的路徑</strong>一步一步<strong>執行</strong>，但在<strong>許多時候</strong>為了<strong>避免資訊傳達過慢</strong>，或者<strong>傳遞的中繼單位太多</strong>而<strong>導致訊息失真</strong>等，也會採取<strong>直接越級溝通</strong>的方式。(<strong>前提是雙方皆同意</strong>)</li></ul></li><li><strong>秩序 (Order)</strong><ul><li>任何的人和物都應該在<strong>合適</strong>的<strong>時間</strong>、合適的<strong>地點</strong>出現。<strong>秩序原則</strong>就是要求「每個人都待在<strong>最能使自己能力發揮</strong>的工作崗位工作」，就好比「每一件物品都放在它應該放的位置上」。</li><li>要符合秩序原則，首先要對<strong>企業</strong>的<strong>社會需求</strong>與<strong>資源</strong>有確切的理解，並保持兩者之間經常的平衡；同時要消除<strong>任人唯親</strong>、<strong>偏愛徇私</strong>、<strong>野心奢望</strong>和<strong>無知</strong>等弊病。</li></ul></li><li><strong>公平 (Equity)</strong><ul><li><strong>上級</strong>應該<strong>寬容</strong>和<strong>公正</strong>同時又<strong>不忽視任何原則</strong>地對待<strong>下級</strong>。</li></ul></li><li><strong>人員穩定 (Stability Of Tenure Of Personnel)</strong><ul><li>一個人到了<strong>新職位</strong>，從<strong>適應</strong>、<strong>調適</strong>、<strong>熟悉自身工作內容</strong>，一直到能<strong>很好地完成自己的工作</strong>，這個<strong>過程</strong>需要耗費<strong>時間成本</strong>，因此<strong>高的人員流動</strong>是<strong>沒有效率</strong>的。</li><li>管理員應該規劃<strong>有秩序</strong>的人員安排，並且保持<strong>隨時有代替人員</strong>可以<strong>填補空位</strong>。</li></ul></li><li><strong>首創精神 (Initiative)</strong><ul><li>人的<strong>自我實現需求</strong>滿足是激勵人們的<strong>工作熱情</strong>和<strong>工作積極性</strong>最有力的<strong>刺激因素</strong>。想出一個計畫並使其成功是一個聰明人的最大快樂之一，這造就了<strong>首創精神 (Initiative)<strong> 的核心目的「<strong>職員</strong>會在</strong>被允許創立和執行</strong>自己的<strong>計劃</strong>時發揮<strong>更高水平</strong>的<strong>努力</strong>」。</li></ul></li><li><strong>團隊精神 (Esprit de Corps)</strong><ul><li>管理者需要培養員工正確的工作態度。在<strong>團隊精神 (Esprit de Corps)<strong> 原則中，員工</strong>不</strong>該有<strong>自私自利</strong>的心態，為了增加組織的<strong>團結</strong>，員工必須有<strong>個人</strong>和<strong>集體積極的工作態度</strong>，促進團體中的<strong>和諧</strong>與<strong>團結</strong>。</li></ul></li></ol></blockquote><hr><h1 id="henry-mintzberg-的-3-大類-10-種角色">Henry Mintzberg 的 3 大類、10 種角色</h1><p>管理思想家 <strong>Henry Mintzberg (亨利・明茨伯格)</strong> 歸類出了 <strong>10 種角色</strong>並分成 <strong>3 大類</strong>：</p><h2 id="人際角色">人際角色</h2><blockquote><ul><li><strong>代表人 (Figurehead)</strong><ul><li><strong>團隊單位</strong>的<strong>代表</strong>，對外以<strong>團隊名義</strong>參與活動。</li></ul></li><li><strong>領導人 (Leader)</strong><ul><li>給予下屬<strong>指揮</strong>及<strong>下達命令</strong>。</li></ul></li><li><strong>聯絡人 (Liaison)</strong><ul><li>建立良好的組織<strong>內外關係</strong>和<strong>網絡</strong>，做好<strong>溝通</strong>、<strong>傳達</strong>、<strong>收集訊息</strong>等任務。</li></ul></li></ul></blockquote><h2 id="信息">信息</h2><blockquote><ul><li><strong>監控者 (Monitor)</strong><ul><li>透過收集<strong>組織內外消息</strong>以分析出組織的潛在<strong>機會</strong>和<strong>威脅</strong>。</li></ul></li><li><strong>傳播者 (Disseminator)</strong></li><li>將接收到的<strong>組織外部</strong>資訊傳播給<strong>組織內部</strong>。</li><li><strong>發言人 (Spokesman)</strong><ul><li>將<strong>組織內部</strong>欲傳遞給<strong>外部</strong>的訊息，代表<strong>整個單位</strong>傳遞。</li></ul></li></ul></blockquote><h2 id="決策角色">決策角色</h2><blockquote><ul><li><strong>創業家 (Entrepreneur)</strong><ul><li>發現<strong>機會</strong>並進行<strong>投資</strong>。</li></ul></li><li><strong>危機處理者 (Disturbance Handler)</strong><ul><li>處理<strong>危機事件</strong>及<strong>衝突</strong>。</li></ul></li><li><strong>資源分配者 (Resource Allocator)</strong><ul><li>決定資源分配的<strong>對象</strong>及<strong>數量</strong>。</li></ul></li><li><strong>談判者 (negotiator)</strong><ul><li>負責<strong>組織</strong>與<strong>客戶</strong>、<strong>供應商</strong>的<strong>商業談判</strong>。(包含<strong>員工</strong>的<strong>勞資</strong>談判。)</li></ul></li></ul></blockquote><hr><h1 id="參考資料">參考資料</h1><blockquote><p>Wiki 維基百科：<a href="https://zh.wikipedia.org/wiki/%E8%A1%8C%E6%94%BF%E7%AE%A1%E7%90%86%E5%AD%B8%E6%B4%BE">https://zh.wikipedia.org/wiki/ 行政管理學派</a><br> MBA 智庫百科：<a href="https://wiki.mbalib.com/zh-tw/14%E9%A1%B9%E7%AE%A1%E7%90%86%E5%8E%9F%E5%88%99">https://wiki.mbalib.com/zh-tw/14 项管理原则</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;負責管理真的比較&lt;strong&gt;輕鬆&lt;/strong&gt;嗎？&lt;strong&gt;責任&lt;/strong&gt;與&lt;strong&gt;壓力&lt;/strong&gt;不是人人都可以&lt;strong&gt;承擔&lt;/strong&gt;的。&lt;/p&gt;</summary>
    
    
    
    <category term="Learning" scheme="https://blog.alpaca0x0.com/categories/Learning/"/>
    
    <category term="Management Science" scheme="https://blog.alpaca0x0.com/categories/Learning/Management-Science/"/>
    
    
    <category term="Management-Science" scheme="https://blog.alpaca0x0.com/tags/Management-Science/"/>
    
  </entry>
  
  <entry>
    <title>《Manage-Sci 01》組織、管理者、四大功能｜管理 與 被管理</title>
    <link href="https://blog.alpaca0x0.com/posts/Management-Science-01/"/>
    <id>https://blog.alpaca0x0.com/posts/Management-Science-01/</id>
    <published>2020-10-21T16:20:28.000Z</published>
    <updated>2021-10-21T09:23:39.290Z</updated>
    
    <content type="html"><![CDATA[<p>為什麼學習<strong>管理學</strong>？因為在這個<strong>社會</strong>，你不是<strong>管理別人</strong>、就是<strong>被人管理</strong>！你打算怎麼選擇？</p><span id="more"></span><hr><h1 id="學習目的">學習目的</h1><p><strong>管理 (Management)</strong> 指的是 <strong>協調</strong> 及 <strong>監督</strong> 與他人的 <strong>業務</strong>，讓其有 <strong>效率</strong>、有 <strong>效能</strong> 地完成。</p><p>至於何謂「<strong>效能</strong>」、「<strong>效率</strong>」？<br>管理大師 <a href="https://zh.wikipedia.org/wiki/%E5%BD%BC%E5%BE%97%C2%B7%E5%BE%B7%E9%B2%81%E5%85%8B"><strong>彼得・杜拉克 (Peter Ferdinand Drucker)</strong></a> 是這麼說的：</p><blockquote><ul><li><strong>效率 (Efficiency)</strong><br><strong> 把事情做對 (Doing the thing right)</strong> 。<br>強調<strong>資源</strong>的<strong>有效利用</strong>，以<strong>最少投入</strong>得到<strong>最大產出</strong>。</li><li><strong>效能 (Effectiveness)</strong><br><strong> 做對的事情 (Doing the right thing)</strong> 。<br>追求<strong>目標</strong>與<strong>方向正確性</strong>，將「<strong>完成工作活動以達成組織目標</strong>」看的比「<strong>資源的運用</strong>」更為<strong>重要</strong>。</li></ul></blockquote><hr><h1 id="廣義-狹義-的-組織結構">廣義、狹義 的 組織結構</h1><blockquote><ul><li><strong>狹義</strong><ul><li>指為了<strong>實現</strong>組織的<strong>目標</strong>，組織理念下經過組織設計所形成的<strong>組織內部部門</strong>、各個層次之間的排列方式，即<strong>組織內部的構成方式</strong>。</li></ul></li><li><strong>廣義</strong><ul><li>包含<strong>狹義</strong>的組織結構。</li><li>「<strong>組織</strong>」主要是指有<strong>目的</strong>、<strong>系統</strong>的<strong>集合</strong>。</li><li>簡單來說，<strong>組織</strong>就是指為了實現<strong>一致的目標</strong>，而<strong>互相合作</strong>，集結而成的<strong>集體</strong>或<strong>團體</strong>， 如<strong>企業</strong>、<strong>黨團</strong>… 等。</li></ul></li></ul></blockquote><hr><h1 id="管理-與-被管理">管理 與 被管理</h1><blockquote><ul><li><strong>非管理者員工</strong><ul><li>直接<strong>從事工作</strong>與<strong>執行任務</strong>的人員，<strong>沒</strong>有<strong>監督</strong>其他人工作的責任。</li></ul></li><li><strong>管理者 (Managers)</strong><ul><li>在組織中負責<strong>指揮</strong>及<strong>監督</strong>下屬<strong>工作活動</strong>的人員，藉由<strong>協調他人</strong>來<strong>完成工作</strong>，以便<strong>達成組織目標</strong>，必要時也會<strong>親自執行任務</strong>。</li><li>管理者的工作著重在<strong>協助他人進行工作</strong>。</li></ul></li></ul></blockquote><hr><h1 id="管理者階級">管理者階級</h1><blockquote><ul><li><strong>基層管理者 (First-Line Managers)</strong><ul><li>又稱<strong>第一線管理者</strong> 。負責<strong>非管理職員工作的管理</strong>，通常負責指揮他們的<strong>日常作業</strong>。</li><li>常見的<strong>基層管理者</strong>職位：<ul><li>領班 (Supervisors)</li><li>組長 (Shift Managers)</li><li>課長 (Office Managers)</li><li>部門經理 (Department Managers)</li><li>單位協調者 (Unit Coordinators)</li></ul></li></ul></li><li><strong>中階管理者 (Middle Managers)</strong><ul><li>負責管理基層管理者的活動。在管理者職位中，介於<strong>基層</strong>與<strong>高層</strong>之間 (<s>難做人</s>)。</li><li>常見的<strong>中階管理者</strong>職位：<ul><li>部門經理或局長 (Department Or Agency Head)</li><li>專案領導者 (Project Leader)</li><li>單位主管 (Unit Chief)</li><li>地區經理 (District Manager)</li><li>事業部經理 (Division Manager)</li><li>店經理 (Store Manager)</li></ul></li></ul></li><li><strong>高階管理者 (Top Managers)</strong><ul><li>屬於<strong>組織架構</strong>中<strong>位於</strong>或<strong>接近</strong>組織<strong>頂端</strong>的管理者。負責全公司的<strong>決策</strong>，訂定全公司的<strong>計劃</strong>和<strong>目標</strong>。</li><li>常見的<strong>高階管理者</strong>職位：<ul><li>副總經理 (Vice President)</li><li>總經理 (President)</li><li>校長 (Chancellor)</li><li>執行董事 (Managing Director)</li><li>營運長 (Chief Operating Officer)</li><li>執行長 (Chief Executive Officer)</li><li>董事長 (Chairperson Of The Board)</li></ul></li></ul></li></ul></blockquote><hr><h1 id="管理者該做些什麼管理學四大功能">管理者該做些什麼？管理學四大功能！</h1><p>起初，法國的管理學理論學家 <a href="https://zh.wikipedia.org/wiki/%E4%BA%A8%E5%88%A9%C2%B7%E6%B3%95%E7%BA%A6%E5%B0%94"><strong>Henri Fayol (亨利・法約爾)</strong></a> 歸類出的「<strong>古典管理理論 (法約爾主義)</strong>」為：<strong> <code>規劃 (Plan)</code> </strong>、<strong> <code>組織 (Organize)</code> </strong>、<strong> <code>命令 (Command)</code> </strong>、<strong> <code>協調 (Coordinated)</code> </strong>、<strong> <code>控制 (Control)</code> </strong>。</p><p>隨後，美國 <a href="https://zh.wikipedia.org/wiki/%E5%8A%A0%E5%88%A9%E7%A6%8F%E5%B0%BC%E4%BA%9A%E5%A4%A7%E5%AD%A6%E6%B4%9B%E6%9D%89%E7%9F%B6%E5%88%86%E6%A0%A1"><strong>UCLA</strong></a> 的教授 <a href="https://en.wikipedia.org/wiki/Harold_Koontz"><strong>Harold Koontz</strong></a> 和 <a href="https://en.wikipedia.org/wiki/Cyril_J._O'Donnell"><strong>Cyril O’Donnell</strong></a> 提出<strong>管理五大功能</strong>：<strong> <code>規劃 (Planning)</code> </strong>、<strong> <code>組織 (Organizing)</code> </strong>、<strong> <code>人事 (Staffing)</code> </strong>、<strong> <code>領導 (Leading)</code> </strong>、<strong> <code>控制 (Controlling)</code> </strong>。</p><p>而在<strong>現代管理理論</strong>中，管理功能已被濃縮成<strong>四項</strong>：<strong> <code>規劃 (Planning)</code> </strong>、<strong> <code>組織 (Organizing)</code> </strong>、<strong> <code>領導 (Leading)</code> </strong>、<strong> <code>控制 (Controlling)</code> </strong>。</p><blockquote><ul><li><strong>規劃 (Planning)</strong><ul><li>訂定組織發展的<strong>目標</strong>及<strong>方向</strong>及達成目的的方法。(錯的方向努力等同徒勞)</li></ul></li><li><strong>組織 (Organizing)</strong><ul><li>界定部門間的<strong>職掌</strong>、<strong>權責</strong>，透過<strong>安排</strong>和<strong>架構工作</strong>完成組織目標。</li></ul></li><li><strong>領導 (Leading)</strong><ul><li>目的在於<strong>激勵員工</strong>，使其自發性朝向組織目標努力，以提供<strong>最大貢獻</strong>。</li></ul></li><li><strong>控制 (Controlling)</strong><ul><li>檢視<strong>執行過程</strong>及<strong>結果</strong>，對重大差異<strong>提出修正</strong>，將錯誤的方向導回正軌，以確保組織目標的達成。</li></ul></li></ul></blockquote><p>每個階層對於這四項管理功能的比重都有所不同：<br><img src="POLC-first-line-managers.png" alt="first-line-managers" width="85%"><br><img src="POLC-middle-managers.png" alt="middle-managers" width="85%"><br><img src="POLC-top-managers.png" alt="top-managers" width="85%"></p><hr><h1 id="管理者該具備什麼">管理者該具備什麼？</h1><blockquote><ul><li><strong>概念能力 (Conceptual Competencies)</strong><ul><li><strong>掌握</strong>和<strong>協調</strong>組織的<strong>整體利益</strong>和<strong>活動</strong>。</li></ul></li><li><strong>人際關係能力 (Human Competencies)</strong><ul><li>以<strong>領導</strong>、<strong>激勵</strong>和<strong>溝通</strong>來達成<strong>組織的目標</strong>。</li></ul></li><li><strong>技術能力 (Technical Competencies)</strong><ul><li>利用特殊的技術，以完成<strong>特定的管理任務</strong>。</li></ul></li><li><strong>政治能力 (Political Competencies)</strong><ul><li>建立正確的<strong>關係</strong>或<strong>權力</strong>基礎。</li></ul></li></ul></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;為什麼學習&lt;strong&gt;管理學&lt;/strong&gt;？因為在這個&lt;strong&gt;社會&lt;/strong&gt;，你不是&lt;strong&gt;管理別人&lt;/strong&gt;、就是&lt;strong&gt;被人管理&lt;/strong&gt;！你打算怎麼選擇？&lt;/p&gt;</summary>
    
    
    
    <category term="Learning" scheme="https://blog.alpaca0x0.com/categories/Learning/"/>
    
    <category term="Management Science" scheme="https://blog.alpaca0x0.com/categories/Learning/Management-Science/"/>
    
    
    <category term="Management-Science" scheme="https://blog.alpaca0x0.com/tags/Management-Science/"/>
    
  </entry>
  
  <entry>
    <title>Hacker 駭客的定義｜白帽？黑帽？灰帽？｜各種帽子顏色所代表的含意</title>
    <link href="https://blog.alpaca0x0.com/posts/hacker/"/>
    <id>https://blog.alpaca0x0.com/posts/hacker/</id>
    <published>2020-10-20T01:47:21.000Z</published>
    <updated>2021-10-21T09:23:39.390Z</updated>
    
    <content type="html"><![CDATA[<p>時常在<a href="https://zh.wikipedia.org/wiki/%E5%A5%BD%E8%8E%B1%E5%9D%9E"><strong>好萊塢</strong></a>電影中看到駭客的身影，他們給人的形象往往都是<strong>負面</strong>、<strong>惡意</strong>且具有<strong>強烈人格特質</strong>的，這不僅讓人被那獨特的魅力吸引，更多的是那讓人<strong>想一探究竟卻又不敢接近的神秘</strong>，因此「<strong>駭客</strong>」一詞也常受到大家<strong>尊敬</strong>及<strong>崇拜</strong>。</p><span id="more"></span><hr><h3 id="何為-hacker-駭客">何為 <strong>Hacker (駭客)</strong> ？</h3><p>實際上「<strong>駭客</strong>」所指的意思僅僅是「<strong>對計算機知識有著高度理解力的人</strong>」，屬於<strong>正向</strong>名詞。也就是說，駭客其實是包含著<strong>正義</strong>與<strong>邪惡</strong>的，我們通常習慣用各種顏色的「<strong>帽子</strong>」來稱呼：</p><blockquote><p><img src="hat-black.png" alt="Black Hat" width="30%"></p><ul><li><strong>Black Hat (黑帽)</strong><ul><li>黑帽駭客通常就是大家<strong>刻板印象</strong>中的那種，因<strong>特定目的</strong>而執行「<strong>網絡攻擊</strong>、<strong>竊取資料</strong>、<strong>販賣個資</strong>」等<strong>違反</strong>計算機安全行動的人，通常是為了從中獲取<strong>利益</strong>。</li></ul></li></ul><hr><p><img src="hat-white.png" alt="White Hat" width="30%"></p><ul><li><strong>White Hat (白帽)</strong><ul><li>又稱「<strong>道德駭客</strong>」，通常指的是<strong>資訊安全人員</strong>、<strong>安全顧問</strong>等相關職位，亦可指<strong>為打擊網絡犯罪盡力的駭客</strong>。他們經常幫助企業進行 <a href="https://zh.wikipedia.org/wiki/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95"><strong>Pen-Test (滲透測試)</strong></a> 檢測漏洞並回報。</li></ul></li></ul><hr><p><img src="hat-gray.png" alt="Gray Hat" width="30%"></p><ul><li><strong>Gray Hat (灰帽)</strong><ul><li>又稱「<strong>自由駭客</strong>」，就像<strong>黑帽</strong>與<strong>白帽</strong>的綜合，通常為了自己的信念，可以做出如同黑帽的犯罪行為，但在許多時候，也會出面打擊犯罪，可以說是遊走在<strong>法律邊界</strong>。</li><li>許多時候他們所發起的攻擊行動僅僅是想<strong>提醒</strong>對方「<strong>你的系統有漏洞</strong>」，既<strong>不</strong>完全為了<strong>利益</strong>，也並<strong>非</strong>都是<strong>惡意</strong>。</li></ul></li></ul></blockquote><p>如果還要再細分，那麼還可以分成：</p><blockquote><p><img src="hat-red.png" alt="Red Hat" width="30%"></p><ul><li><strong>Red Hat (紅帽)</strong><ul><li>簡單來說，可以理解成是<strong>受聘於政府單位</strong>的駭客。他們為政府做事，包括像是政府養的<strong>網軍</strong>，在必要時對<strong>敵國</strong>發起<strong>網絡攻擊</strong>。他們雖然像<strong>白帽</strong>一樣打擊<strong>黑帽</strong>，但卻是以<strong>惡意攻擊</strong>的方式來反擊，用<strong>以暴制暴</strong>的方式來打擊犯罪。</li></ul></li></ul><hr><p><img src="hat-blue.png" alt="Blue Hat" width="30%"></p><ul><li><strong>Blue Hat (藍帽)</strong><ul><li>又稱「<strong>報復者</strong>」，他們平時<strong>不</strong>為非作歹，但會在受到<strong>挑釁</strong>、<strong>威脅</strong>等可能<strong>危害自身利益</strong>的情況時，會用<strong>惡意攻擊</strong>的方式反擊對方。標準的「人不犯我，我不犯人」。</li></ul></li></ul><hr><p><img src="hat-green.png" alt="Green Hat" width="30%"></p><ul><li><strong>Green Hat (綠帽)</strong><ul><li>可以理解成是初入的<strong>萌新</strong>，努力的學習計算機知識，充滿希望的一張白紙。只要有心，任何人都可以成為下一個<strong>綠帽駭客</strong>。<s>(帽子要帶好 www)</s></li></ul></li></ul></blockquote><hr><h3 id="其他分類">其他分類</h3><blockquote><p><img src="cracker.webp" alt="Cracker" width="30%"></p><ul><li><strong>Cracker (劊客)</strong><ul><li>又稱「<strong>破壞者</strong>」，一般大家所認知的那種專門搞<strong>破壞</strong>、<strong>竊取資料</strong>、<strong>散播電腦病毒</strong>的駭客，我們可以稱作「<strong>Hacker (駭客)</strong>」但更準確的稱呼則是「<strong>Cracker (劊客)</strong>」。他們通常沒有道德標準 (或很低)。Hacker 們建造，而 Cracker 負責破壞。</li></ul></li></ul><hr><p><img src="hat-script-kiddie.png" alt="Script Kiddie" width="30%"></p><ul><li><strong>Script-Kiddie (腳本小子)</strong><ul><li>為<strong>貶義詞</strong>，通常用來描述那些以「<strong>駭客</strong>」自居並<strong>沾沾自喜</strong>的初學者。<br>他們通常<strong>沒有</strong>太高的技術，且喜歡使用<strong>他人</strong>所開發好的<strong>攻擊程式</strong>來<strong>惡意破壞</strong>他人系統，藉此使得他的朋友感到驚訝，並期望因此受到崇拜。<br>在資訊安全領域中，這種人幾乎在哪都受到唾棄。</li></ul></li></ul></blockquote><hr><h3 id="更多詳情">更多詳情</h3><blockquote><ul><li>更多詳情請看 <a href="https://zh.wikipedia.org/wiki/%E9%BB%91%E5%AE%A2"><strong>Wiki 維基百科 - Hacker</strong></a></li></ul></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;時常在&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%A5%BD%E8%8E%B1%E5%9D%9E&quot;&gt;&lt;strong&gt;好萊塢&lt;/strong&gt;&lt;/a&gt;電影中看到駭客的身影，他們給人的形象往往都是&lt;strong&gt;負面&lt;/strong&gt;、&lt;strong&gt;惡意&lt;/strong&gt;且具有&lt;strong&gt;強烈人格特質&lt;/strong&gt;的，這不僅讓人被那獨特的魅力吸引，更多的是那讓人&lt;strong&gt;想一探究竟卻又不敢接近的神秘&lt;/strong&gt;，因此「&lt;strong&gt;駭客&lt;/strong&gt;」一詞也常受到大家&lt;strong&gt;尊敬&lt;/strong&gt;及&lt;strong&gt;崇拜&lt;/strong&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="Popular-Science" scheme="https://blog.alpaca0x0.com/categories/Popular-Science/"/>
    
    
    <category term="Cyber Security" scheme="https://blog.alpaca0x0.com/tags/Cyber-Security/"/>
    
    <category term="Hacker" scheme="https://blog.alpaca0x0.com/tags/Hacker/"/>
    
  </entry>
  
  <entry>
    <title>What is CTF？</title>
    <link href="https://blog.alpaca0x0.com/posts/CTF/"/>
    <id>https://blog.alpaca0x0.com/posts/CTF/</id>
    <published>2020-10-19T16:47:21.000Z</published>
    <updated>2021-10-21T09:23:39.270Z</updated>
    
    <content type="html"><![CDATA[<p>一個讓<strong>駭客</strong>及<strong>資安人員</strong>都<strong>熱血沸騰</strong>的競賽</p><span id="more"></span><hr><h3 id="ctf-capture-the-flag">CTF (Capture The Flag)</h3><p><strong>CTF</strong> 全名 <strong>Capture The Flag</strong>，又稱<strong>奪旗賽</strong>，起源於 <strong>1996</strong> 年 <strong>DEFCON 世界駭客大賽</strong>，是一種基於<strong>網絡安全</strong>技術下的競技項目。<br>該競技主要玩家多半為<strong>網絡安全技術人員</strong>、<strong>駭客</strong>等擁有對計算機安全相關知識感興趣的人。</p><hr><h3 id="ctf-都在做些什麼">CTF 都在做些什麼？</h3><p>如同名稱一般，是一種<strong>奪旗纇競賽</strong>。雙方或多方玩家需要拿下對手的「旗子」，率先奪旗成功方即獲勝 (不同賽式規則不同，但大同小異)。</p><p>這個「<strong>旗子</strong>」通常是一串<strong>亂數</strong>或<strong>不易被猜中的文字</strong>。<br>你必須<strong>保護</strong>好自己隊伍的旗子以防被對手竊取，同時想辦法<strong>獲得</strong>對手的旗子，這其實有點像駭客在攻擊目標的模擬情境，其競賽目的意在「提升自我的<strong>網絡安全意識</strong>及學習如何<strong>保護自己的計算機不被駭客攻擊</strong>」。</p><p>畢竟，要<strong>預防駭客</strong>，那麼你就得懂<strong>駭客的思路</strong>，若要深入的了解，「<strong>成為</strong>」是最有效的方法之一。</p><p>CTF 的題目非常多元，有著眾多的領域及複雜的內容，不論是<strong>密碼學</strong>、<strong>數學</strong>、<strong>軟體工具應用</strong>及各種<strong>計算機知識</strong>都是 CTF 的家常便飯。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;一個讓&lt;strong&gt;駭客&lt;/strong&gt;及&lt;strong&gt;資安人員&lt;/strong&gt;都&lt;strong&gt;熱血沸騰&lt;/strong&gt;的競賽&lt;/p&gt;</summary>
    
    
    
    <category term="Popular-Science" scheme="https://blog.alpaca0x0.com/categories/Popular-Science/"/>
    
    
    <category term="Cyber Security" scheme="https://blog.alpaca0x0.com/tags/Cyber-Security/"/>
    
    <category term="Hacker" scheme="https://blog.alpaca0x0.com/tags/Hacker/"/>
    
  </entry>
  
</feed>
