<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>The Great Scientist — Albert Einstein(1879~1955)</title>
    <url>/2019/12/14/About-Albert-Einstein/</url>
    <content><![CDATA[<p>One day my friend asked me：「<em><strong>In your opinion, what is success?</strong></em>」<br>
「Money? Achievement? Reputation?」 These word first came into my mind.<br>
I think about it for a long time and my answer is… <strong>Contribution</strong>.</p>
<span id="more"></span>
<hr>
<p><em><strong>Albert Einstein</strong></em>, A scientist I respect.<br>
he is best known to the general public for his mass–energy equivalence formula <strong>E=MC^2</strong>, which has been dubbed “the world’s most famous equation”</p>
<p>He received the <strong>1921</strong> Nobel Prize in Physics “for his services to theoretical physics, and especially for his discovery of the law of the photoelectric effect”, a pivotal step in the development of quantum theory.</p>
<hr>
<h3 id="there-wasnt-a-proper-test-to-measure-einsteins-iq-share-from-a-hrefhttpswwwbiographycomnewsalbert-einstein-iq-target_blankwwwbiographycoma">There wasn’t a proper test to measure Einstein’s IQ (Share from <a href="https://www.biography.com/news/albert-einstein-iq" target="_blank">www.biography.com</a>)</h3>
<p>The problem is, nobody really can say for sure what Einstein’s IQ was. There’s no indication that he ever was tested. Indeed, IQ testing was still in its beginning stages in the early 1900s, when Einstein first emerged as a scientific luminary. Since then, the tests have evolved significantly. The maximum IQ score assigned by the WAIS-IV, a commonly-used test today, is 160. A score of 135 or above puts a person in the 99th percentile of the population. News articles often put Einstein’s IQ at 160, though it’s unclear what that estimate is based upon.</p>
<hr>
<p>He published more than 300 scientific papers and more than 150 non-scientific works. His intellectual achievements and originality have made the word “Einstein” synonymous with “genius”. Eugene Wigner compared him to his contemporaries, writing that “Einstein’s understanding was deeper even than Jancsi von Neumann’s. His mind was both more penetrating and more original”.</p>
<hr>
<p>This is what I call “contribution” and a successful person.<br>
<a href="https://en.wikipedia.org/wiki/Albert_Einstein" target="_blank">Read More… (Wiki)</a></p>
]]></content>
      <categories>
        <category>Person (人物分享)</category>
      </categories>
      <tags>
        <tag>Science (科學)</tag>
        <tag>Wiki (維基百科)</tag>
      </tags>
  </entry>
  <entry>
    <title>關於減肥｜間歇式運動</title>
    <url>/2021/01/08/About-Lose-Weight/</url>
    <content><![CDATA[<p>關於減肥，或許你該知道的觀念。用對方法比什麼都重要。</p>
<span id="more"></span>
<h3 id="社會現狀">社會現狀</h3>
<p>現今社會中，尤其亞洲國家，由於審美觀的關係，總是認為「瘦、苗挑」才是美，因此不論男女生，都有許多人會嘗試減肥。<br>
而減肥的方式因人而異，例如 <strong>慢跑、游泳、登山、健走、重訓、節食、食用減肥配方</strong>；而近期<strong>間歇式運動</strong>引發一股熱潮，相比持續性的運動，間歇式更適合<strong>意志力不強</strong>的族群，透過<strong>循序漸進</strong>的運動，以達成<strong>減肥</strong>的目的。</p>
<hr>
<h3 id="減肥失敗的原因">減肥失敗的原因？</h3>
<p>減肥期間很常聽到許多人說：「<strong>少吃，多動</strong>」，但是這真的很難做到。<br>
一開始<strong>減少飲食</strong>，<strong>增加運動量</strong>，會十分<strong>不習慣</strong>且<strong>痛苦</strong>，雖然身體會慢慢地適應，但許多人在起初的階段就撐不下去了，更別說要<strong>堅持幾個月</strong>，甚至幾<strong>年</strong>。<br>
在美食氾濫的台灣中，因經不起誘惑而導致減肥的屢次失敗，有人便開始會<strong>自暴自棄</strong>，或是選擇<strong>民間的偏方</strong>、<strong>坊間減肥藥</strong> (而<strong>非</strong>專業醫生開的處方籤) 等等。</p>
<hr>
<h3 id="減肥藥物-食品">減肥藥物 / 食品</h3>
<p>許多坊間減肥藥會使人的身體產生不適，通常會在藥物中加入<a href="https://zh.wikipedia.org/wiki/%E7%94%B2%E7%8A%B6%E8%85%BA%E6%BF%80%E7%B4%A0"><strong>甲狀腺激素</strong></a>，這會讓身體<strong>代謝速率變快</strong>，以<strong>加快燃燒脂肪</strong>，但一旦停藥後就會產生問題，包括因為藥物取代了原本甲狀腺產生<strong>甲狀腺荷爾蒙</strong>的功能，所以一但停藥後，原本甲狀腺功能跟上腳步，荷爾蒙生產不足，就產生了<strong>甲狀腺功能低下</strong>的狀況。</p>
<p>有些非減肥藥物的藥物也有相對的副作用，例如 <strong>支氣管擴張藥物、抗憂鬱劑</strong>（百憂解，這類抗憂鬱藥物短期使用的確會<strong>抑制食慾</strong>，但是副作用很多，包括<strong>噁心、嗜眠、焦慮、顫抖、噁心、消化不良、腸胃不適、血管擴張、口乾、出汗、出疹、視覺模糊…</strong>），而我本身也因為生病吃過這類藥物，那副作用真的會使人很想放棄服用藥物的想法，身體狀況變的很糟糕，那已經不是單純變瘦，我更傾向於用「<strong>憔悴</strong>」來形容。這並不是<strong>健康</strong>的瘦身，而是<strong>利尿劑、緩瀉劑</strong>等等的效果，透過<strong>破壞健康</strong>達成的<strong>暴力減重</strong>。</p>
<hr>
<h3 id="總結">總結</h3>
<p><strong>間接式運動</strong>所減肥的效果勝過<strong>持續性運動</strong>，因為間歇運動可以提高<strong>休息時間時的熱量消耗</strong>，等於在休息時間時也可以繼續燃脂，使燃燒脂肪的時間勝過持續性運動。</p>
<p>有些人認為運動做越久越好，強度越高越好，動作幅度愈大愈好，但這些可能會導致我們的身體<strong>支撐不住</strong>，超過所能負荷的能力範圍，並且可能會導致<strong>肌肉拉傷、腳踝、手腕扭傷</strong>等等。<br>
運動<strong>強度</strong>與<strong>時間</strong>一開始<strong>不</strong>可以太過<strong>追求</strong>，要懂得<strong>循序漸進</strong>，找到<strong>最適合自己</strong>的<strong>運動節奏、週期</strong>，讓身體<strong>熟悉</strong>後，再<strong>慢慢增加強度</strong>與<strong>時間</strong>，這樣效果反而更好。<br>
減肥的同時也讓身體變的更健康，使我們更有動力堅持下去。在運動過程中有所謂的「<strong>平台期</strong>」，會使許多人感到<strong>挫折</strong>，此時放棄的想法也將隨之而來，這時候我們應該努力想辦法鼓勵自己堅持下去，達到目標的時候也不忘要小小的<strong>獎勵</strong>自己。</p>
<p>我自己蒐集了許多關於減肥的資料，而這些必須搭配正確的<strong>健康知識</strong>及<strong>觀念</strong>，將其中<strong>錯誤的方法</strong>找出並<strong>排除</strong>，用對方法比什麼都來的更重要，正確的運動觀念為基礎下所建立的良好運動習慣，不僅可以<strong>健身</strong>，<strong>塑造身材</strong>，也可以使人<strong>快樂、注意力提高、紓解壓力</strong>，運動的過程會讓人的大腦分泌「<strong>Endorphin (安多芬)</strong>」俗稱「<strong>快樂賀爾蒙</strong>」，這將可以有效的緩解<strong>現代高壓社會下民眾的壓力與憂鬱感</strong>。</p>
]]></content>
      <categories>
        <category>Popular-Science (科普)</category>
      </categories>
  </entry>
  <entry>
    <title>CTF 競賽是什麼？</title>
    <url>/2020/10/20/CTF/</url>
    <content><![CDATA[<p>你是否聽過那讓<strong>駭客</strong>及<strong>資安人員</strong>都<strong>熱血沸騰</strong>的<strong> CTF</strong> 競賽</p>
<span id="more"></span>
<hr>
<h3 id="ctf-capture-the-flag">CTF (Capture The Flag)</h3>
<p><strong>CTF</strong> 全名 <strong>Capture The Flag</strong>，又稱<strong>奪旗賽</strong>，起源於 <strong>1996</strong> 年 <strong>DEFCON 世界駭客大賽</strong>，是一種基於<strong>網絡安全</strong>技術下的競技項目。<br>
該競技主要玩家多半為<strong>網絡安全技術人員</strong>、<strong>駭客</strong>等擁有對計算機安全相關知識感興趣的人。</p>
<hr>
<h3 id="ctf-都在做些什麼">CTF 都在做些什麼？</h3>
<p>如同名稱一般，是一種<strong>奪旗纇競賽</strong>。雙方或多方玩家需要拿下對手的「旗子」，率先奪旗成功方即獲勝 (不同賽式規則不同，但大同小異)。</p>
<p>這個「<strong>旗子</strong>」通常是一串<strong>亂數</strong>或<strong>不易被猜中的文字</strong>。<br>
你必須<strong>保護</strong>好自己隊伍的旗子以防被對手竊取，同時想辦法<strong>獲得</strong>對手的旗子，這其實有點像駭客在攻擊目標的模擬情境，其競賽目的意在「提升自我的<strong>網絡安全意識</strong>及學習如何<strong>保護自己的計算機不被駭客攻擊</strong>」。</p>
<p>畢竟，要<strong>預防駭客</strong>，那麼你就得懂<strong>駭客的思路</strong>，若要深入的了解，「<strong>成為</strong>」是最有效的方法之一。</p>
<p>CTF 的題目非常多元，有著眾多的領域及複雜的內容，不論是<strong>密碼學</strong>、<strong>數學</strong>、<strong>軟體工具應用</strong>及各種<strong>計算機知識</strong>都是 CTF 的家常便飯。</p>
]]></content>
      <categories>
        <category>Popular-Science (科普)</category>
      </categories>
      <tags>
        <tag>Cyber Security (網絡安全)</tag>
        <tag>Hacker (駭客)</tag>
      </tags>
  </entry>
  <entry>
    <title>Cicada 3301 (蟬 3301)｜一個至今仍充滿謎團的神秘組織</title>
    <url>/2020/02/05/Cicada3301/</url>
    <content><![CDATA[<p><strong>2012 年</strong> 初，「 <strong>Cicada 3301</strong> 」的名聲開始傳開，而該神秘組織招收高智商成員的背後到底有什麼陰謀？</p>
<span id="more"></span>
<img src="/2020/02/05/Cicada3301/title.jpg" class="" title="取自網絡，Cicada 3301 留下的訊息。">
<hr>
<h3 id="前言">前言</h3>
<p>如果你並不是資訊領域的人，也不是<a href="https://zh.wikipedia.org/wiki/%E9%83%BD%E5%B8%82%E5%82%B3%E8%AA%AA"><strong>都市傳說</strong></a>或<a href="https://zh.wikipedia.org/wiki/%E5%AF%86%E7%A0%81%E5%AD%A6"><strong>密碼學</strong></a>的愛好者，那你可能沒聽過「 <strong>Cicada 3301</strong> 」。關於該組織的資訊量少之又少，不少人想盡各種方法要撈出他們的資訊，但結果總是徒勞。</p>
<p>以下，本文帶你一探這神秘組織的過去。</p>
<p>另外，在此聲明一點：<br>
<strong>以下所展示的圖片，大多源自網絡上流傳，並非原圖，所以長寬及內容可能與原圖有些落差。</strong></p>
<hr>
<h3 id="起源">起源</h3>
<p><strong>2012 年 1 月 4 日</strong>，知名的美國貼圖論壇「<a href="https://zh.wikipedia.org/wiki/4chan"><strong>4chan</strong></a>」上，有個自稱「 <strong>3301</strong> 」的人張貼了如下圖的貼文，一張檔名為「 <strong>final.jpg</strong> 」的圖片，裡面寫著黑底白字的訊息，其內容為：<br>
「 <strong>Hello. We are looking for highly intelligent individuals. To find them, we have devised a test.There is a message hidden in the image.Find it, and it will lead you on the road to finding us. We look forward to meeting the few that will make it all the wat through. - 3301<br><em>(哈囉，我們正在尋找擁有高智商的人。為了找到這些人，我們設計了一道測試題。這張圖中隱藏著一個訊息。找到它，它將會帶領你找到我們。我們期待與這些少數人見面。祝你好運。 - 3301)</em></strong> 」。</p>
<img src="/2020/02/05/Cicada3301/first_post.jpg" class="" title="Cicada 3301在4Chan留下了第一則訊息。">
<p>當你將該圖片使用文字編輯器開啟後，便能在最下方找到隱藏的訊息「 <strong>TIBERIVS CLAVDIVS CAESAR says “lxxt&gt;33m2mqkyv2gsq3q=w]02ntk”</strong> 」，許多有稍微聽聞過密碼學的網友看到了「 <strong>CAESAR</strong> 」應該都會直接想到「<a href="https://zh.wikipedia.org/wiki/%E5%87%B1%E6%92%92%E5%AF%86%E7%A2%BC"><strong>Caesar Cipher (凱薩密碼)</strong></a>」，將該訊息中的亂碼「 <strong>lxxt&gt;33m2mqkyv2gsq3q=w]02ntk</strong> 」對照 <a href="https://zh.wikipedia.org/wiki/ASCII"><strong>ASCII Code (美國資訊交換標準代碼)</strong></a> 後透過 <strong>Caesar Cipher (凱薩密碼)</strong> 便可推回網址「 <strong>http://i.imgur.com/m9sYK.jpg</strong> 」，網址導向到了一張以「<a href="https://zh.wikipedia.org/wiki/JPEG"><strong>JPG</strong></a>」為副檔名的圖片 (如下圖)。其內容為：<br>
「 <em><strong>WOOPS, Just decoys this way.Looks Like you can’t guess how to get the message out. (噢！這是個圈套。看起來你好像無法找到訊息囉。</strong></em>」</p>
<img src="/2020/02/05/Cicada3301/01.jpg" class="" title="圖片中隱藏的網址所導向的圖片。可愛鴨子 &#x2F;&#x2F;&#x2F; w &#x2F;&#x2F;&#x2F;">
<p>該訊息讓人覺得自己找錯位置了，當時不少人在這邊卡關，總是不斷回頭尋找線索，然而其實該訊息真正在暗示你的是兩個單字「 <strong>Guess</strong> 」、「 <strong>Out</strong> 」，這兩個單字剛好可以組成一個有名的加密軟體的名稱「<a href="https://en.wikipedia.org/wiki/OutGuess"><strong>OutGuess</strong></a>」。<br>
果不其然，當該圖片經過 OutGuess 解密後，解出了一段訊息：<br>
「 <em><strong>Here is a book code. To find the book, and more information, go to http://www.reddit.com/r/a2e7j6ic78h0j/. 1:20, 2:3, 3:5, 4:20, 5:5, 6:53, 7:1. (這是 Book code。找到書，及更多資訊，訪問 http://www.reddit.com/r/a2e7j6ic78h0j/。1:20, 2:3, 3:5, 4:20, 5:5, 6:53, 7:1)</strong></em> 」</p>
<p>訪問內容中的網址「 <strong>http://www.reddit.com/r/a2e7j6ic78h0j/</strong> 」後，可以看到一堆亂碼：</p>
<img src="/2020/02/05/Cicada3301/02.png" class="" title="reddit.com">
<p>其中，除了亂碼外，還可以找到如下兩張圖。而這兩張圖再經過 OutGuess 解密後會出現兩則訊息，該訊息大致上是提供了「<a href="https://zh.wikipedia.org/wiki/%E5%85%AC%E5%BC%80%E5%AF%86%E9%92%A5%E5%8A%A0%E5%AF%86"><strong>非對稱加密</strong></a>」的公鑰給各位，至於原理，在這邊怕離題就不贅述，總之你可以理解成，3301 表示將在未來使用 「 <strong>Private Key (私鑰)</strong> 」加密訊息，大家則可以使用這個訊息內所公佈的「 <strong>Public Key (公鑰)</strong> 」進行解密，進而得知 3301 所想傳達的訊息。有了這樣的機制，就不怕網路上有人偽造 3301 發送假的訊息了。(PS：該公鑰 PGP ID 為：<strong>7A35090F</strong>)</p>
<p>有興趣了解<strong>非對稱加密</strong>的朋友可以看另一篇我的文章「<a href="../../16/Public-keyCryptography(%E9%9D%9E%E5%B0%8D%E7%A8%B1%E5%8A%A0%E5%AF%86)"><strong>Public-key Cryptography (非對稱加密)</strong></a>」。</p>
<img src="/2020/02/05/Cicada3301/03.jpg" class="" title="reddit.com">
<img src="/2020/02/05/Cicada3301/04.jpg" class="" title="reddit.com">
<p>故事到了這邊聲明下，由於<strong>解密過程並非本文重點</strong>，前面只是為了讓讀者了解解密過程大約是什麼感覺，之後的過程我就隨意帶過，有興趣的可以上網搜尋相關資訊，目前 3301 所釋出的題目大致上都已經有解答出現在網絡上囉。</p>
<p>總之在經過各道題目解密後，最後引導你打向一通電話，電話的另一頭是一段錄音，其內容為：<br>
「 <em><strong>Very good. You have done well. There are three prime numbers associated with the original final.jpg image. 3301 is one of them. You will have to find the other two. Multiply all three of these numbers together and add a 「.com」 to find the next step. Good luck. Goodbye.<br>
(很好，你做的非常好。有三個質數與原始的 final.jpg 圖片相關。「3301」是其中一個。你必須找到其他兩個。將三個數字相乘，然後加上「.com」來進到下一步，祝你好運，再見。)</strong></em> 」</p>
<p>在原始的那張訊息圖片，其寬為<strong> 503 px</strong>，高為<strong> 509 px</strong>，「503」、「509」皆為質數，與 3301 相乘後，得出「 <strong>845145127</strong> 」，加上「 <strong>.com</strong> 」後訪問該網址，會看到一個像是「 <strong>蟬</strong> 」的圖片，並且下方有個倒數計時器，該圖片再使用 OutGuess 解密後，得出的訊息表示，你需要在 <strong>1 月 9 日 17:00</strong> 再次回來查看。</p>
<img src="/2020/02/05/Cicada3301/ps_01.jpeg" class="" width="3301">
<hr>
<p><strong>2012 年 1 月 9 日 17:00</strong>，倒數計時結束，網頁顯示出了<strong> 14</strong> 個座標，這些座標分散至<strong> 5</strong> 個國家，實際到了這些座標點後，會看到如下方圖片這樣的紙被張貼在電線杆上：</p>
<img src="/2020/02/05/Cicada3301/05.jpg" class="" width="3301">
<img src="/2020/02/05/Cicada3301/06.jpg" class="" width="3301">
<img src="/2020/02/05/Cicada3301/07.jpg" class="" width="3301">
<img src="/2020/02/05/Cicada3301/08.jpg" class="" width="3301">
<p>掃描圖上的 <a href="https://zh.wikipedia.org/wiki/%E4%BA%8C%E7%B6%AD%E7%A2%BC"><strong>二維碼</strong></a> 後，就來到了最後一步，解密後得出了一道網址「 <strong>sq6wmgv2zcsrix6t.onion</strong> 」，該網址屬於暗網網址，需要使用如「<a href="https://zh.wikipedia.org/wiki/%E6%B7%B1%E7%BD%91"><strong>Tor Browser (洋蔥瀏覽器)</strong></a>」等特殊瀏覽器來進行訪問，在大家迫不及待的訪問該位址後，網站上卻只有一句話：「 <em><strong>We want the best, not the followers. (我們只要最好，而不是跟風的人。)</strong></em> 」，這邊或許可以理解成，他們只想要前幾個甚至僅僅是第一個訪問該網址的人，要的是最快解出測試題的人。</p>
<p>直至一個月後，3301 傳出一道如下圖的訊息，內容為：<br>
「 <em><strong>Hello. We have now found the individuals we sought. Thus our month-long iourney ends. For now. Thank you for your dedication and effort. If you were unable to complete the test, or did not receive an emailm do not despair. There will be more opportunities like this one. Thank you all. - 3301<br>
P.S. 1041279065871998535982789873959431895640\442510695567564373922695237268242385295908173\9834390370374475764863415203423499357108713631</strong></em> 」。</p>
<p>其意思大約是「 <strong>哈囉。我們已經找到我們要的人了。我們長達一個月的旅程結束了。現在。感謝你的奉獻與努力。如果你沒完成測試，或者沒有收到電子郵件，請不要失望。會有更多像這樣的機會的。謝謝你們。 - 3301</strong> 」。</p>
<img src="/2020/02/05/Cicada3301/end_post.jpg" class="" width="3301">
<hr>
<p>事情看似告一段落，然而就在隔年…</p>
<p><strong>2013 年 1 月 4 日</strong>，3301 傳出又要招募的消息，以和去年一樣的方式釋出各種題目。</p>
<p><strong>2014 年 1 月 4 日</strong>，同樣的釋出招募消息及題目，但這次釋出題目的平台改成了 <a href="https://zh.wikipedia.org/wiki/Twitter"><strong>Twitter (推特)</strong></a> 。(<a href="https://twitter.com/1231507051321" title="Cicada 3301 Twitter帳戶"><strong>@1231507051321</strong></a>)，並且題目指向了一本由他們自己所寫的書，書中內容看似「<a href="https://zh.wikipedia.org/wiki/%E7%9B%A7%E6%81%A9%E5%AD%97%E6%AF%8D"><strong>盧恩字母</strong></a>」，也再次引起各領域的好手注意，但可惜的是，這次真的考倒大家了…</p>
<p>關於 2014 年那本書所釋出的題目，至今僅被解出一小部份，此後，網絡上就再也沒看到 3301 所發出的消息了，或許是在等待著那本書被解密的一天吧。</p>
<hr>
<h3 id="形象">形象</h3>
<p>「 <strong>Cicada 3301</strong> 」的形象為下圖，一個長得很像「 <strong>蛾</strong> 」的圖案，但「 <strong>Cicada</strong> 」是「 <strong>蟬</strong> 」的意思，所以推測該圖應該是指蟬。<br>
由於官方並沒有出面說明，所以至於為什麼是「 <strong>蟬</strong> 」，又為什麼是「 <strong>3301</strong> 」，目前無法得知。</p>
<img src="/2020/02/05/Cicada3301/logo.jpg" class="" width="3301">
<hr>
<h3 id="目的">目的</h3>
<p>釋出的訊息中指出，要找「 <strong>高智商</strong> 」的人，但該組織所找的人不僅僅是「高 <a href="https://zh.wikipedia.org/wiki/%E6%99%BA%E5%95%86"><strong>IQ (智商)</strong></a>」，因為在之後的許多測試中，題目不只 <a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E5%AD%A6"><strong>數學</strong></a>、<a href="https://zh.wikipedia.org/wiki/%E5%AF%86%E7%A0%81%E5%AD%A6"><strong>密碼學</strong></a>，還有包含像是 <a href="https://zh.wikipedia.org/wiki/%E9%9F%B3%E6%A8%82%E7%90%86%E8%AB%96"><strong>樂理</strong></a>、<a href="https://zh.wikipedia.org/wiki/%E5%8E%86%E5%8F%B2"><strong>歷史</strong></a> 等多方面的知識，如果單純只是要找聰明人，那為何還要要求要一堆藝術相關的知識？</p>
<p>有人開始猜測，這可能是<strong>政府相關的機構</strong>在招收人才，如 <a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9B%BD%E5%9B%BD%E5%AE%B6%E5%AE%89%E5%85%A8%E5%B1%80"><strong>NSA (美國國安局)</strong></a>、<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%A4%AE%E6%83%85%E6%8A%A5%E5%B1%80"><strong>CIA (中央情報局)</strong></a> 等，用於<strong>國家的祕密用途</strong>，也有人表示，這可能是 <strong>Google</strong> 之類的大企業招收人才的手段，甚至在<a href="https://zh.wikipedia.org/wiki/%E9%99%B0%E8%AC%80%E8%AB%96"><strong>陰謀論</strong></a>的愛好者中也有人在討論，說這是來自<strong>恐怖份子</strong>的招募。</p>
<p>由於官方並無透漏任何相關說明，<br>
<strong>該組織的目的到目前為止還是個問號。</strong></p>
<hr>
<h3 id="疑惑">疑惑（？</h3>
<p>看完上述的故事後，本人有個非常大的疑惑，我也在網上看到許多人提出相同的疑問，在此提出給大家思考看看：</p>
<p>首先，前面經過這一大堆的測試，而最後卻僅僅是在路邊掃個 QR Code 就結束了！？ 這點很明顯是有問題的吧…<br>
 不過畢竟是網路流傳的訊息，多少被經過修改，就不糾結這個問題了，大家看看就好。</p>
]]></content>
      <categories>
        <category>Information (資訊分享)</category>
      </categories>
      <tags>
        <tag>Cicada3301</tag>
        <tag>Cryptography (密碼學)</tag>
      </tags>
  </entry>
  <entry>
    <title>菸 (Cigarette) 的種類介紹</title>
    <url>/2020/02/28/Cigarette/</url>
    <content><![CDATA[<p>「如有相關疑問，可撥打國軍菸害暨檳榔防制專線 <strong>0800-580791</strong> 或至各國軍醫院接受戒治服務。」</p>
<span id="more"></span>
<hr>
<h3 id="常見菸種">常見菸種</h3>
<blockquote>
<ul>
<li><strong>紙菸</strong><br>
基本上市面上看到的菸大多都是「 <strong>紙菸</strong> 」，成分主要為「 <strong>菸草</strong> 」，透過燃燒產生的尼古丁會進入體內，刺激腦部<a href="https://zh.wikipedia.org/wiki/%E4%B8%8B%E4%B8%98%E8%84%91"><strong>下視丘神經</strong></a>，讓人有振奮的感覺，這也正是抽菸會上癮的主要物質及原因。菸體本身前約 4 分之 3 是菸草，最後一段也就是嘴吧含的那段叫做「 <strong>濾嘴</strong> 」，主要是用於減少吸菸時入口的煙霧、焦油及燃燒時產生的懸浮粒子，但注意，即使這麼做，抽菸這個動作，仍會讓人吸入很多的焦油及懸浮粒子。外型如下圖所示 (<a href="https://blackwalnut.npust.edu.tw/archives/541">圖取自此網站</a>)。</li>
</ul>
</blockquote>
<img src="/2020/02/28/Cigarette/01.jpg" class="">
<blockquote>
<ul>
<li><strong>電子煙 (Electronic cigarette)</strong><br>
「<a href="https://zh.wikipedia.org/wiki/%E9%9B%BB%E5%AD%90%E7%85%99"><strong>電子煙</strong></a>」正式名稱為「 <strong>電子物化器 (VAPE)</strong> 」，相較於紙菸較不同的是，大多數電子煙是可以重複使用的，外殼多為金屬材質，利用可充電「<a href="https://zh.wikipedia.org/wiki/%E9%8B%B0%E9%9B%A2%E5%AD%90%E8%81%9A%E5%90%88%E7%89%A9%E9%9B%BB%E6%B1%A0"><strong>離聚合物電池</strong></a>」來供電驅動霧化器，再透過加熱油艙中的 <strong>電子液 (煙油)</strong> 產生「<a href="https://zh.wikipedia.org/wiki/%E8%92%B8%E6%B0%A3"><strong>蒸氣</strong></a>」，沒錯，是「 <strong>蒸氣</strong> 」而不是「 <strong>菸</strong> 」，因為電子煙是不需要燃燒的，因此僅透過霧化器產生蒸氣。整體如下圖 (<a href="https://zh.wikipedia.org/wiki/%E9%9B%BB%E5%AD%90%E7%85%99#/media/File:2_Kit_V8-2_sigarette_elettroniche_Must500_rosso.JPG">圖取自此網站</a>)。電子煙造型有非常多種，在此不一一舉例。</li>
</ul>
</blockquote>
<img src="/2020/02/28/Cigarette/02.jpg" class="">
<blockquote>
<ul>
<li>
<p><strong>雪茄菸 (Cigar)</strong><br>
「<a href="https://zh.wikipedia.org/wiki/%E9%9B%AA%E8%8C%84"><strong>雪茄</strong></a>」相信大家也不陌生，在電影裡常常看到飾演如黑幫老大或大金主等有地位的人士嘴上會叼的菸種，其成分可分為三種－「 <strong>茄衣</strong> 」、「 <strong>茄芯</strong> 」、「 <strong>茄套</strong> 」。</p>
<ul>
<li>「 <strong>茄衣</strong> 」也就是最外層的「<a href="https://zh.wikipedia.org/wiki/%E7%83%9F%E8%8D%89"><strong>菸葉</strong></a>」，取材自植物最寬闊的部分，但因茄衣在一支雪茄中所佔的比例很低，所以基本上並非是決定雪茄的特性及味道的重要角色，茄衣往往是<strong>透過顏色來分辨種類</strong>而已。</li>
<li>「 <strong>茄芯</strong> 」則是雪茄中的<strong>主要成分</strong>啦，基本上就是<strong>一綑包紮起來的菸草</strong>，其用料多過於其他一般紙菸，所以雪茄在外型上很明顯可以看到比紙菸來的更粗。</li>
<li>「 <strong>茄套</strong> 」則是有<strong>彈性的菸葉</strong>，其用途僅是用來乘載捆束的茄芯。</li>
</ul>
<p>雪茄除了重口味的緣故，讓它難以被駕馭以外，還有因為<strong>要價不斐</strong>的原因，也就因此解釋了為什麼雪茄並不普及。(<a href="http://bangqu.com/3E18bL.html">圖取自此網站</a>)</p>
</li>
</ul>
</blockquote>
<img src="/2020/02/28/Cigarette/03.jpg" class="">
<blockquote>
<ul>
<li><strong>水煙 (Hookah)</strong><br>
 起源於<strong>波斯</strong>的菸草和抽菸用的裝置。<br>
摘取霜凍後呈鮮紅色的水菸葉，切碎，加亞麻籽油，浸透，壓成四尺見方，用壓榨機榨出油份，然後刨成薄片，放入模子內壓成餅狀。比較昂貴的水菸，採取未經霜凍的綠色菸葉，加入少許綠石末，和入亞麻籽油，其餘程序同上。<br>
吸食水煙需要用到的 <strong>水菸壺 (Bong)</strong> 大致又分兩種－「 <strong>竹管形</strong> 」、「 <strong>金屬鶴形</strong> 」。
<ul>
<li>【<strong>竹管形</strong>】通常是在農村自製的，使用長度約 70 厘米的竹管，一端是開通的，另一端是封閉的。在從封閉處起測量竹管四分之一長度的位置，在那位置鑽一個小孔，之後在那小孔斜插一個小竹管，再用牛皮膠、橡膠圈、環氧樹脂等在接觸點封口。在國外，藝術家或工匠亦會用吹製玻璃或丙烯酸製成竹管形水菸壺。</li>
<li>【<strong>金屬鶴形</strong>】通常當中國人想到的水菸壺就是金屬鶴形的。慈禧太后是喜好這類的水菸壺。<br>
而在許多西方國家，水菸壺主要是用於吸食大麻。(圖取自此網站)</li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/02/28/Cigarette/04.jpg" class="">
<hr>
<h3 id="那菸到底有什麼危害">那菸到底有什麼危害？</h3>
<p>以下統整出「<a href="https://beitou.tsgh.ndmctsgh.edu.tw/"><strong>三軍總醫院北投分院</strong></a>」網站上的資料做為參考。</p>
<blockquote>
<ul>
<li><strong>癌症</strong><br>
菸草中至少有<strong> 60 種</strong>已知的<strong>致癌物質</strong>，其中最為嚴重的莫過於「 <strong>焦油</strong> 」，所有的癌症死亡人口中，有 <strong>30%</strong> 左右與吸菸有關，其中包括如：<strong>肺癌、口腔癌、食道癌、膀胱癌、子宮頸癌</strong> 等。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>呼吸道疾病</strong><br>
菸草中的有毒微粒與氣體會<strong>傷害呼吸道中的黏膜</strong>，這也就能解釋為什麼抽菸的人會常發生如 <strong>咳嗽、氣喘或痰液增多、喉嚨痛</strong> 等情況，此情形惡化後，容易形成如：<strong>支氣管炎、肺炎</strong> 等病情，會導致<strong>肺功能衰退</strong>，並增加<strong>肺癌</strong>發生機率。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>心血管疾病</strong><br>
吸菸會使血液中的<strong>膽固醇</strong>與<strong>纖維蛋白素原</strong>增加，造成<strong>血液凝塊阻塞血管</strong>，加上<strong>尼古丁會影響神經系統</strong>，使<strong>心跳加速、血管收縮、血壓上升</strong>，增加<strong>高血壓、血管栓塞及心肌梗塞</strong>的機會，繼而引發<strong>心臟病</strong>與<strong>中風</strong>。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>消化道疾病</strong><br>
吸菸會破壞胃部在餐後中和酸性食物的能力，導致<strong>胃黏膜受損</strong>，引發<strong>胃潰瘍</strong>與<strong>十二指腸潰瘍</strong>，甚至會影響胃部抵抗細菌的能力與間接引發<strong>胃癌</strong>。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>免疫系統疾病</strong><br>
這點就更好理解了，基本上就是使人更容易<strong>勞累</strong>、容易<strong>感冒</strong>及引發<strong>紅斑性狼瘡</strong>等問題。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>眼耳口疾病</strong><br>
根據統計，每日抽掉一包菸的朋友們發生<strong>白內障</strong>的機率是一般沒抽菸的人的<strong> 2 倍</strong>以上，甚至導致<strong>失明</strong>；吸菸也會造成<strong>耳朵上的血管壁開始產生斑塊</strong>，使流入內耳的血流變少，造成<strong>聽力喪失</strong>；容易有<strong>口臭</strong>這點也不用多說明了，<strong>牙齒泛黃、蛀牙、牙齦萎縮</strong>及<strong>牙齒脫落</strong>等現象在抽菸的人身上也是隨處可見。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>皮膚疾病</strong><br>
吸菸會<strong>消耗體內的蛋白質、維他命 A</strong> 及<strong>抗氧化物</strong>，使<strong>皮膚粗糙、黯淡、 皺紋變多</strong>與<strong>掉髮</strong>，並有<strong> 2～3 倍</strong>的機會得到<strong>乾癬</strong>與<strong>易罹患皮膚癌</strong>。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>骨質疏鬆</strong><br>
<strong>一氧化碳</strong>是菸品中的主要<strong>毒氣</strong>之一這點相信大家都多少聽說過，一氧化碳不僅會<strong>抑制甲狀腺素分泌</strong>，增加<strong>骨骼組織代謝、減少鈣質吸收</strong>，導致吸菸者的<strong>骨頭密度流失</strong>，容易發生<strong>骨折</strong>外，且每天吸一包菸將提高<strong>關節炎</strong>的發生率。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>記憶力退化</strong><br>
菸草中的<strong>尼古丁</strong>會<strong>破壞腦細胞</strong>與<strong>阻礙新腦細胞的成長</strong>，使得<strong>腦血流量減少</strong>，造成<strong>腦血管狹窄、腦血管阻力增大</strong>，如果不想變傻、變健忘，最好還是少碰，尤其每天需抽掉一整包菸的朋友們，<strong>記憶力喪失</strong>的問題更為嚴重。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>生殖能力</strong><br>
再來說說女性的部分，吸菸會造成<strong>卵細胞發生病變、荷爾蒙失調</strong>以及<strong>降低輸卵管的功能</strong>，容易造成<strong>不孕症</strong>。</li>
</ul>
</blockquote>
<p>男生抽菸除了精子量會減少，被笑「空包彈」以外，也會破壞精液的品質與精子的活動力，最可怕的是還會導致「 <strong>不舉</strong> 」！</p>
<hr>
<h3 id="電子煙比較">電子煙比較</h3>
<p>在此特別提出電子煙來說，很多人認為上述的問題在電子煙裡不會發生，所以電子煙不傷身？</p>
<p>大錯特錯，雖然因為電子煙不用透過燃燒，所以或許不會產生<a href="http://zh.wikipedia.org/wiki/%E4%BA%8C%E6%89%8B%E7%85%99"><strong>二手菸 (Second-Hand Smoke)</strong></a> <strong>、三手菸 (Third-Hand Smoke)、焦油、一氧化炭</strong> 等問題，但你有想過既然危害比起一般傳統香菸來說看似少了許多，為什麼現在包括<strong>美國、加拿大、台灣</strong>等很多地區都開始嚴格<strong>管制電子煙</strong>，連傳統香菸都沒禁止，卻想全面封殺電子煙？</p>
<p>許多電子煙業者會透過「 <strong>無害</strong> 」、「 <strong>戒菸</strong> 」等原因來宣傳電子煙好過傳統香菸的道理，但真的能無害又幫助戒菸嗎？</p>
<p>因為電子煙在大部分國家被當成 3C 產品在販售，各式各樣酷炫的種類吸引了許多年輕人，但也就是因為這樣，反而讓更多人因為電子煙而染上菸癮，還有，電子煙對人體無害的說法在近年也慢慢地被推翻了，許多業者會在電子煙的<strong>香精中摻入過多的有害物質</strong>，這比起傳統香菸來說並沒有比較健康，也有發生過買到<strong>劣質的霧化器</strong>或因<strong>使用不當</strong>而引發電子煙在使用中<strong>爆炸</strong>的情況，另外像是<strong>化學物質導致血管滲漏</strong>，造成<strong>肺部嚴重積水</strong>的狀況也有發生過。</p>
<p>根據<a href="https://zh.wikipedia.org/wiki/%E4%B8%96%E7%95%8C%E5%8D%AB%E7%94%9F%E7%BB%84%E7%BB%87"><strong>世界衛生組織 (WHO)</strong></a> 統計，每年全球約有超過<strong> 540 萬</strong>人<strong>死於菸害</strong>，也就是平均每<strong> 6 秒</strong>就一人因吸菸而死亡。</p>
<p>菸不像刀或槍械般會直接對你生命造成威脅，但它就宛如常駐的病毒，在不知不覺中慢慢地奪取你的性命，因此大多數吸菸的人本身並不會察覺到菸帶給他多大的危害，等到發現，後悔也來不及了，因為當你能感覺到身體開始出狀況時，器官基本上該爛的都爛得差不多了，這也就是菸這個無形殺手可怕的地方。</p>
<p>女生抽菸顯得沒氣質，男生抽菸也根本一點都不帥，不但會造成他人對你的感官很差以外，對自己的身體也有非常大的危害，對空污也有極大的影響，一個好處也沒有的事為什麼還要繼續做呢？</p>
<p>最後還是勸導，「 <strong>菸</strong> 」能不碰就不要碰，告訴你「 <strong>戒菸</strong> 」相信很多人聽到膩但還是聽不進去，與其叫你別做什麼，倒不如告訴你為什麼不要做，聰明的你若是有認真看完這篇文章，一定能分辨什麼選擇才是對的，而不抽菸的朋友也請繼續保持，別走上別人錯誤的後塵。</p>
<p>我相信有些人正叼著菸在看這篇文章，或者整天說著戒菸卻不動作？不如現在馬上熄掉它吧！</p>
<p>「<text style="color: red;">如有相關疑問，可撥打國軍菸害暨檳榔防制專線 <strong>0800-580791</strong> 或至各國軍醫院接受戒治服務。</text>」</p>
]]></content>
      <categories>
        <category>Popular-Science (科普)</category>
      </categories>
  </entry>
  <entry>
    <title>(18+) Coulrophobia (小丑恐懼症)｜本該帶給人們歡笑的角色，卻帶來恐懼。</title>
    <url>/2020/02/08/Coulrophobia-%E5%B0%8F%E4%B8%91%E6%81%90%E6%87%BC%E7%97%87/</url>
    <content><![CDATA[<p>恐懼症有非常多種，或許你曾聽過 <strong>懼高症</strong>、<strong>幽閉恐懼</strong>、<strong>社交恐懼</strong> 等，但你聽過「<strong>小丑恐懼</strong>」嗎？</p>
<span id="more"></span>
<hr>
<h3 id="phobia-恐懼症">Phobia (恐懼症)</h3>
<p>「<strong>Phobia (恐懼症)</strong>」，屬於精神疾病，是「<a href="https://zh.wikipedia.org/wiki/%E7%84%A6%E8%99%91%E7%97%87"><strong>Anxiety Disorder (焦慮症)</strong></a>」的其中一種類型。<br>
至於恐懼症的種類，實在是多到不行，在此就不一一列舉，但幾本可大致分成三種類行：</p>
<blockquote>
<ul>
<li><strong>特殊恐懼症</strong>
<ul>
<li>這是很常見的一種類型，主要是對於<strong>某特定事、物、情景</strong>感到害怕及恐懼，如前面所提到的 <a href="https://zh.wikipedia.org/wiki/%E6%87%BC%E9%AB%98%E7%97%87"><strong>懼高症 (Acrophobia)</strong></a>、<a href="https://zh.wikipedia.org/wiki/%E5%B9%BD%E9%97%AD%E6%81%90%E6%83%A7%E7%97%87"><strong>幽閉恐懼症 (Claustrophobia)</strong></a> 就是屬於該類，另外常見對<strong>物</strong>的恐懼中也包含對<strong>生物</strong>，如 <a href="https://zh.wikipedia.org/wiki/%E8%9C%98%E8%9B%9B%E6%81%90%E6%83%A7%E7%97%87"><strong>蜘蛛恐懼症 (Arachnophobia)</strong></a>。</li>
</ul>
</li>
<li><strong>社交恐懼症</strong>
<ul>
<li>又稱為「<strong>人群恐懼症</strong>」，這個相信大家也不陌生，基本上就是對於<strong>社交</strong>行為或身處<strong>公共場合</strong>而感到恐懼，許多患者為了避免接觸人群，而將自己關在家中，不願出門。</li>
</ul>
</li>
<li><strong>廣場恐懼症</strong>
<ul>
<li>該類型也是常見的恐懼症之一，主要是對於<strong>環境</strong>感到<strong>不安全</strong>而造成恐慌，該症狀所敏感的環境中，常見的有 <strong>百貨公司</strong>、<strong>工地</strong>、<strong>捷運</strong>、<strong>會議廳</strong> 等。</li>
</ul>
</li>
</ul>
</blockquote>
<p>至於為何會出現該症狀，其實<strong>先天</strong>跟<strong>後天</strong>都是可能的。<br>
例如許多人天生懼高，有些人則可能是在兒時受過創傷而導致後天恐懼，例如在小時後曾被狗咬過，導致長大看到狗就感到恐懼及害怕。<br>
有趣的是，在許多案例中，即便患者忘記自己曾經經歷過該事件，但<a href="https://zh.wikipedia.org/wiki/%E6%BD%9B%E6%84%8F%E8%AD%98"><strong>淺意識</strong></a>仍會使他們對於該事物感到恐懼，也算是大腦的一種保護機制。</p>
<hr>
<h3 id="clown-小丑">Clown (小丑)</h3>
<p><strong>Clown (小丑)</strong>，屬於一種喜劇演員，通常會在臉上化上極度誇張的裝容，與一般喜劇演員的目的一樣，會透過表演帶給其他人歡笑，<strong>最原始的的形象中</strong>，通常是在<strong>臉上打上很重的白色粉底</strong>，<strong>鼻子則是紅色的塗裝</strong>，並且<strong>嘴巴上用紅色顏料畫上大大的微笑</strong>，如下圖：</p>
<img src="/2020/02/08/Coulrophobia-%E5%B0%8F%E4%B8%91%E6%81%90%E6%87%BC%E7%97%87/01.jpg" class="" title="妹子小丑 &#x2F;&#x2F;&#x2F; w &#x2F;&#x2F;&#x2F;">
<p>當然，這只是<strong>最原始</strong>的小丑形象，在現今，小丑的裝容種類已經多的數不清了，甚至衍生出許多不同主題的形象，例如 <strong>傷心小丑</strong>、<strong>默劇小丑</strong> 等。<br>
小丑的形象也不再僅僅是「帶給人們歡笑」這麼簡單。</p>
<hr>
<h3 id="恐怖小丑">恐怖小丑</h3>
<p>在<strong>約 2016 年</strong>後，美國出現了許多恐怖小丑的目擊事件，在 Youtube 上也有裝扮成可怕小丑整路人為題材的影片，這就不合理了，為何象徵「<strong>歡樂</strong>」的小丑會被拿去運用在象徵「<strong>恐怖</strong>」上？這就必須要提到一個知名的理論…</p>
<img src="/2020/02/08/Coulrophobia-%E5%B0%8F%E4%B8%91%E6%81%90%E6%87%BC%E7%97%87/02.jpg" class="" title="恐怖小丑形象示意圖">
<hr>
<h3 id="恐怖谷理論-uncanny-valley">恐怖谷理論 (Uncanny Valley)</h3>
<p><strong>恐怖谷理論 (Uncanny Valley)</strong>，日文為「<strong>不気味の谷現象</strong>」。</p>
<p>「<strong>恐怖谷</strong>」一詞最早是來自一名德國的精神科醫生 <a href="https://zh.wikipedia.org/wiki/%E6%81%A9%E6%96%AF%E7%89%B9%C2%B7%E8%A9%B9%E6%B1%A0"><strong>Ernst Jentsch (恩斯特・詹池)</strong></a> 於<strong> 1906 年</strong>的一篇論文《<strong>恐怖谷心理學</strong>》中出現，該篇論文的內容在<strong> 1919 年</strong>被一名奧地利心理學家「<a href="https://zh.wikipedia.org/wiki/%E8%A5%BF%E6%A0%BC%E8%92%99%E5%BE%B7%C2%B7%E5%BC%97%E6%B4%9B%E4%BC%8A%E5%BE%B7"><strong>Sigmund Freud (西格蒙德・佛洛伊德)</strong></a>」在論文《<strong>恐怖谷</strong>》中提起，因而成為著名的理論。</p>
<p>而「<strong>恐怖谷理論 (Uncanny Valley)</strong>」是於<strong> 1970 年</strong>由一名日本的機器人專家 <a href="https://zh.wikipedia.org/wiki/%E6%A3%AE%E6%94%BF%E5%BC%98"><strong>森政弘</strong></a> 在《<strong>能源</strong>》雜誌中發表了一篇題為《<strong>恐怖谷</strong>》的文章中提出。該文章提出了一個假設，主要是在敘述<strong>非人物體</strong>過於<strong>接近真人</strong>的時候，便會使人感到<strong>詭異、不安，甚至覺得恐怖</strong>。</p>
<div style="width:83%; margin:auto;">
<img src="/2020/02/08/Coulrophobia-%E5%B0%8F%E4%B8%91%E6%81%90%E6%87%BC%E7%97%87/1024px-Mori_Uncanny_Valley_zh.svg.jpg" class="" title="圖源自 Wiki維基百科，由森政弘提出的假设。">
</div>
<p>上圖中可以看到，一開始當<strong>該物體越接近真人時</strong>，人們對於該物體的<strong>好感度</strong>是<strong>上升</strong>的，然而就在<strong>相似度約為 80% ~ 90% 時</strong>，也就是極度相似於真人，但又有些缺陷讓你清楚知道它並非真人的尷尬狀態時，人們對於該物體的<strong>好感度</strong>卻像個山谷一樣<strong>急速的下降</strong>！</p>
<hr>
<h3 id="coulrophobia-小丑恐懼症">Coulrophobia (小丑恐懼症)</h3>
<p>回到主題「<strong>Coulrophobia (小丑恐懼症)</strong>」，其實經過上述的理論，對於該症狀也不難理解了吧，<strong>小丑</strong>是<strong>真人</strong>，但由於<strong>誇張的裝容</strong>又讓自己<strong>看似假人</strong>，這種<strong>似真似假</strong>的效果正好觸發了<strong>恐怖谷理論</strong>，在加上小丑的裝容總是在微笑，看久了會讓人覺得很<strong>不真實</strong>，並且有種小丑<strong>性格被抹除</strong>的感覺，「<strong>沒有感情</strong>」這點也是造成人們對於小丑恐懼的原因之一。</p>
<p>當然有一部分可能是受到<strong>影劇影響</strong>，畢竟有許多電影很喜歡拿小丑當題材，但總是將其塑造成了<strong>負面的形象</strong>，例如 <strong>The Last Circus (哭泣的小丑)</strong>、<strong>It: Chapter One (牠)</strong>、<strong>Clownhouse (小丑屋)</strong>、<strong>Gacy</strong>、<strong>100 Tears (一百滴眼淚)</strong> 及電影 《<strong>Bat Man (蝙蝠俠)</strong>》 中擁有極高人氣的反派角色「<strong>Joker</strong>」更是在之後推出的電影《<strong>小丑 (Joker)</strong>》中展現出了瘋狂、寫實跟精神層面的崩潰表現。</p>
<img src="/2020/02/08/Coulrophobia-%E5%B0%8F%E4%B8%91%E6%81%90%E6%87%BC%E7%97%87/03.jpg" class="" title="Sophia 人工智慧機器人">
]]></content>
      <categories>
        <category>Learning (學習筆記)</category>
        <category>Psychology</category>
      </categories>
      <tags>
        <tag>18+</tag>
        <tag>Phobia (恐懼症)</tag>
      </tags>
  </entry>
  <entry>
    <title>武漢肺炎 (Wuhan Pneumonia)｜天佑武漢，天佑中國，天佑世界。</title>
    <url>/2020/01/30/Covid-19-Pneumonia/</url>
    <content><![CDATA[<p>勾起當年 SARS 的惡夢，武漢肺炎！<br>
本篇文章為我對該事件在網絡上所蒐集的資料進行的重點標記及整理。</p>
<span id="more"></span>
<hr>
<h3 id="前言">前言</h3>
<p>近期的「<strong>武漢肺炎</strong>」事件鬧的全球緊張，尤其亞洲地區。<br>
如果… 你還沒聽過的話… 趕快去 Google！<br>
本篇文章為該事件的重點標記整理。</p>
<p>我自己本身因為某些原因近期常常進出醫院，才發現，現在的醫院嚴格管制，每個入口都有守衛，進入的人需要戴上口罩及接受體溫測量。</p>
<p>以下是我對於該事件在網絡上整理的資料，將其加上了標題及時間、重點粗體，讓各位可以挑感興趣的部份看。<br>
我盡量過濾不必要的資訊，壓縮重點，但又保持詳細的內容給各位。</p>
<hr>
<h3 id="細菌病毒">細菌＆病毒</h3>
<p>在開始介紹之前，我必須花點時間特別強調一點，也就是「<strong>細菌與病毒不同</strong>」！(當然，若是你已經清楚的了解兩者差異的話，可以跳過本段。)<br>
 在該事件爆發後，常常聽到許多人說著「這次的那個武漢肺炎細菌真可怕」，才發現真的有許多人對於細菌與病毒的認知實在錯的太嚴重，以下大致簡單的講解兩者歷史及差異 (<strong>懶的看歷史的直接跳到「兩者差異」</strong>)：</p>
<blockquote>
<ul>
<li><strong>細菌 (Bacteria)</strong>
<ul>
<li><strong>雷文霍克</strong>
<ul>
<li>最早發現微生物的存在並研究及紀錄的是一位荷蘭貿易商兼科學家 - 「<a href="https://zh.wikipedia.org/wiki/%E5%AE%89%E6%9D%B1%E5%B0%BC%C2%B7%E8%8C%83%C2%B7%E5%88%97%E6%96%87%E8%99%8E%E5%85%8B"><strong>安東尼・菲利普斯・范・雷文霍克 (Antonie Philips van Leeuwenhoek)</strong></a>」，最為著名的成就之一，是改進了顯微鏡以及微生物學的建立，同時他也有著光學顯微鏡與微生物學之父的稱號。</li>
</ul>
</li>
<li><strong>尚柏朗過濾器</strong>
<ul>
<li>「<a href="https://zh.wikipedia.org/wiki/%E5%B0%9A%E6%9F%8F%E6%9C%97%E9%81%8E%E6%BF%BE%E5%99%A8"><strong>尚柏朗過濾器</strong></a>」為法國生物學家「<a href="https://zh.wikipedia.org/wiki/%E6%9F%A5%E7%90%86%E6%96%AF%C2%B7%E5%B0%9A%E6%9F%8F%E6%9C%97"><strong>查理斯・尚柏朗 (Charles Chamberland)</strong></a>」於 1884 年發明的陶瓷製濾水器。該過濾器為良好的<strong>細菌</strong>濾水器。</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>病毒</strong>
<ul>
<li><strong>伊凡諾夫斯基</strong>
<ul>
<li>病毒最早由一位俄國的科學家「<a href="https://zh.wikipedia.org/wiki/%E5%BE%B7%E7%B1%B3%E7%89%B9%E9%87%8C%C2%B7%E4%BC%8A%E5%87%A1%E8%AB%BE%E5%A4%AB%E6%96%AF%E5%9F%BA"><strong>德米特里・約瑟福維奇・伊凡諾夫斯基 (Ивановский, Дмитрий Иосифович)</strong></a>」所發現，他最先將病毒命名為「<strong>過濾性病毒</strong>」，同時他也是「<strong>病毒的可濾性</strong>」的發現者 (1892 年)，及<a href="https://zh.wikipedia.org/wiki/%E7%97%85%E6%AF%92%E5%AD%A6"><strong>病毒學</strong></a>的創始人之一。</li>
</ul>
</li>
</ul>
</li>
<li><strong>菸草疾病</strong>
<ul>
<li>在<strong> 1887</strong> 年時，<strong>伊凡諾夫斯基</strong>被派往<a href="https://zh.wikipedia.org/wiki/%E7%83%8F%E5%85%8B%E8%98%AD"><strong>烏克蘭</strong></a>和<a href="https://zh.wikipedia.org/wiki/%E6%AF%94%E8%96%A9%E6%8B%89%E6%AF%94%E4%BA%9E"><strong>比薩拉比亞</strong></a>研究造成及大危害的菸草疾病。三年後，又被送往<a href="https://zh.wikipedia.org/wiki/%E5%85%8B%E9%87%8C%E7%B1%B3%E4%BA%9A"><strong>克里米亞</strong></a>調查同樣的事。他發現，這些疾病都是由<strong>極小</strong>的感染源組成，在使用<strong>尚柏朗過濾器</strong>進行過濾後，這些感染源並沒有被過濾器給過濾。</li>
</ul>
</li>
<li><strong>馬丁努斯・拜耶林克</strong>
<ul>
<li><strong>1898</strong> 年，荷蘭微生物學家<a href="https://zh.wikipedia.org/wiki/%E9%A9%AC%E4%B8%81%E5%8A%AA%E6%96%AF%C2%B7%E5%A8%81%E5%BB%89%C2%B7%E6%8B%9C%E8%80%B6%E6%9E%97%E5%85%8B"><strong>馬丁努斯・威廉・拜耶林克</strong></a>獨自再次完成了伊凡諾夫斯基的相關實驗，後來將這種極小的感染源重新簡化命名為「<strong>病毒</strong>」。</li>
</ul>
</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>兩者差異</strong>
<ul>
<li><strong>病毒比細菌小</strong>
<ul>
<li>病毒比細菌來的更小，也更晚被發現。細菌的大小約在 2～3μm (2000～3000nm)，而病毒的大小則為幾十奈米，想像一下一顆棒球與一粒沙。</li>
</ul>
</li>
<li><strong>構造</strong>
<ul>
<li>細菌是一種低等的<strong>植物</strong>，可視為缺乏葉綠素的植物細胞。</li>
<li>病毒是很小的<strong>蛋白質</strong>，且存在「<a href="https://zh.wikipedia.org/wiki/%E8%84%B1%E6%B0%A7%E6%A0%B8%E7%B3%96%E6%A0%B8%E9%85%B8"><strong>DNA (脫氧核糖核酸)</strong></a>」或「<a href="https://zh.wikipedia.org/wiki/%E6%A0%B8%E7%B3%96%E6%A0%B8%E9%85%B8"><strong>RNA (核糖核酸)</strong></a>」。</li>
</ul>
</li>
<li><strong>生存環境</strong>
<ul>
<li>兩者皆為微生物。</li>
<li>細菌可單獨生存在環境中。</li>
<li>病毒需要依賴寄生才能夠維生 (某些病毒甚至會寄生在細菌中)。</li>
</ul>
</li>
<li><strong>病源繁殖</strong>
<ul>
<li>細菌本身就是真正的生物，使用二進位法增值，且不會進入細胞。</li>
<li>病毒本身是<strong>不能夠自行繁殖</strong>的，通常需進入人體體內，透過注入自身有害的 DNA (或 RNA) 至人體細胞中，與細胞中的核酸結合，利用細胞的資源製造更多病毒。</li>
</ul>
</li>
<li><strong>殺死病源的方法</strong>
<ul>
<li>細菌的細胞壁可以使用抗生素來進行破壞，但細菌本身是會進行演化的，因此濫用抗生素會使得細菌越戰越強，最後導致沒有藥物能夠抑制。</li>
<li>病毒無法被抗生素殺死，絕大多數的病毒是沒有藥物可以治療的，僅能透過自身的抵抗力來消滅。</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h3 id="國際情勢">國際情勢</h3>
<blockquote>
<ul>
<li><strong>命名</strong>
<ul>
<li>初期鑑於肺炎病例原因不明，並正進行病原鑑定及病因溯源等初步調查，因而稱之為「<strong>不明原因肺炎</strong>」。</li>
<li>許多諸如如香港《經濟日報》及《蘋果日報》、台灣聯合新聞網、新加坡《聯合早報》等傳媒及英國廣播公司等，將其稱之為「<strong>武漢肺炎</strong>」，而《星島日報》及《澳門日報》等媒體稱之為「<strong>武肺</strong>」。</li>
<li><em><strong>2020 年 01 月 08 日</strong></em>，<a href="https://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E7%89%B9%E5%88%A5%E8%A1%8C%E6%94%BF%E5%8D%80%E6%94%BF%E5%BA%9C"><strong>香港特區政府</strong></a>將其命名為「<strong>嚴重新型傳染性病原體呼吸系統病</strong>」。</li>
<li><em><strong>2020 年 01 月 13 日</strong></em>，<a href="https://zh.wikipedia.org/wiki/%E4%B8%96%E7%95%8C%E8%A1%9B%E7%94%9F%E7%B5%84%E7%B9%94"><strong>世界衛生組織</strong></a>正式將病毒命名為「<a href="https://zh.wikipedia.org/wiki/2019%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8B%80%E7%97%85%E6%AF%92"><strong>2019 新型冠狀病毒 (2019-nCoV)</strong></a>」。</li>
</ul>
</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>時間軸</strong>
<ul>
<li><em><strong>2019 年 12 月 01 日</strong></em> 為該事件所發生首例之時間，首個前往醫院就診的病例發生於<strong> 2019 年 12 月 08 日</strong>，專家檢測出病毒為新型冠狀病毒的時間為<em><strong> 2020 年 01 月 07 日晚上 09 時</strong></em>。</li>
<li><em><strong>2020 年 01 月 13 日</strong></em> 起，<strong>泰國及日本等地</strong>陸續確認來自中國大陸的輸出個案。</li>
<li><em><strong>2020 年 01 月 20 日</strong></em> 起，包括<strong>廣東、北京、上海等地</strong>，中國大陸除<strong>武漢</strong>外其他地區開始<strong>大量通報有確診病例</strong>！</li>
<li><em><strong>2020 年 01 月 20 日</strong></em>，中國國家衛生健康委發布公告，新型冠狀病毒感染的肺炎納入<a href="https://zh.wikipedia.org/wiki/%E6%B3%95%E5%AE%9A%E5%82%B3%E6%9F%93%E7%97%85">法定乙類傳染病，按甲類管理</a>。</li>
<li><em><strong>2020 年 01 月 23 日</strong></em>，武漢市開始實施《傳染病防治法》第四十二條規定的「<a href="https://zh.wikipedia.org/wiki/%E6%B3%95%E5%AE%9A%E5%82%B3%E6%9F%93%E7%97%85">甲類傳染病封鎖疫區</a>」措施。</li>
<li><em><strong>2020 年 01 月 23 日凌晨</strong></em>，武漢市疫情防控指揮部發布公告，自<strong>當日上午 10 時</strong>起<strong>全市公共運輸停運</strong>，至<strong>下午</strong>湖北省內部分高速公路出口也已經封閉。</li>
<li><em><strong>2020 年 01 月 26 日</strong></em>，為防治疫情，<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E5%8A%A1%E9%99%A2%E6%80%BB%E7%90%86"><strong>中國國務院總理</strong></a> <a href="https://zh.wikipedia.org/wiki/%E6%9D%8E%E5%85%8B%E5%BC%BA"><u><strong>李克強</strong></u></a> 主持召開<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%A4%AE%E5%BA%94%E5%AF%B9%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92%E6%84%9F%E6%9F%93%E8%82%BA%E7%82%8E%E7%96%AB%E6%83%85%E5%B7%A5%E4%BD%9C%E9%A2%86%E5%AF%BC%E5%B0%8F%E7%BB%84"><strong>中央應對新型冠狀病毒感染肺炎疫情工作領導小組</strong></a>第一次會議。會議指出採取適當延長春節假期、調整學校開學時間等措施，減少人員流動。之後，國務院辦公廳發表關於延長 2020 年春節假期的通知，將<strong>春節假期延長至 2 月 2 日</strong>。</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h3 id="感染源傳播途徑">感染源＆傳播途徑</h3>
<blockquote>
<ul>
<li><strong>感染源</strong>
<ul>
<li>新型冠狀病毒的<strong>傳染來源尚未找到</strong>。12 月下旬開始出現圍繞<strong>中華人民共和國湖北省武漢市江漢區華南海鮮市場</strong>的大量病例，因此疫情最初被認為在華南海鮮市場爆發，隨後發現首宗及初期個案<strong>並非全部</strong>在此。</li>
</ul>
</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>傳播途徑</strong>
<ul>
<li><em><strong>2020 年 01 月 14 日</strong></em>，據路透社報道，<a href="https://zh.wikipedia.org/wiki/%E4%B8%96%E7%95%8C%E8%A1%9B%E7%94%9F%E7%B5%84%E7%B9%94"><strong>世界衛生組織</strong></a>確認新型冠狀病毒「已經」有限度人傳人，之後修改報道為「可能」有限度人傳人，世衛隨後對發電郵查詢的傳媒澄清並無證據顯示病毒人傳人，並在社交網站上表示<strong>中國政府初步調查找不到清晰人傳人的證據</strong>。</li>
<li><em><strong>2020 年 01 月 19 日</strong></em>，<strong>世界衛生組織</strong>發言人<strong>亞沙雷維奇</strong>回覆<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%A4%AE%E9%80%9A%E8%A8%8A%E7%A4%BE">台灣中央通訊社</a>的電郵查詢，指根據最新資訊及分析，<strong>已有證據表明新型冠狀病毒存在有限度人傳人</strong>，同時補充指尚無明確證據顯示人際間有持續傳播，暫無法評估整體的人傳人範圍</li>
<li><em><strong>2020 年 01 月 20 日晚間</strong></em>，中國國家衛健委高級別專家組組長、<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E5%B7%A5%E7%A8%8B%E9%99%A2">中國工程院</a>院士、國家呼吸系統疾病臨床研究專家<a href="https://zh.wikipedia.org/wiki/%E9%92%9F%E5%8D%97%E5%B1%B1">鍾南山</a>在接受央視新聞直播採訪時表示，根據目前的資料，新型冠狀病毒肺炎是肯定的人傳人：「<em>在廣東有 2 個病例，沒去過武漢，但家人去了武漢後染上了新型冠狀病毒肺炎，現在可以說，肯定的，<strong>有人傳人現象</strong>！</em>」。</li>
<li><em><strong>2020 年 01 月 28 日</strong></em>，中國國家衛健委與國家中醫藥管理局公布的《新型冠狀病毒感染的肺炎診療方案（試行第四版）》顯示，經呼吸道<strong>飛沫傳播</strong>是病毒主要的傳播途徑，亦可通過<strong>接觸傳播</strong>；<strong>潛伏期一般 3-7 天，最長不超過 14 天</strong>；人群普遍易感，兒童及嬰幼兒也有發病；新型冠狀病毒與<a href="https://zh.wikipedia.org/wiki/%E5%9A%B4%E9%87%8D%E6%80%A5%E6%80%A7%E5%91%BC%E5%90%B8%E7%B3%BB%E7%B5%B1%E7%B6%9C%E5%90%88%E7%97%87"> SARS</a> 同源性達 85%。</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h3 id="病毒研究進展">病毒研究進展</h3>
<blockquote>
<ul>
<li><strong>病原體</strong>
<ul>
<li><em><strong>截至 2020 年 01 月 07 日晚上 09 時</strong></em>，武漢 P4 實驗室檢出一種新型冠狀病毒，獲得該病毒的全基因組序列，專家組認為，本次不明原因的病毒性肺炎病例的病原體初步判定為新型<a href="https://zh.wikipedia.org/wiki/%E5%86%A0%E7%8A%B6%E7%97%85%E6%AF%92"><strong>冠狀病毒</strong></a>。</li>
<li><em><strong>2020 年 01 月 21 日</strong></em>，中國科學院上海巴斯德研究所和中科院分子植物卓越中心合成生物學重點實驗室等機構，在《中國科學：生命科學》（SCIENCE CHINA Life Sciences）期刊上發文，發現武漢新型冠狀病毒屬於 Beta 冠狀病毒屬（Betacoronavirus）。Betacoronavirus 是蛋白包裹的單鏈正鏈 RNA 病毒，寄生和感染高等動物（包括人）。在進化樹的位置上，與<a href="https://zh.wikipedia.org/wiki/%E5%9A%B4%E9%87%8D%E6%80%A5%E6%80%A7%E5%91%BC%E5%90%B8%E7%B3%BB%E7%B5%B1%E7%B6%9C%E5%90%88%E7%97%87"> SARS</a> 病毒和類 SARS 病毒的類群相鄰，但並不屬於 SARS 和類 SARS 病毒類群。</li>
<li><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E7%96%BE%E7%97%85%E9%A2%84%E9%98%B2%E6%8E%A7%E5%88%B6%E4%B8%AD%E5%BF%83"><strong>中國疾病預防控制中心</strong></a>表示，本次發現的新型冠狀病毒與 SARS 和 MERS 冠狀病毒雖同屬於冠狀病毒，但基因進化分析顯示它們分屬於不同的亞群分支，它既不是 SARS，也不是 MERS，它們的病毒基因序列差異比較大。</li>
</ul>
</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>病毒來源</strong>
<ul>
<li><em><strong>2020 年 01 月 20 日</strong></em>，中國工程院院士<a href="https://zh.wikipedia.org/wiki/%E9%92%9F%E5%8D%97%E5%B1%B1">鍾南山</a>接受央視採訪時稱，基本上還不清楚的新型冠狀病毒源頭是來自什麼動物，只是從各方面的流行病學調查的話，是來自野生動物。</li>
<li><em><strong>2020 年 01 月 21 日</strong></em>，中國科學院上海巴斯德研究所等研究機構在《中國科學：生命科學》上發文，初步判定進化來源為寄生在<strong>果蝠</strong>的 HKU9-1 冠狀病毒，推測武漢冠狀病毒的自然宿主也可能是<strong>蝙蝠</strong>。</li>
<li><em><strong>2020 年 01 月 22 日</strong></em>，<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E7%A7%91%E5%AD%A6%E9%99%A2%E9%99%A2%E5%A3%AB">中國科學院院士</a>、中國疾控中心主任<a href="https://zh.wikipedia.org/wiki/%E9%AB%98%E7%A6%8F">高福</a>在<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E5%8A%A1%E9%99%A2">中華人民共和國國務院</a> <a href="https://zh.wikipedia.org/wiki/%E5%9B%BD%E5%8A%A1%E9%99%A2%E6%96%B0%E9%97%BB%E5%8A%9E%E5%85%AC%E5%AE%A4">新聞辦公室</a>發布會上表示，新型冠狀病毒的來源是武漢一家海鮮市場非法銷售的野生動物。同日，<a href="https://zh.wikipedia.org/wiki/%E5%8C%97%E4%BA%AC%E5%A4%A7%E5%AD%A6">北京大學</a>、<a href="https://zh.wikipedia.org/wiki/%E5%B9%BF%E8%A5%BF%E4%B8%AD%E5%8C%BB%E8%8D%AF%E5%A4%A7%E5%AD%A6">廣西中醫藥大學</a>、<a href="https://zh.wikipedia.org/wiki/%E5%AE%81%E6%B3%A2%E5%A4%A7%E5%AD%A6">寧波大學</a>及<a href="https://zh.wikipedia.org/wiki/%E6%AD%A6%E6%B1%89%E7%94%9F%E7%89%A9%E5%B7%A5%E7%A8%8B%E5%AD%A6%E9%99%A2">武漢生物工程學院</a>學者聯合攻關，指出<strong>蛇</strong>是最可能攜帶 2019-nCoV 病毒的野生動物</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h3 id="預防口罩的選擇">預防！口罩的選擇！</h3>
<img src="/2020/01/30/Covid-19-Pneumonia/01.jpeg" class="" title="圖來源：中央流行疫情指揮中心">
<img src="/2020/01/30/Covid-19-Pneumonia/02.jpeg" class="" title="圖來源：中央流行疫情指揮中心">
<hr>
<h3 id="總結">總結</h3>
<p>在此強烈呼籲各位，非必要時間盡量減少外出活動，並且出席集會時須帶口罩，保護自己也保護別人。<br>
最後，希望這次事件能夠盡快落幕，不要再有更多的受害者。天佑武漢，天佑中國，天佑世界。</p>
]]></content>
      <categories>
        <category>Information (資訊分享)</category>
      </categories>
  </entry>
  <entry>
    <title>網頁漏洞 XSS (Cross-Site-Scripting) 攻擊 (下) 進階思路解說</title>
    <url>/2020/01/24/Cross-Site-Scripting(Advanced)/</url>
    <content><![CDATA[<p>上一篇「 <strong><a href="/2020/01/24/Cross-Site-Scripting/" title="網頁漏洞 XSS (Cross-Site-Scripting) 攻擊 (上) 基礎原理解說">網頁漏洞 XSS (Cross-Site-Scripting) 攻擊 (上) 基礎原理解說</a></strong> 」中提到了基礎的 XSS 原理，這次要來介紹更深入更進階的思路了。</p>
<span id="more"></span>
<hr>
<h3 id="前言">前言</h3>
<p>如果你不清楚什麼是 XSS ，可以先觀看我上一篇貼文「<strong><a href="/2020/01/24/Cross-Site-Scripting/" title="網頁漏洞 XSS (Cross-Site-Scripting) 攻擊 (上) 基礎原理解說">網頁漏洞 XSS (Cross-Site-Scripting) 攻擊 (上) 基礎原理解說</a></strong>」。</p>
<p>( <strong>提醒您，本文技巧請勿用於非法用途，一切行為請自行負責，與本站無關。本站僅作為學術研討用途。</strong> )</p>
<p>上一篇文章中所模擬的環境是比較誇張的狀況，任何參數都沒過濾這種事情不大可能發生 (還是頗多，只是比例上來說少)，大多數網站多少都會有過濾機制，但是有設計過濾機制難道就安全了嗎？這其中許多過濾是不完全的，只要花點小巧思就能繞過！你需要的是「創意」。</p>
<hr>
<h3 id="script標籤失效">&lt;script&gt; 標籤失效！？</h3>
<p>上篇中說過，我們可以透過輸入「 <strong> <code>abc123&lt;/p&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;p&gt;</code> </strong> 」來觸發 &lt;script&gt; 標籤來執行 Javascript 語法，可是當該網站過濾一切的「 <strong>&lt;script&gt;</strong> 」時呢？<br>
加強上次模擬的貼文系統：</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- index.html --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">// post.php</span>
<span class="token variable">$title</span><span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;script>"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">//過濾&lt;script>標籤</span>
<span class="token variable">$content</span><span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;script>"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">//過濾&lt;script>標籤</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$title</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$connection</span><span class="token operator">=</span><span class="token function">mysql_connect</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"localhost"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"root"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">mysql_select_db</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"post"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"INSERT INTO `post` (`title`, `content`)
VALUES('<span class="token interpolation"><span class="token variable">$title</span></span>', '<span class="token interpolation"><span class="token variable">$content</span></span>');"</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token variable">$connection</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token keyword">echo</span> <span class="token string double-quoted-string">"貼文成功！"</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>「 <strong>既然 <code>&lt;script&gt;</code>  這麼危險，那我過濾掉不就好了。</strong> 」<br>
有些網站認為，只要過濾 <code>&lt;script&gt;</code>  標籤就安全了。<br>
很多人不知道，這種過濾方法是有漏洞的！可以使用「 <strong> <code>&lt;sc&lt;script&gt;ript&gt;</code> </strong> 」來繞過此過濾方法。</p>
<p>因為當「 <strong> <code>&lt;sc&lt;script&gt;ript&gt;</code> </strong> 」輸入時，中間的 <strong> <code>&lt;script&gt;</code> </strong> 被過濾掉後會…<br>
「<font style="color: green;"><strong>&lt;sc</strong></font><font style="color: red;"><strong>&lt;script&gt;</strong></font><font style="color: green;"><strong>ript&gt;</strong></font>」 =&gt; 「<font style="color: green;"> <strong>&lt;script&gt;</strong></font>」</p>
<p>雖然說<strong>不建議</strong>，但若是真的必須要用這種方式過濾某個字串，可以使用迴圈。<br>
利用 <strong> <code>strpos()</code> </strong> 來檢查字串中是否含有「 <strong> <code>&lt;script&gt;</code> </strong> 」，若是存在就使用 <strong> <code>str_replace()</code> </strong> 過濾：</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$title</span><span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$title</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"&lt;script>"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token variable">$title</span><span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;script>"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token variable">$title</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>實際上，執行 Javascript 語法的方式有千千萬萬種，考驗的只是駭客們的創意，以下提供常見的幾種進階技巧給各位參考。</p>
<hr>
<h3 id="自動觸發-onload">自動觸發 Onload</h3>
<p>其實在 HTML 語言中，有許多標籤的屬性及事件是可以觸發 Javascript 的，因為那些本身就是 Javascript 下去運作的。<br>
例如標籤 <code>&lt;input type=&quot;button&quot;&gt;</code>  中的 onclick：</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Click Me!<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>我們在 onclick 中加入語法「 <code>alert(1)</code> 」是可以被執行的，像這樣：<br>
<input type="button" onclick="alert(1)" value="Click Me!"><br>
在 onclick 中不需要特別加上 &lt;script&gt; 標籤聲明是 Javascript。</p>
<p>有時候我自己在滲透網站時，更偏好使用這樣的方法，而不是直接塞入 &lt;script&gt; 標籤，一方面 &lt; script &gt; 標籤被過濾的機率太高了，另一方面可以讓攻擊語法顯的比較優雅 (X。</p>
<p>有些人可能會說：「這必須要點擊才能觸發，不點不就沒事了。」<br>
的確，「onclick」需要透過點擊才能觸發內容，總不能要求使用者去點擊你植入的按鈕吧。</p>
<p>那就在推薦各位幾個常見的方式。</p>
<p>同樣是「input」標籤，我們可以透過「 <strong> <code>onload</code> </strong> 」，「 <code>onload</code> 」事件是指當該物件「 <strong>載入完成後</strong> 」觸發。例如我們可以使用該語法來植入：</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>這麼一來，就會在此標籤載入完成後自動觸發「alert (1)」了！</p>
<hr>
<h3 id="想看圖片我給你看alert">想看圖片？我給你看 Alert！</h3>
<p>這時候可能你又會想，那把雙引號「&quot;」也過濾基本上任何屬性跟事件不就不能觸發了！？</p>
<p>理論上… 沒錯。<br>
但也僅僅只是理論上，別忽略 HTML 的一個大特點 - <strong>極高的彈性</strong>。</p>
<p>HTML 提供極高的「 <strong>容錯性</strong> 」。<br>
很多時候不需要照著 HTML 原本的寫法，只要「意思」到了，就可以執行！<br>
例如你運行該語法：</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- something --></span>
    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>正常來說，沒有將 &lt;body&gt; 標籤結尾應該是個錯誤的寫法，可是如果你運行這段語法你會發現，瀏覽器幫你加上了！<br>
而 HTML 的高容錯特性則可以用在 XSS 的創意上。<br>
現在要介紹的這是透過「&lt;img&gt;」標籤來觸發。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>xss</span> <span class="token special-attr"><span class="token attr-name">onerror</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token value javascript language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span></span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>簡單說明下，「 <strong>onerror</strong> 」是指當此圖片未能正常顯示時而觸發的事件，<br>
而因為「 <strong>src</strong> 」所指定的目錄並無名為「 <strong>xss</strong> 」的檔案，所以必定會因為 <strong>not found error</strong> 而觸發「 <strong>onerror</strong> 」事件。</p>
<p>去除了雙引號「&quot;」，但該語法是可以正常運作的！<br>
這就是 HTML 的容錯性！</p>
<hr>
<h3 id="那該如何預防">那該如何預防！？</h3>
<p>其實在 PHP 裡，有一個函式可以防止 XSS，這個函式是「 <strong>htmlentities()</strong> 」，它並不是著重在存入資料庫時的過濾，而是在「輸出時防止」，他的作用是將敏感符號轉換成 html 編碼，這可以有效的防止語法被解釋成標籤的問題。</p>
<p>另外，在此呼籲一個重要的觀念！<br>
請善用「 <strong>白名單</strong> 」而非「 <strong>黑名單</strong> 」！<br>
這個意思是說，與其限制使用者「 <strong>不能輸入什麼</strong> 」，不如限制「 <strong>只能輸入什麼</strong> 」。<br>
因為要擋的東西太多了！<br>
如果你使用黑名單的方式可能是永遠都擋不完的，並且你的程式碼將會很長很亂。<br>
我喜歡使用<a href="https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F"><strong>正規表達法</strong></a>，或者乾脆把一些文字經過「<a href="https://zh.wikipedia.org/wiki/Base64"><strong>base64 編碼</strong></a>」後再餵進資料庫。</p>
]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Web</category>
        <category>XSS (Cross-Site-Scripting)</category>
      </categories>
      <tags>
        <tag>XSS (Cross-Site-Scripting)</tag>
        <tag>SecurityFlaw (安全漏洞)</tag>
      </tags>
  </entry>
  <entry>
    <title>網頁漏洞 XSS (Cross-Site-Scripting) 攻擊 (上) 基礎原理解說</title>
    <url>/2020/01/24/Cross-Site-Scripting/</url>
    <content><![CDATA[<p>常常聽到有人說網站出現「 <strong>XSS 漏洞</strong> 」，那這所謂的 XSS 到底是什麼？其可怕之處又為何？以下，帶你淺談 <strong>XSS (跨站運行腳本)</strong> 原理及背後<s>齷齪骯髒</s>的技巧。</p>
<span id="more"></span>
<hr>
<h3 id="閱讀本文所需知識">閱讀本文所需知識</h3>
<p>在了解 XSS 之前，建議讀者最好先具備 <a href="https://zh.wikipedia.org/wiki/HTML"><strong>HTML (超文字標記語言)</strong></a> 的基礎知識，否則可能會出現連範例都看不懂的窘境。</p>
<hr>
<h3 id="可能觸發-xss-的先決條件">可能觸發 XSS 的先決條件</h3>
<p>一般來說，XSS 大多發生在「<a href="https://zh.wikipedia.org/wiki/%E5%8B%95%E6%85%8B%E7%B6%B2%E9%A0%81"><strong>動態網頁</strong></a>」而不是「<a href="https://wiki.mbalib.com/zh-tw/%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5" title="wiki.mbalib.com"><strong>靜態網頁</strong></a>」，在此簡單解釋一下兩者差異，有興趣了解更深入者自行點選連結觀看。你可以這麼想像<strong>動態</strong>與<strong>靜態</strong>網頁：</p>
<ul>
<li><a href="https://zh.wikipedia.org/wiki/%E6%9C%8D%E5%8A%A1%E5%99%A8"><strong>伺服器 (Server)</strong></a>
<ul>
<li>翻譯：就如同一個「櫃台服務人員」展示著自家的商品，而 <a href="https://en.wikipedia.org/wiki/Client_(computing)"><strong>用戶端 (Client)</strong></a>，就是圍觀的顧客。</li>
<li>原意：顧名思義為提供某特定服務的主機，而 <strong>用戶端 (Client)</strong> 則是使用這項服務的人。</li>
</ul>
</li>
<li><strong>靜態網頁</strong>
<ul>
<li>翻譯：「服務人員」照著公司的流程介紹自家商品，不與顧客有任何的對話跟交流 (<strong>即使顧客提問也不給予回應</strong>)。</li>
<li>原意：<strong>伺服器 (Server)</strong> 向 <strong>用戶端 (Client)</strong> 單向的展示服務，不接受任何來自 <strong>用戶端 (Client)</strong> 的請求 (<strong>連線請求例外</strong>)。</li>
</ul>
</li>
<li><strong>動態網頁</strong>
<ul>
<li>翻譯：「服務人員」在<strong>有限的範圍</strong>內，回答顧客的提問，或接受展示顧客所要求的內容。</li>
<li>原意：<strong>伺服器 (Server)</strong> 具有接受及自定義處理封包請求的能力，能與 <strong>用戶端 (Client)</strong> 擁有<strong>雙向</strong>的互動。</li>
</ul>
</li>
</ul>
<p>常見的狀況是 <strong>HTML</strong> + <a href="https://zh.wikipedia.org/wiki/PHP"><strong>PHP</strong></a> 或者 <strong>HTML</strong> + <a href="https://zh.wikipedia.org/wiki/Active_Server_Pages"><strong>ASP</strong></a> 等，都是在有「 <strong><a href="https://zh.wikipedia.org/wiki/%E5%89%8D%E7%AB%AF%E5%92%8C%E5%90%8E%E7%AB%AF">網頁後端</a>語言</strong> 」並且該網站處理封包不當的情況下發生。</p>
<hr>
<h3 id="一般使用者操作的html">一般使用者操作的 HTML</h3>
<p>以下是一些簡單的 HTML 標籤，我們<strong>模擬</strong>輸入名稱的功能。<br>
(特別聲明：此範例單純使用 HTML 運作，模擬的環境是<strong>假設有傳入後端的情況</strong>。)</p>
<p>按鈕按下時，會將「使用者輸入」欄位的值傳入後端 PHP，後端再將接收到的值顯示給使用者看，這麼一來就有了<strong>雙向互動</strong>，同時後台運作是直接抓取接收到的值來顯示，這意味著<strong>沒有過濾參數</strong>。</p>
<p><strong>後端環境</strong>、<strong>雙向互動</strong>、<strong>沒有過濾參數</strong>，再看看剛剛所說的觸發條件… 這是一個觸發的好環境啊！</p>
<hr>
<ul>
<li>HTML 頁面 使用者輸入】</li>
</ul>
<p><input id="example_input_1" type="input" value="abc123"><input type="button" value="確定" onclick="my_script()"></p>
<script>
function my_script(){
	document.getElementById('example_p_1').innerHTML='你的名字：'+document.getElementById('example_input_1').value;
}
</script>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- index.html --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>my_name<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc123<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>【PHP 頁面 顯示傳入值】</li>
</ul>
<p id="example_p_1">你的名字：</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//name.php</span>
<span class="token variable">$name</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'my_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>			<span class="token comment">//接收參數</span>
<span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p>你的名字："</span><span class="token operator">.</span><span class="token variable">$name</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;/p>"</span><span class="token punctuation">;</span>	<span class="token comment">//沒過濾直接顯示</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<hr>
<p>我們放大重點來討論，也就是說我們輸入什麼，就會反應在標籤上。<br>
當使用者輸入「 <strong>def456</strong> 」則 HTML 標籤會長這樣</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>def456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>輸入「 <strong>ghi789</strong> 」</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>ghi789<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>注意！上述都是一般使用者的作法，中規中矩的按造設計者的想法去做。<br>
但… 駭客會這麼乖嗎？</p>
<hr>
<h3 id="駭客操作的html">駭客操作的 HTML</h3>
<p>人家常說調皮的小孩是聰明的，有時候換個思路，調皮點，一個漏洞就這麼發現了。<br>
設計者要求這樣做，我就該這樣做嗎？<br>
正常輸入「 <strong>abc123</strong> 」如此標籤：</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>abc123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>你可以發現標籤內包著我們的語法，包著的是 &lt;p&gt; 標籤及標籤結尾 &lt;/p&gt;<br>
 那如果今天我們輸入「 <strong>abc123&lt;/p&gt;</strong> 」呢？</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>abc123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>你會發現我們所輸入的 &lt;/p&gt; 居然被解釋成標籤結尾了！？<br>
這是否意味著我輸入什麼語法他就執行什麼語法？<br>
那我們將輸入的參數稍做修改，改成具有影響力的語法！<br>
輸入「 <strong>abc123&lt;/p&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;p&gt;</strong> 」</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>abc123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>這則語法中的 <strong>alert(1)</strong> 是彈出警告視窗，其顯示內容為「1」<br>
(Ps.「 <strong>alert(1)</strong> 」這是駭客們最常拿來測試 XSS 的語法)<br>
<input type="button" value="按我觀看 Alert(1) 效果" onclick="alert(1)"></p>
<p>隨意插入標籤？這麼一來我不就越權了嗎？</p>
<hr>
<h3 id="反射型-xss">反射型 XSS</h3>
<p>上述的 XSS 稱為「反射型」，其特點為「 <strong>僅能自行觸發</strong> 」，也就是我必須先向 伺服端 (Server) 發送請求，讓它回應給我一個因為該請求而觸發 XSS 的後果，這樣的漏洞不就太沒利用價值了嗎！？因為這意味著，你只能讓自己中招，而無法實質對 伺服端 (Server) 產生傷害，或者危害到其他使用者權益，並且網頁將在重整後復原。整體來說該危害程度是許多管理者忽視且不願意花時間去處理的，但他們似乎忘了一個嚴重的問題… <a href="https://zh.wikipedia.org/wiki/%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B%E5%AD%A6"><strong>社交工程 (Social Engineering)</strong></a>。(之後會撰寫一篇關於 社交工程 (Social Engineering) 的文章。)<br>
(更新：已發布文章「<strong><a href="/2020/01/24/Social-Engineering(%E7%A4%BE%E4%BA%A4%E5%B7%A5%E7%A8%8B)/" title="Social-Engineering (社交工程)｜你駭計算機，我駭你心">Social-Engineering (社交工程)｜你駭計算機，我駭你心</a></strong>」)</p>
<hr>
<h3 id="預存型-xss">預存型 XSS</h3>
<p>該類型的 XSS 多半與 <strong>資料庫 (Database)</strong> 有著密切的關聯，上述的反射型是因為伺服端不會去儲存你的攻擊語法，所以不會發生該語法日後被再次觸發的問題，但現在要說的這種「 <strong>預存型</strong> 」就不同了。<br>
「 <strong>預存型</strong> 」顧名思義就是伺服器將語法給紀錄下來了，並且在某些需要輸出紀錄時的場合被再次觸發到。<br>
舉個常見的例子 - 「 <strong>貼文系統</strong> 」。以下模擬一個簡易的貼文系統 <strong>HTML + PHP + MYSQL</strong>：</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- index.html --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">// post.php</span>
<span class="token variable">$title</span><span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$content</span><span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$title</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$connection</span><span class="token operator">=</span><span class="token function">mysql_connect</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"localhost"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"root"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">mysql_select_db</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"post"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"INSERT INTO `post` (`title`, `content`)
VALUES('<span class="token interpolation"><span class="token variable">$title</span></span>', '<span class="token interpolation"><span class="token variable">$content</span></span>');"</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token variable">$connection</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token keyword">echo</span> <span class="token string double-quoted-string">"貼文成功！"</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>可以清楚看到 index.html 中所輸入的欄位分別有代表文章標題的「 <strong>title</strong> 」及代表文章內容的「 <strong>content</strong> 」，並且表單傳送至 post.php 中，在 post.php 裡將標題及內容寫入資料庫。<br>
這時候假設貼文標題打上「 <strong>abc213&lt;/p&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;p&gt;</strong> 」，內容隨意輸入「 <strong>test</strong> 」，正常來說此語法將會被成功寫入資料庫存放。</p>
<p>既然是貼文系統，照理來說會有個輸出文章的位置 (不然貼文就沒意義了)：</p>
<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">// display.php</span>
<span class="token variable">$connection</span><span class="token operator">=</span><span class="token function">mysql_connect</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"localhost"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"root"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">mysql_select_db</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"post"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"SELECT * FROM `post`;"</span>
<span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token variable">$connection</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token operator">=</span><span class="token function">mysql_fetch_row</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	<span class="token keyword">echo</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>就這樣，資料庫裡存放的 html 標籤被輸出並解釋成標籤作用了。<br>
任何只要看得到這篇文章的人，畫面上就會彈出我們所植入的「alert (1)」。</p>
<p>我們僅僅是用「 <strong>alert()</strong> 」來測試 XSS 而已，這還算不上是什麼危害，但是有心人士會透過其他語法來達成非法目的，例如可以利用「 <strong>document.cookie</strong> 」來獲取你的 <a href="https://zh.wikipedia.org/wiki/Cookie"><strong>Cookie</strong></a> ，很多時候明明沒有在其他地方登入過，電腦也沒有中毒，帳號卻莫名被盜，有可能就是你中了 XSS 。</p>
<hr>
<h3 id="總結">總結</h3>
<p>上述這些這顯然不是設計師希望我們做的，標籤植入越權思路這就是 XSS 的基本原理。<br>
透過與網頁所設計的功能互動，而將標籤透過巧思植入網頁並使其觸發。</p>
<p>而更進階的 XSS 技巧請看下一篇「<a href="/2020/01/24/Cross-Site-Scripting(Advanced)/" title="網頁漏洞 XSS (Cross-Site-Scripting) 攻擊 (下) 進階思路解說">網頁漏洞 XSS (Cross-Site-Scripting) 攻擊 (下) 進階思路解說</a>」。</p>
]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Web</category>
        <category>XSS (Cross-Site-Scripting)</category>
      </categories>
      <tags>
        <tag>XSS (Cross-Site-Scripting)</tag>
        <tag>SecurityFlaw (安全漏洞)</tag>
      </tags>
  </entry>
  <entry>
    <title>資料庫概念 DB、DBMS、SQL 之間的關係</title>
    <url>/2021/05/22/DB-DBMS-SQL/</url>
    <content><![CDATA[資料庫早已被大量使用，如果還分不清楚 Database 與 DBMS 及 SQL 的關係，那還真是場災難呢！
<span id="more"></span>
<hr>
<h2 id="database-資料庫">Database (資料庫)</h2>
<p><strong> <code>Database (資料庫)</code> </strong> 簡稱「<strong> <code>DB</code> </strong>」。就如同名稱般，是存放資料的地方。<br>
如果放在傳統的「<strong>資料庫</strong>」來說，可以單指<strong>堆滿文件</strong>的倉庫，或者一間<strong>圖書館</strong>。</p>
<p>但在現今所聽到的「<strong>資料庫</strong>」多半是指「<strong> <code>數位化</code> </strong>」的資料庫，存放在<strong>計算機上</strong>的。</p>
<p>是否有想過，你在網站上的<strong>帳號</strong>、<strong>密碼</strong>，或者<strong>社群</strong>上的<strong>圖片</strong>、<strong>貼文</strong>等，這些資料是存放在哪裡？這麼一想就不難發現 Database 的重要性！</p>
<hr>
<h2 id="dbms-資料庫管理系統">DBMS (資料庫管理系統)</h2>
<p>「<strong> <code>DBMS</code> </strong>」全名「<strong> <code>Database Management System</code> </strong>」，中文為「<strong> <code>資料庫管理系統</code> </strong>」。</p>
<p>存放多筆數據的資料庫，不易被管理。<br>
設想一下若圖書館內<strong>沒有電腦的管理系統</strong>協助查詢，要找一本書需要花多久的時間？</p>
<p>但有了管理系統，你只需要到櫃台請工作人員 <code>查詢書名</code> ，便可以在短短幾秒內知道這本書的 <code>作者</code> 、 <code>出版日期</code> … 等資訊，另外也可以知道這本書在該圖書館的 <code>數量</code> 、 <code>類別</code> 、 <code>位置</code> 等。</p>
<p>而上述這一切僅發生在工作人員按下執行查詢工作的<strong>一瞬間</strong>。<br>
這就是 <strong>DBMS (資料庫管理系統)</strong> 的效率。</p>
<p>當前常見的 DBMS 有 <a href="https://zh.wikipedia.org/wiki/MySQL">MySQL</a>、<a href="https://zh.wikipedia.org/wiki/Oracle%E6%95%B0%E6%8D%AE%E5%BA%93">Oracle Database</a>、<a href="https://zh.wikipedia.org/wiki/Microsoft_Access">Microsoft Access</a>、<a href="https://zh.wikipedia.org/wiki/Microsoft_SQL_Server">Microsoft SQL Server</a>、<a href="https://zh.wikipedia.org/wiki/MariaDB">MariaDB</a>、<a href="https://zh.wikipedia.org/wiki/SQLite">SQLite</a>、<a href="https://zh.wikipedia.org/wiki/IBM_DB2">IBM DB2</a>、<a href="https://zh.wikipedia.org/wiki/PostgreSQL">PostgreSQL</a>、<a href="https://zh.wikipedia.org/wiki/MongoDB">MongoDB</a> 等。</p>
<hr>
<h2 id="什麼是-sql-結構化查詢語言">什麼是 SQL (結構化查詢語言) ？</h2>
<p>「<strong> <code>SQL</code> </strong>」全名「<strong> <code>Structured Query Language</code> </strong>」，中文為「<strong> <code>結構化查詢語言</code> </strong>」。</p>
<p>用來操作 DBMS 的查詢語言。<br>
不過稍微科普一下，通常 SQL 語法是寫在程式碼中，使程式可以自動化發送請求。<br>
在企業中較少提供管理員手動輸入 SQL 語法查詢的情境，因為人為失誤可能導致嚴重的後果。(通常是提供後台管理的操作頁面操作 Database)</p>
<hr>
<h2 id="統整">統整</h2>
<p>為了方便了解，我製作了這張圖給各位參考：</p>
<p><img src="SQL-DBMS-DB.jpg" alt="SQL、DBMS、DB 之間的關係"></p>
<hr>
<h2 id="參考資料">參考資料</h2>
<p>《Wiki 維基百科 - SQL》<a href="https://zh.wikipedia.org/wiki/SQL">https://zh.wikipedia.org/wiki/SQL</a><br>
《Wiki 維基百科 - 資料庫管理系統》<a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F">https://zh.wikipedia.org/wiki/ 数据库管理系统</a><br>
《Wiki 維基百科 - SQL 語法》<a href="https://zh.wikipedia.org/wiki/SQL%E8%AF%AD%E6%B3%95">https://zh.wikipedia.org/wiki/SQL 语法</a></p>
]]></content>
      <categories>
        <category>Computer Science</category>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Database (資料庫)</tag>
      </tags>
  </entry>
  <entry>
    <title>(18+) 浮出水面的 4 個知名暗網</title>
    <url>/2020/02/18/DarkWeb-FamousWeb/</url>
    <content><![CDATA[<p>在許多暗網中，有那麼幾個特別有名，以至於表網也能看到許多相關的介紹，以下就介紹幾個知名的暗網網站的故事跟內容，連結就不公開貼出來了，網址其實不難找，真的有興趣的自己稍微 Google 下。</p>
<span id="more"></span>
<hr>
<h3 id="前言">前言</h3>
<p>如果你不清楚什麼是 Dark Web (暗網)，歡迎先觀看我的上一篇文章「<strong><a href="/2020/02/17/DarkWeb/" title="(18+) Dark Web 暗網｜人口販賣、兒童色情、殺人直播？電影情節真實上演！">(18+) Dark Web 暗網｜人口販賣、兒童色情、殺人直播？電影情節真實上演！</a></strong>」！</p>
<p><strong>注意，以下所介紹的資訊有影響心理狀況的可能，請在觀看前衡量自己身心狀況後斟酌觀看。</strong></p>
<hr>
<h3 id="red-room-紅房">Red Room (紅房)</h3>
<ul>
<li>
<p><strong>介紹</strong><br>
暗網中最知名的「 <strong>殺人直播</strong> 」網站，與一般的直播網站一樣，有個螢幕及聊天室供觀眾聊天互動，開播後，主持人會依照觀眾所發出的命令直接在螢幕上對受害者實施，並且全程為直播，例如觀眾可以在支付比特幣後，於聊天室要求主持人將受害者的手指砍下之類的，至於金額，只要主持人覺得可行就會照做，主要就是提供給那些有錢又變態的人娛樂人命的服務。</p>
</li>
<li>
<p><strong>規則</strong><br>
為了防止只是來湊熱鬧的群眾，紅房有個「 <strong>敲門費</strong> 」，進直播間之前，你就必須先支付 <strong>0.1 BTC</strong>，這可以用來確認觀眾是真的有一定程度的消費能力，但這只是初級的身份，該身份僅能<strong>觀看</strong>，並不能在聊天室打字互動，更不能對主持人下命令，你可以選擇花費 <strong>1 BTC</strong> 來升級身份為「 <strong>Master</strong> 」，該身份即可於聊天室打字互動，但依舊沒有對主持人下命令的權限，若是要得到該權限，必須花費 <strong>10 BTC</strong> 來升級身份為「 <strong>Grand Master</strong> 」，接著就可以開始享受如何將畫面上的人慢慢折磨致死。</p>
</li>
<li>
<p>不過正因為紅房的知名度太大，目前網上已經出現許多<strong>假冒</strong>的紅房出現，錢過去什麼也看不到，就我自己所知的紅房連結就有<strong>三個</strong>，而真的紅房說不定早就消失在暗網之中了。</p>
</li>
</ul>
<img src="/2020/02/18/DarkWeb-FamousWeb/04.jpg" class="" title="取自網絡，可能並非真實的紅房。">
<img src="/2020/02/18/DarkWeb-FamousWeb/05.png" class="" title="取自網絡，可能並非真實的紅房。">
<hr>
<h3 id="silk-road-絲綢之路">Silk Road (絲綢之路)</h3>
<ul>
<li>
<p><strong>介紹</strong><br>
是暗網上最知名的<strong>交易平台</strong>，大家說的「 <strong>暗網黑市</strong> 」通常就是指這裡，使用者可以<strong>免費註冊</strong>帳戶後在上方購買東西，但若是賣家想刊登商品，則必須購買<strong>賣家帳戶</strong>，通常以販賣毒品為主。</p>
</li>
<li>
<p><strong>起源</strong></p>
<ul>
<li>
<p><strong>1984 年 3 月 27 日</strong>，<strong>第一代</strong>絲綢之路由 <strong>Ross Ulbricht</strong> 創建，他的絲路帳戶為「 <strong>Dread Pirate Roberts</strong> 」。</p>
</li>
<li>
<p><strong>2010 年之前</strong>，Ulbricht 曾經親自<strong>種植致幻蘑菇</strong>，網站上線後自己也在網站上賣過<strong>致幻藥品</strong>，後來主要負責網站管理。</p>
</li>
<li>
<p><strong>2011 年 6 月</strong>，<strong>芝加哥國土安全調查局 (HSI)</strong> 特工 <strong>Jared Der-Yeghiayan</strong> 開始調查絲綢之路。</p>
</li>
<li>
<p><strong>截至 2012 年止</strong>，絲路之路的<strong>月銷售額估計略超過 120 萬美元</strong>！</p>
</li>
<li>
<p><strong>截止 2013 年 3 月 3 日</strong>，該網站用戶已達<strong> 100 萬</strong>人。</p>
</li>
<li>
<p><strong>2013 年 10 月 1 日</strong>，<strong>Ross Ulbricht 在舊金山的一家公共圖書館被捕</strong>，5 月份因參與 <strong>毒品交易、蓄謀違反毒品法、蓄謀非法入侵計算機、設立非法毒品交易市場、通過網絡參與毒品交易、散播虛假身份、洗錢</strong> 七項指控被判處<strong>終身監禁</strong>。</p>
</li>
<li>
<p><strong>2013 年 10 月</strong>，<strong>絲綢之路 1.0 被 FBI 封停</strong></p>
<p>Ulbricht 被判刑後，<strong>比特幣匯率迅速下降</strong>，<strong>2013 年 10 月 2 日</strong>，比特幣匯率由 <strong>140 美元</strong> 降至 <strong>129 美元</strong>，<strong>10 月 3 日</strong>，該貨幣低至 <strong>110 美元</strong>。<br>
根據 FBI 的指控，Ulbricht 至少獲得了 <strong>70 萬比特幣</strong> 約 <strong>8000 萬美元</strong> 的利潤，而絲路總交易額為 <strong>950 萬比特幣</strong>，總計約 <strong>12 億美元</strong>。</p>
</li>
</ul>
<p>至今絲綢之路共經歷過 4 個版本，分別是 絲綢之路 <strong>1.0、2.0、3.0</strong> 及目前還在運作的 <strong>3.1</strong>。<br>
有興趣知道更多的 <a href="%22https://zh.wikipedia.org/wiki/%E7%B5%B2%E8%B7%AF_(%E8%B3%BC%E7%89%A9%E7%B6%B2%E7%AB%99)%22"><strong>點我</strong></a> 前往 Wiki 維基百科 觀看。</p>
</li>
<li>
<p><strong>我「夢到的」</strong><br>
夢裡，經我個人實測，網站頁面非常乾淨容易操作，註冊帳戶比你註冊 Facebook 還簡單，不同的點是，密碼是系統幫你設置的，通常是一段亂碼，你需要保管好此密碼，以便用於下一次的登入。<br>
至於內容的確就是… 大量的藥物跟槍支，當我好奇搜尋「 <strong>Taiwan</strong> 」時，頁面上居然真的有一家店舖表示有提供台灣地區的服務，仔細一看不是毒品，似乎是某種強姦藥水之類的迷幻藥。</p>
</li>
</ul>
<p><img src="06.jpg" alt="&quot;絲綢之路&quot;" title="取自網絡，絲綢之路上的毒品、藥物。" width="70%"><br>
<img src="07.png" alt="&quot;絲綢之路&quot;" title="取自網絡，絲綢之路上的毒品、藥物。" width="70%"></p>
<hr>
<h3 id="besa-mafia-榮耀黑手黨該服務證實是假的不過事件太有名了還是分享下">Besa Mafia (榮耀黑手黨)｜該服務證實是<strong>假的</strong>，不過事件太有名了還是分享下</h3>
<img src="/2020/02/18/DarkWeb-FamousWeb/09.jpg" class="" title="取自網絡，Besa Mafia 網站頁面。">
<ul>
<li><strong>故事 (取自網路 並 縮減內容)</strong></li>
</ul>
<blockquote>
<p>倫敦的業餘黑客 <strong>Monteiro</strong> 在暗網上調查了一年多，得出了一個結論，暗網的確有許多所謂的「 <strong>殺手組織</strong> 」，但大多數都只是騙子。<br>
<strong>2016 年 2 月 20 日</strong>開始，Monteiro 調查起了一個名為「 <strong>Besa Mafia</strong> 」的僱用殺手服務，該網站自稱是<strong>阿爾巴尼亞黑幫</strong>所架設的，而「 <strong>Besa</strong> 」是阿爾巴尼亞語「 <strong>榮耀</strong> 」的意思。</p>
</blockquote>
<img src="/2020/02/18/DarkWeb-FamousWeb/08.png" class="" title="取自網絡，Besa Mafia 網站頁面。">
<blockquote>
<p>Monteiro 登入 Besa Mafia 的網站，創建一個帳戶後下了訂單，並在訂單的目標攔未上填寫一個名稱「 <strong>Bob the Builder</strong> 」，這是一個虛構的人名，Monteiro 也按照要求支付了比特幣。<br>
不久之後，Monteiro 發現殺手網站的管理員 <strong>Yura</strong> 開始拖延找藉口，說是殺手遇到交通意外，或是行動被警方發現 等，Monteiro 也開始逐漸認為該網站就是詐騙。<br>
之後 Monteiro 進一步的調查 Besa Mafia 後發現，該組織在網絡上僱用許多寫手寫假文章吸引顧客，並且向疑似擁有殺人需求的人投放廣告。<br>
Monteiro 找了一個黑客朋友，發起一個代號為「 <strong>蔬菜行動</strong> 」的黑客攻擊行動，打算毀掉 Besa Mafia，Monteiro 與朋友前後對 Besa Mafia 的伺服器發動了 3 次大規模的黑客攻擊，終於，Besa Mafia 的網站被癱換了，大量的用戶帳號、密碼及電子郵件都被洩漏。</p>
</blockquote>
<img src="/2020/02/18/DarkWeb-FamousWeb/10.jpg" class="" title="取自網絡，Besa Mafia 網站被攻擊。">
<blockquote>
<p>然而在 Besa Mafia 的網站癱瘓後 7 個月，該網站上的暗殺名單中，一個目標真的死掉了！<br>
經警方調查後發現，該事件是一位叫做 <strong>Stephen Allwine</strong> 的 IT 工程師，因為婚內出軌，而想雇殺手謀殺妻子 <strong>Amy Louise Allwine</strong>，後來 Stephen 發現 Besa Mafia 網站被黑掉，並且有 FBI 來家中警告他的妻子，讓他近期注意自己的安全。<br>
這時候 Stephen 才知道 FBI 已經知道了 Besa Mafia 的網站，並且知道他的妻子是其中一個暗殺目標，於是心想著不如將計就計，親手殺死妻子，警察也只會懷疑是 Besa Mafia 行動，而不會懷疑到自己身上。<br>
Stephen 用 9 毫米口徑的手槍射擊妻子，並將屍體拖至臥室偽裝成是壓力太大自殺身亡，Amy Louise Allwine 於 <strong>2016 年 11 月</strong> 死在家中的臥室，然而犯罪現場遺留了許多破綻，並且 FBI 也在 Stephen 的電腦硬碟上，找到使用該網站下訂單的證據。<br>
Stephen 被指控犯有<strong>二級謀殺罪</strong>，然後在<strong> 2017 年 3 月</strong>大陪審團起訴他犯有<strong>一級謀殺罪</strong>。</p>
</blockquote>
<img src="/2020/02/18/DarkWeb-FamousWeb/11.jpg" class="" title="取自網絡，Stephen Allwine。">
<hr>
<h3 id="lolita-city-蘿莉塔之城">Lolita City (蘿莉塔之城)</h3>
<p><img src="the-lolita-city.jpg" alt="lolita-city" title="取自網絡，Lolita City 頁面。" width="70%"></p>
<p>暗網討論度最高的，除了毒品、槍枝、虐殺外，就是「 <strong>Child Porn (兒童色情)</strong> 」，圈內人簡稱為「 <strong>CP</strong> 」，對於常逛暗網的人來說這個詞絕對不陌生，而「 <strong>Lolita City (蘿莉塔之城)</strong> 」就是一個知名的 CP 論壇，每天都有著許多戀童癖會員前來光顧，與一般的色情網站一樣，有著各式各樣腥羶色的照片、影片，差別在於影片中的主角都是<strong>未成年</strong>！這些未成年年紀最小近<strong>新生兒</strong>。</p>
<ul>
<li><strong>自 2012 年 11 月以來</strong>，該網站提供了兒童色情視頻。</li>
<li><strong>截至 2013 年 6 月</strong>，該網站託管了約 <strong>140 萬</strong> 張兒童色情圖片</li>
</ul>
<p>還記得上次介紹的「 <strong>Anonymous (匿名者)</strong> 」嗎？<br>
如果還不知道什麼是「 <strong>Anonymous</strong> 」，趕快 <a href="../../04/Anonymous"><strong>點這裡</strong></a> 去看我的文章。</p>
<p>那篇介紹匿名者的文章中，有提到他們於<strong> 2011 年 10 月</strong>宣佈展開名為「 <strong>Operation Darknet</strong> 」的行動，旨在打擊暗網中的兒童色情網站，所謂的兒童色情網站，主要就是指「 <strong>Lolita City</strong> 」啦，所幸 Anonymous 成功攻下伺服器，取得了 <strong>1589 名</strong> 使用者的資料，並公之於眾。<br>
匿名者發表聲明稱該網站讓戀童癖的問題惡化，甚至會誘使他們進行<strong>誘拐、猥褻、強姦兒童</strong>。</p>
<img src="/2020/02/18/DarkWeb-FamousWeb/anonymous_the-lolita-city.jpg" class="" title="取自網絡，Lolita City 頁面 遭受 Anonymous 攻擊。">
]]></content>
      <categories>
        <category>Information (資訊分享)</category>
      </categories>
      <tags>
        <tag>18+</tag>
        <tag>Deep Web (深網)</tag>
        <tag>Dark Web (暗網)</tag>
      </tags>
  </entry>
  <entry>
    <title>(18+) Dark Web 暗網｜人口販賣、兒童色情、殺人直播？電影情節真實上演！</title>
    <url>/2020/02/17/DarkWeb/</url>
    <content><![CDATA[<p>網絡盛行的年代，<strong>你真的認為你夠熟悉網絡嗎？<strong>在這龐大的網絡世界裡，有些地方你沒去過，也</strong>一輩子都不該去</strong>。本篇將會介紹你可能不知道的地下網絡 - 「 <strong>暗網</strong> 」。</p>
<span id="more"></span>
<hr>
<h3 id="前言">前言</h3>
<p>生活在一個網路充斥著生活的時代，使用網路對每個人來說已經是家常便飯，但如果我說其實你平常所能使用到的網絡及你能透過 Google 所搜尋到的<strong>所有</strong>東西都只佔了<strong>不到網絡世界的 5％</strong>，那你會好奇<strong>其他的 95％去了哪裡</strong>嗎？</p>
<p>另外，許多人會誤會「 <strong>暗網</strong> 」是指<strong>某個網頁</strong>，但實際上這個詞是一個<strong>廣泛的分類</strong>，並<strong>非</strong>是指某個網站，至於什麼樣的網絡會被分類在暗網，以下帶你一探究竟。</p>
<hr>
<h3 id="深網-與-暗網-的差別"><strong>深網</strong> 與 <strong>暗網</strong> 的差別</h3>
<p>首先，必須先強調一點，就是<strong>深網不完全等於暗網</strong>！</p>
<p>在了解兩者差異之前，在此先提個單字 -「<a href="https://zh.wikipedia.org/wiki/%E8%A1%A8%E7%BD%91"><strong>Surface Web (表網)</strong></a>」。<br>
「 <strong>表網</strong> 」全稱「 <strong>表層網絡</strong> 」，即一般人們使用的網絡，包括 <a href="https://zh.wikipedia.org/wiki/Facebook">Facebook</a>、<a href="https://zh.wikipedia.org/wiki/Google">Google</a>、<a href="https://zh.wikipedia.org/wiki/YouTube">Youtube</a> 等常見的知名服務，以及本站，甚至其他你在 Google 上能搜尋到的所有站點，都屬於表網。<br>
而 <strong>Deep Web (深網)</strong> 則主要可以泛指所有在表網上<strong>搜尋不到</strong>的網絡。</p>
<p>那… 什麼是暗網？</p>
<p>「 <strong>Dark Web (暗網)</strong> 」<strong>涵蓋</strong>在深網中，比起深網來說，暗網才算是真正的隱藏，不僅僅是搜尋引擎搜索不到，而是即使有了網址，也無法透過一般的瀏覽器來訪問，是深網中的<strong>底層網絡</strong>，沒錯，<strong>深網</strong>已經是在網絡世界之下的底層網絡，而這所謂的暗網則是<strong>網絡世界中底層網絡中的底層網絡</strong>！<br>
以下這張圖或許可以讓你更了解它們之間的比例關係。</p>
<p><img src="01.png" alt="" title="取自網絡，廣泛被用來解釋網絡層關係的冰山圖" width="85%"></p>
<p>這塊<strong>浮冰</strong>用來當作<strong>整個網絡世界</strong>，在<strong>水面上</strong>的部份為<strong>表網</strong>，約佔了整個網絡世界的 <strong>4％</strong> ，其餘在水面下的隱藏網絡皆為 <strong>Deep Web (深網)</strong> ，約佔 <strong>96％</strong> ，而涵蓋在深網中，底層的那些網絡即稱之為 <strong>Dark Web (暗網)</strong> ，約佔深網 <strong>96％</strong> 中的 <strong>6％</strong> 。</p>
<hr>
<h3 id="dark-web-暗網">Dark Web (暗網)</h3>
<p>正因為有技術可以在網路上做到隱藏、匿蹤的效果，有心人士便開始浮出水面，因此暗網裡充斥著許多非法的服務，例如 <strong>毒品交易、槍支交易、僱用殺手服務、兒童色情、洗錢、邪教論壇、屠殺視頻、偽造護照服務、人口販賣</strong> 等，當然也有比較正常的服務，例如 <strong>加密信箱、匿名論壇、加密聊天</strong> 等。</p>
<p>上述中跟各位提到暗網「 <strong>即使有了網址，也無法透過一般的瀏覽器來訪問</strong> 」，不論是表網還是一般的深網都還可以透過你所使用的 <a href="https://zh.wikipedia.org/wiki/Google_Chrome">Chrome</a>、<a href="https://zh.wikipedia.org/wiki/Firefox%E7%80%8F%E8%A6%BD%E5%99%A8">Firefox</a>、<a href="https://zh.wikipedia.org/wiki/Opera%E9%9B%BB%E8%85%A6%E7%80%8F%E8%A6%BD%E5%99%A8">Opera</a> 等一般的瀏覽器來連接伺服器，但暗網可不行。</p>
<hr>
<h3 id="tor-洋蔥路由">Tor (洋蔥路由)</h3>
<p>「<strong> <code>Tor</code> </strong>」全名「<strong> <code>The Onion Router</code> </strong>」中文為「<strong> <code>洋蔥路由</code> </strong>」。<br>
這是一項主打「<strong>網絡匿名</strong>」的技術專案。<br>
之所以叫做「<strong>洋蔥</strong>」則是因為，當中的技術將網絡之間的傳輸過程進行 <code>多層的加密</code> ，再將其 <code>層層解密</code> ，就好像洋蔥般。</p>
<p>上述所提到的 Tor 技術當中，一個有名的例子就是「 <strong>Tor</strong> 」，全名「 <strong>The Onion Router</strong> 」(<strong>洋蔥路由</strong>)，為<a href="https://zh.wikipedia.org/wiki/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6">自由軟體</a>，用戶們可以使用 Tor 連接來自全球使用者免費提供的節點。Tor 的設計原意在於<strong>保障用戶的個人隱私</strong>，以及<strong>不受監控地進行秘密通信的自由和能力</strong>。</p>
<p>Tor 在傳送資料時，會對<strong>下一個節點的資料、IP 位址</strong>進行<strong>多次的加密</strong>，並隨機選擇 Tor 節點傳送，每個中繼都會對一層加密的資料進行解密，以知道資料的下一個傳送目的地，然後將剩餘的加密資料傳送給它。最後的中繼會解密最內層的加密資料，並在不會洩露或得知源 IP 位址的情況下，將原始資料發送至目標位址。</p>
<p>一層一層的加密就好像洋蔥般，因此稱為洋蔥路由。<br>
而基於 Tor 技術所開發的瀏覽器「 <strong>Tor Browser (Tor 瀏覽器)</strong> 」也是目前廣泛被大家使用在訪問暗網的瀏覽器。</p>
<p><strong>20 世紀 90 年代</strong>，互連網缺乏安全性，以及用於跟蹤及監視的能力越來越明顯。<strong>1995 年</strong>，美國海軍研究實驗室 <a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9C%8B%E6%B5%B7%E8%BB%8D%E7%A0%94%E7%A9%B6%E5%AF%A6%E9%A9%97%E5%AE%A4"><strong>United States Naval Research Laboratory (NRL)</strong></a> 的數學家 <strong>Paul Syverson (保羅・西維森)</strong> 、電腦科學家 <strong>G. Mike Reed (邁克・里德)</strong> 及 <strong>David Goldschlag (大衛・戈爾德施拉格)</strong> 為保護美國情報通信而開發了該軟體。</p>
<p>有個專門用於 Tor 網絡的<a href="https://zh.wikipedia.org/wiki/%E9%A1%B6%E7%BA%A7%E5%9F%9F">頂級域</a>「 <strong>.onion</strong> 」，這種域名並未被收錄在域名根區中，並不屬於實際的域名，但透過特殊的代理軟體即可訪問 .onion 的地址，例如上述的 Tor Browser (Tor 瀏覽器)。因此若是看到有人貼的網址中頂級域是「.onion」那麼通常就是隱藏網絡，需要使用特殊瀏覽器來訪問，一般的瀏覽器僅會顯示地址不存在。</p>
<hr>
<h3 id="bitcoin-比特幣-btc">Bitcoin (比特幣、BTC)</h3>
<p>剛剛說到暗網中有著許多非法的交易，而這些交易當然也不可能用銀行轉帳，不然就失去了匿蹤的意義了，通常暗網上的交易都是由「<a href="https://zh.wikipedia.org/wiki/%E6%AF%94%E7%89%B9%E5%B8%81"><strong>Bitcoin (比特幣)</strong></a>」來支付的，比特幣為一種「<a href="https://zh.wikipedia.org/wiki/%E5%AF%86%E7%A0%81%E8%B4%A7%E5%B8%81"><strong>加密貨幣</strong></a>」，由於怕離題的緣故，因此就不講解相關原理了，有興趣的朋友麻煩請點擊超連結觀看或是自行搜尋相關資料。</p>
<p>若你已經了解什麼是 Bitcoin (比特幣) 並且知道其中的原理，那麼應該也不難理解為什麼<strong>暗網中的騙子很多</strong>，主要是因為比特幣本身是沒有保障的，一切的交易僅能靠雙方對彼此的信任，再加上暗網本身的匿蹤特性，詐騙根本沒在怕被抓的。</p>
<hr>
<h3 id="marianas-web-馬里亞納網絡-未證實都市傳說">Mariana’s Web (馬里亞納網絡) (<strong>未證實，都市傳說</strong>)</h3>
<p>「 <strong>Mariana’s Web (馬里亞納網絡)</strong> 」號稱是暗網的<strong>最深處</strong>，其命名也是以世界上目前發現已知最深的海溝「<a href="https://zh.wikipedia.org/wiki/%E9%A9%AC%E9%87%8C%E4%BA%9A%E7%BA%B3%E6%B5%B7%E6%B2%9F"><strong>馬里亞納海溝</strong></a>」來命名的，象徵著在這連光都透不進的海溝裡，潛下去，就再也不用想著浮出水面。</p>
<p><strong>據說</strong></p>
<p>進入馬里亞納網絡需要使用 <strong>量子電腦</strong> 來運算一個名為「 <strong>Polymeric Falcighol Derivation</strong> 」的數學函式，這是一種複雜的演算法 (但網路上似乎找不到該名詞相關有依據的報告)，並且使用的頂級域是「 <strong>.clos</strong> 」、「 <strong>.loky</strong> 」及「 <strong>.marianas</strong> 」。</p>
<p>馬里亞納網絡的盡頭存放著許多世界機密，甚至有不少人認為這些機密文件中，有著可以<strong>改變世界的祕密</strong>，例如 <strong>操控時間的方法、宇宙的由來、亞特蘭提斯的祕密、外星人的相關資料</strong> 等，甚至有人說其實整個馬里亞納網絡就是一個 <strong>AI (人工智慧)</strong> 。</p>
<p>有另外一種說法是，馬里亞納網絡的盡頭其實是一個名為「 <strong>Devil Mate (魔鬼的同伴)</strong> 」的論壇，該論壇無人道可言，論壇的管理員都是一些社會上頂尖的成功人士，這群人有著可怕的財富及權利，需要有邀請碼才得以加入會員，否則什麼內容也看不到，這些帖子通常會被隱藏或是顯示成亂碼，即便加入會員後，也無法馬上觀看內容，因為該論壇將會員分成<strong> 1～66</strong> 個等級，等級越高，所能看到的內容越多，而提升等級的唯一方法就是完成該論壇所規定的任務，他們稱作「儀式」…</p>
<p>這些任務充滿著不人道的要求，一開始可能只是要求你<strong>生吞豬心</strong>、<strong>殺死貓狗</strong>、<strong>自殘</strong>、<strong>喝鴨血</strong>、<strong>喝處女的血</strong>，隨著等級越來越高，任務也越來越極端，開始出現例如 <strong>殺死一個人</strong>、<strong>與屍體性交</strong>、<strong>活生生的挖出某人的眼睛</strong> 等，一切任務都隨管理員的心情出題，完成任務的過程需要拍攝照片、影片回報，論壇等級提升後即可獲得獎勵，大筆的獎金及觀看更多論壇帖子的權限，而在獲得獎勵的同時，你也正在一步步的奉獻自己的靈魂給這群惡魔。</p>
<p><strong>當然！<br>
關於 Mariana’s Web (馬里亞納網絡) 的一切都是謠言，未證實過的，看看就好。</strong></p>
<hr>
<h3 id="著名的網站">著名的網站</h3>
<p>下一篇文章中，介紹了 4 個在暗網中非常著名的網站，有些甚至到了今天，服務仍正常在運作中，歡迎觀看「<strong><a href="/2020/02/18/DarkWeb-FamousWeb/" title="(18+) 浮出水面的 4 個知名暗網">(18+) 浮出水面的 4 個知名暗網</a></strong>」。</p>
]]></content>
      <categories>
        <category>Popular-Science (科普)</category>
      </categories>
      <tags>
        <tag>18+</tag>
        <tag>Deep Web (深網)</tag>
        <tag>Dark Web (暗網)</tag>
        <tag>Tor (洋蔥路由)</tag>
        <tag>Bitcoin (比特幣)</tag>
      </tags>
  </entry>
  <entry>
    <title>Github 檔案太大無法推送！？安裝「Git-LFS」馬上解決！</title>
    <url>/2021/03/28/Git-LFS/</url>
    <content><![CDATA[<p>使用 git push 推送檔案到 Github 上時，被告知<strong>檔案太大</strong>無法推送！？馬上教你怎麼解決！</p>
<span id="more"></span>
<hr>
<h2 id="報錯">報錯</h2>
<p>當你嘗試使用  <code>git push</code>  推送超過 <code>100 MB</code>  的檔案時，沒意外就會收到這樣的錯誤。<br>
這是因為 Github <strong>一個檔案最大上傳限制</strong>就是 <code>100 MB</code> 。(ps. 分開上傳可以，但不能同個檔案 100 MB)</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ remote: error: GH001: Large files detected.
$ remote: error: Trace: xxxxxxxxxxxxxxxxxxxx
$ remote: error: See http://git.io/iEPt8g <span class="token keyword">for</span> <span class="token function">more</span> information.
$ remote: error: File xxxxxxxxxxxxx is <span class="token number">101.00</span> MB<span class="token punctuation">;</span> this exceeds GitHub's <span class="token function">file</span> size limit of <span class="token number">100</span> MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<hr>
<h2 id="安裝-git-lfs-解決">安裝 Git-LFS 解決！</h2>
<p>為此 Github 也提供解決方法 - 「<strong>Large File Storage</strong>」。</p>
<h3 id="debian-and-ubuntu">Debian and Ubuntu</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> git-lfs
<span class="token function">git</span> lfs <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<hr>
<h3 id="mac-osx">Mac OSX</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew update
brew <span class="token function">install</span> git-lfs
<span class="token function">git</span> lfs <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<hr>
<h3 id="rhelcentos">RHEL/CentOS</h3>
<h4 id="step1-安裝-git-182">Step.1 安裝 git &gt;= <strong>1.8.2</strong></h4>
<blockquote>
<p>如果你的版本是 <strong>RHEL/CentOS</strong>  <code>5</code>  或  <code>7</code>  (而不是  <code>6</code> ) 的話：<br>
a. 可以<a href="https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F">按這裡</a>安裝 (如果是 CentOS 那麼你只需要執行  <code>sudo yum install epel-release</code> )<br>
b.  <code>sudo yum install git</code></p>
</blockquote>
<blockquote>
<p>如果你的版本是 <strong>RHEL/CentOS</strong>  <code>6</code> <br>
a.  <code>curl -s https://setup.ius.io/ | sudo bash</code> <br>
b.  <code>sudo yum install git2u</code></p>
</blockquote>
<blockquote>
<p>如果你想，你也可以自己建構原始碼。您將需要手動下載 Git-lfs rpm 並進行安裝  <code>rpm -i --nodeps git-lfs*.rpm</code> 。</p>
</blockquote>
<h4 id="step2-安裝-git-lfs">Step.2 安裝 <strong>git-lfs</strong></h4>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -s https://packagecloud.io/install/repositories/github/git-lfs/script.rpm.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span>
<span class="token function">sudo</span> yum <span class="token function">install</span> git-lfs
<span class="token function">git</span> lfs <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<hr>
<h3 id="windows">Windows</h3>
<h4 id="step1-下載安裝檔">Step.1 下載安裝檔</h4>
<p>可以從 <a href="https://github.com/git-lfs/git-lfs/releases">https://github.com/git-lfs/git-lfs/releases</a> 選擇你要的版本進行下載。</p>
<h4 id="step2-執行安裝檔">Step.2 執行安裝檔</h4>
<h4 id="step3-在-cmd-或者-git-bash-執行-git-lfs-install">Step.3 在 CMD 或者 Git-Bash 執行  <code>git lfs install</code></h4>
<hr>
<h2 id="開始使用">開始使用</h2>
<blockquote>
<p>在下 git 指令時，你只需要將追蹤大檔案 (超過 100 MB) 的指令  <code>git add</code>  改成  <code>git lfs track</code> 。<br>
舉例來說，如果要追蹤副檔名為 <code>.psd</code>  的大檔案，那請使用</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> lfs track <span class="token string">"*.psd"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>而<strong>不是</strong>  <code>git add &quot;*.psd&quot;</code>  ！</p>
</blockquote>
<blockquote>
<p>並且確保檔案  <code>.gitattributes</code>  有被追蹤。 (這是用來告知 github 此為大型檔案的文件)</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> .gitattributes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</blockquote>
<p>之後呢？後面的指令都是一樣的。<br>
直接  <code>git add</code>  &gt;  <code>git commit</code>  &gt;  <code>git push</code>  ！<br>
回到 Github Repository 就可以發現成功被推送了。</p>
<hr>
<h2 id="如何取消-lfs">如何取消 LFS ？</h2>
<ul>
<li>刪除單個檔案<br>
如果你是要刪除 <code>單個檔案</code> ，那麼就需要麻煩點到「<strong> <code>.gitattributes</code> </strong>」這個檔案中去刪除單筆資料，使 Github 知道該檔案不用再被 LFS 給追蹤。</li>
<li>移除全部 (不使用 LFS 了)<br>
 你需要使用指令「<strong> <code>git lfs uninstall</code> </strong>」，如果你是較舊的版本則是使用指令「<strong> <code>git lfs uninit</code> </strong>」來刪除該 Repository 中的 LFS 。<br>
另外也請確保檔案「<strong> <code>.gitattributes</code> </strong>」不再被追蹤。(建議如果不需要，請直接下 <strong> <code>git rm .gitattributes</code> </strong> 刪除它)</li>
</ul>
<p>範例:</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> lfs uninstall
<span class="token function">git</span> <span class="token function">rm</span> .gitattributes
<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit <span class="token string">"Uninstall LFS"</span>
<span class="token function">git</span> push origin main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<hr>
<h2 id="參考資料">參考資料</h2>
<p>《Git Large File Storage》<a href="https://git-lfs.github.com/">https://git-lfs.github.com/</a><br>
《Cover Image》<a href="https://git-lfs.github.com/images/graphic.gif">https://git-lfs.github.com/images/graphic.gif</a></p>
]]></content>
      <categories>
        <category>Note (技巧分享)</category>
      </categories>
      <tags>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>你可能不知道的進階 Google 搜尋技巧 - Google Hacking</title>
    <url>/2021/03/05/Google-Hacking/</url>
    <content><![CDATA[<p>用了 Google 的搜尋引擎這麼久，你是否知道這些技巧？這個被稱作「<strong>Google Hacking</strong>」的技巧，不僅可以快速找到你要的資料，甚至常被拿來… <strong>肉搜</strong>。</p>
<span id="more"></span>
<hr>
<h2 id="search-engine-搜尋引擎">Search Engine (搜尋引擎)</h2>
<p>搜尋引擎是利用 <strong>Web-Crawler (網絡爬蟲)</strong> 技術為基礎所製作的一種工具，其目的顧名思義就是用來搜索資料。</p>
<p>搜索引擎是現代人不可沒有的一項發明，成堆的檔案、照片、音樂總是讓人需要花大把時間將其分類，一陣子沒注意，下一次在找檔案時可能就要花許多時間，直到搜尋引擎的出現。</p>
<p>其中， Google 的搜索引擎最為出名且被廣泛運用，由於非常強大，身為<strong>名詞</strong>的「Google」如今在許多地方已經被當作<strong>動詞</strong>使用，舉例來說，現在的人總是將「<strong>上網找資料</strong>」直接稱作「<strong>上網 Google</strong>」，這也間接說明了 Google 搜索引擎的影響力。</p>
<p>以下為你介紹關於 Google　搜尋引擎，你所可能不知道的技巧。</p>
<hr>
<h2 id="基礎技巧-應該很多人都知道了">基礎技巧 (應該很多人都知道了)</h2>
<blockquote>
<h3 id="過舊的資訊過濾">過舊的資訊過濾</h3>
<p>在 Google 搜索引擎上，位於搜尋欄位右下角的「 <code>工具</code> 」按鈕，透過設定時間，可以過濾掉許多老舊、雜亂的資訊，讓你能更快速找到你要的資料。</p>
<p><img src="01.png" alt=""></p>
</blockquote>
<hr>
<blockquote>
<h3 id="精準搜尋圖片">精準搜尋圖片</h3>
<p>在圖片搜索後，按下搜索欄位旁的「 <code>設定</code>  &gt;  <code>進階搜尋</code> 」即可過濾不必要的關鍵字，甚至可以選擇圖片<strong>比例</strong>、<strong>格式</strong>、<strong>地區</strong>、<strong>使用權</strong>等。</p>
<p><img src="02.png" alt=""><br>
<img src="02-1.png" alt=""><br>
<img src="02-2.png" alt=""></p>
</blockquote>
<hr>
<blockquote>
<h3 id="以圖搜圖">以圖搜圖</h3>
<p>這個相信比較多人知道，不過為了還不知道的朋友還是說一下。<br>
一般來說我們搜尋圖片都是以「<strong>關鍵字</strong>」搜尋後得到結果，但 Google 允許你使用「<strong>圖片</strong>」進行搜索。許多人盜用網美照行騙，在過去可能很難查證照片真偽，現在則只需要將圖丟上網以圖搜圖，立刻抓包！<br>
點選圖片搜尋欄位的右方 <code>相機圖示</code> ，即可選擇要搜尋的圖片，可以使用<strong>網址</strong>或者<strong>本地上傳</strong>。</p>
<p><img src="03.png" alt=""><br>
<img src="03-1.png" alt=""></p>
</blockquote>
<hr>
<h2 id="進階技巧-google-hacking">進階技巧 (Google Hacking)</h2>
<p><strong>Google Hacking</strong> 又稱 <strong>Google Dorking</strong>，是一種利用 Google 內建的搜尋功能來找到安全漏洞或敏感資訊的技巧。許多人並不知道，Google 是可以透過許多內建的過濾器來更精準的搜索資訊的，而這些技巧也很常被用於<strong>肉搜</strong>。</p>
<blockquote>
<h3 id="特定標題">特定標題</h3>
<p>可以透過「intitle:“<strong>標題</strong>” <strong>關鍵字</strong>」來搜索特定標題的網站。<br>
舉例「intitle:“<strong>新北市</strong>” <strong>反毒</strong>」可以用來搜尋<strong>標題</strong>含有「 <code>新北市</code> 」且<strong>內容</strong>含有「 <code>反毒</code> 」的相關資訊</p>
<p><img src="04.png" alt=""></p>
</blockquote>
<hr>
<blockquote>
<h3 id="網頁內容含有特定文字">網頁內容含有特定文字</h3>
<p>可以透過「intext:“<strong>文字</strong>”」來搜索含有特定文字的網站。<br>
舉例「intext:“<strong>麥當勞活動</strong>”」可以用來搜尋<strong>網站內容</strong>中含有「 <code>麥當勞活動</code> 」文字的頁面。(並<strong>非</strong>只是關鍵字，而是更加精確的特定文字)</p>
<p><img src="07.png" alt=""></p>
</blockquote>
<hr>
<blockquote>
<h3 id="特定網域">特定網域</h3>
<p>透過「site:“<strong>網域</strong>” <strong>關鍵字</strong>」來搜尋基於該網域下關於該關鍵字的搜尋結果。<br>
舉例「site:“www.dcard.tw” <strong>情侶 吵架</strong>」可以搜尋「 <code>www.dcard.tw</code> 」網站中<strong>內容</strong>含有「 <code>情侶 吵架</code> 」相關的頁面。</p>
<p><img src="05.png" alt=""></p>
</blockquote>
<hr>
<blockquote>
<h3 id="含有特定文字的網址">含有特定文字的網址</h3>
<p>可以透過「inurl:<strong> 文字</strong>」來搜索含有該字串的網址。<br>
舉例「inurl:<strong>login</strong>」可以用來搜尋「 <code>網址</code> 」中含有「 <code>login</code> 」的結果。</p>
<p><img src="09.png" alt=""></p>
</blockquote>
<hr>
<blockquote>
<h3 id="特定檔案格式">特定檔案格式</h3>
<p>查詢特定檔案格式可以用「filetype:<strong> 格式</strong> <strong>關鍵字</strong>」來搜尋。<br>
舉例「filetype:<strong>doc</strong> <strong>統一超商 財務報表</strong>」可以搜尋與「 <code>統一超商 財務報表</code> 」有關且為「 <code>.doc</code> 」的文件。也可以使用「ext:<strong>doc</strong>」來精確搜尋副檔名。</p>
<p><img src="06.png" alt=""></p>
</blockquote>
<hr>
<blockquote>
<h3 id="網頁在-google-的-cache-快取">網頁在 Google 的 Cache (快取)</h3>
<p>可以透過「cache:“<strong>網域</strong>”」來搜索網站在 Google 中的緩存。<br>
舉例「cache:“<strong>reddit.com</strong>”」可以用來搜尋「 <code>reddit.com</code> 」在 Google 中的緩存。</p>
<p><img src="08.png" alt=""></p>
</blockquote>
<hr>
<blockquote>
<h3 id="單字的解釋-定義">單字的解釋、定義</h3>
<p>可以透過「define:<strong> 單字</strong>」來搜索關於該單字的解釋、定義。(前提是 Google 要有收入該單字)<br>
 舉例「define:<strong> 科普</strong>」可以用來搜尋「 <code>科普</code> 」在 Google 中解釋、定義。</p>
<p><img src="10.png" alt=""></p>
</blockquote>
<hr>
<h2 id="其他運用">其他運用</h2>
<h3 id="混合查詢">混合查詢</h3>
<p>舉例「site:“<strong>i.4cdn.org</strong>” filetype:<strong>pdf</strong> intitle:<strong>test</strong>」。<br>
<img src="11.png" alt=""></p>
<hr>
<h3 id="強調搜尋-排除搜尋">強調搜尋、排除搜尋</h3>
<p>關鍵字前加上「<strong>+</strong>」可以強調搜尋，加上「<strong>-</strong>」則排除相關資訊。<br>
舉例以下搜尋結果會顯示關於「 <code>台灣風景</code> 」的資訊，尤其「 <code>台南</code> 」，並且排除關於「 <code>台北</code> 」關鍵字的資訊。<br>
<img src="12.png" alt=""></p>
<hr>
<h3 id="精確搜尋">精確搜尋</h3>
<p>用雙引號「<strong>&quot;</strong>」將關鍵字框起可以更加精確的搜尋。<br>
舉例將搜尋「<strong>台大醫院</strong>」改為「<strong>“台大醫院”</strong>」<br>
<img src="13.png" alt=""></p>
<hr>
<h3 id="更多用法請自行上網搜尋">更多用法請自行上網搜尋</h3>
<p>以下附上網路上其他大大製作的表格：</p>
<p><a href="https://i.imgur.com/MesRgnG.png"><img src="14.png" alt="圖源: imgur.com"></a></p>
]]></content>
      <categories>
        <category>Note (技巧分享)</category>
      </categories>
      <tags>
        <tag>Google</tag>
      </tags>
  </entry>
  <entry>
    <title>匿名交友 — HeyMandi 網頁版 XSS</title>
    <url>/2019/12/22/HeyMandi%E7%B6%B2%E9%A0%81%E7%89%88XSS/</url>
    <content><![CDATA[<span id="more"></span>
<hr>
<h4 id="id">ID</h4>
<p>《ZDID》ZD-2018-01160</p>
<hr>
<h4 id="content">Content</h4>
<p>受測單位：HeyMandi<br>
 風險評估：低<br>
漏洞類型：預存式跨站腳本攻擊 (Stored Cross-Site Scripting)<br>
 通報時間：2018/10/18</p>
<hr>
<h4 id="payload">PayLoad</h4>
<p><s>https://chat.heymandi.com/chat</s></p>
<hr>
<h4 id="describe">Describe</h4>
<p>若聊天室內的雙方都是使用 HeyMandi APP，又或者雙方都是使用 Web 版的話，則不會觸發該漏洞。<br>代碼被執行的問題發生在攻擊方為 APP 版，受攻擊方為網頁版的情境下 (網址：https://chat.heymandi.com/chat)。</p>
<img src="01.jpeg" style="width:50%;">
<p>在此情境下 APP 方所發送的文字內涵有的 Script 並<strong>不會</strong>被有效過濾，因此語法可在另一端，也就是 Web 端上被執行。</p>
<img src="02.jpeg" style="width:90%;">
<p>滲透的一開始 (上圖)，測試代碼 &quot;<strong> <code>&lt;script&gt;alert(1)&lt;/script&gt;</code> </strong>&quot;，而結果是該代碼並不會被執行，但<strong> Script 標籤的確有被植入成功</strong>。</p>
<img src="03.jpeg" style="width:50%;">
<p>因此將代碼換成了 &quot;<strong> <code>&lt;img src=&quot;&quot; onerror=alert(1)&gt;</code> </strong>&quot; 做第二次測試。</p>
<img src="04.jpeg" style="width:50%;">
<p>結果成功的執行出 alert 腳本。(如上圖)<br>
 另外包含 &quot;<strong> <code>&lt;h1&gt;</code> </strong>&quot;、&quot;<strong> <code>&lt;b&gt;</code> </strong>&quot; 等標籤，經測試也是可被執行的，以及其他大量未測試的語法，都可能含有被執行的風險。</p>
<hr>
<h4 id="repair">Repair</h4>
<p>在 Web 端傳送至 APP 端的語法會被轉為 HTML 編碼，<br>
同理可將 APP 端傳送至 Web 端的語法也轉為 HTML 編碼以達到過濾語法的效果。</p>
<p>防護原則：<br>
<a href="https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet">https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet</a></p>
]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Security-Flaw (安全漏洞)</category>
        <category>我的通報</category>
      </categories>
      <tags>
        <tag>XSS (Cross-Site-Scripting)</tag>
        <tag>ReportedFromMe (我的通報)</tag>
      </tags>
  </entry>
  <entry>
    <title>(18+) 如何進入「暗網」？</title>
    <url>/2020/09/01/How-To-Enter-The-DarkWeb/</url>
    <content><![CDATA[<p>也許你聽過暗網裡的<strong>驚悚故事</strong>；<br>
並且你非常了解其中的<strong>風險</strong>；<br>
但你的<strong>好奇心</strong>驅使著你<strong>一探究竟</strong>；<br>
而你正為了不知道<strong>如何進入暗網</strong>而煩惱；<br>
那麼，這篇文章或許可以幫到你什麼。</p>
<span id="more"></span>
<hr>
<h3 id="前言">前言</h3>
<blockquote>
<p><b style="color: red; font-size: 300%;">免責申明！</b><br>
<b>本篇文章所教導的內容純屬學術研討，旨在探討「如何使用 Tor 這項技術進入隱藏網絡」，用於保障每位公民匿名上網的權利。</b><br>
<b style="color: red;">一切利用本文所提到的技術施以犯罪行為者，皆屬個人責任，本站概不負責。</b></p>
</blockquote>
<hr>
<p>本篇文章主要著重在<strong>如何進入暗網</strong>及進入暗網的<strong>注意事項</strong>，並<strong>不會</strong>有太多的<strong>介紹</strong>及<strong>原理講解</strong>。</p>
<p>如果你還不知道「 <strong>Dark Web (暗網)</strong> 」是什麼，之前我曾寫過一篇粗略介紹暗網的文章 —「<strong><a href="/2020/02/17/DarkWeb/" title="(18+) Dark Web 暗網｜人口販賣、兒童色情、殺人直播？電影情節真實上演！">(18+) Dark Web 暗網｜人口販賣、兒童色情、殺人直播？電影情節真實上演！</a></strong>」，建議你先了解完再考慮觀看本篇文章。</p>
<p>另外「<strong><a href="/2020/02/18/DarkWeb-FamousWeb/" title="(18+) 浮出水面的 4 個知名暗網">(18+) 浮出水面的 4 個知名暗網</a></strong>」這篇文章也推薦給還沒看過得你，這能使你更了解暗網。</p>
<p>也建議各位瀏覽暗網的裝置盡量<strong>保持乾淨</strong>，<strong>不</strong>要含有<strong>個人資訊</strong>，並且隨時做好電腦<strong>重灌</strong>的準備。</p>
<hr>
<h3 id="vpn-虛擬私人網路">VPN (虛擬私人網路)</h3>
<p><img src="01.jpg" alt="&quot;VPN&quot;"></p>
<p>「 <strong>VPN</strong> 」全名「 <strong>Virtual Private Network</strong> 」，中文為「 <strong>虛擬私人網路</strong> 」。<br>
一般連線上網是以 <strong>User (用戶端)</strong> 對 <strong>Server (伺服端)</strong> 做直接連線，當然 <strong>Server (伺服端)</strong> 可以清楚的<strong>知道誰訪問了站點</strong>，這對於瀏覽暗網來說太<strong>危險</strong>了，誰都不想在暗網上被對方查到身份。對於瀏覽暗網，我們必須著重注意自身的<strong>匿名性</strong>及<strong>安全性</strong>。</p>
<p>為了解決 <strong> <code>User =&gt; Server</code> </strong> 的直接訪問所造成 <strong>IP 洩漏</strong>，因此在連線的過程必須加上一道保護，這道保護即為 <strong>VPN</strong> ，掛上 VPN 後的連線為 <strong> <code>User =&gt; VPN =&gt; Server</code> </strong> ，而這些<strong>中繼的 IP</strong> 遍佈在世界各地，若不考慮服務本身有漏洞，就算是<strong>警察</strong>也<strong>很難跨國調查</strong>，這大大了<strong>增加了反追蹤的難度</strong>。</p>
<p>就好像 <strong>A</strong> 想告訴 <strong>B</strong> 一件事情，同時 <strong>A</strong> 又不希望 <strong>B</strong> 知道這件事情是他說的，所以 <strong>A</strong> 選擇先告訴 <strong>C</strong> ，請 <strong>C</strong> 保密並轉達給 <strong>B</strong>。<br>
也因為 <strong>VPN</strong> 成了與目的地<strong>連接的重要橋樑</strong>，因此必須<strong>慎選</strong>！就好比上述的情境中，<strong>C</strong> 必須是自己<strong>信任</strong>的人，反之則可能會被 <strong>B</strong> 給<strong>反追蹤</strong>，進而得知來源是 <strong>A</strong> 。</p>
<p><strong>VPN</strong> 並<strong>非</strong>無敵，許多 VPN 的服務方會願意在收到一定程度的<strong>利益</strong>後，選擇<strong>出賣使用者的資料</strong>，又或者該服務的系統安全性低，導致<strong>遭到入侵</strong>進而<strong>洩漏使用者資料</strong>。(更多 <strong>VPN</strong> 詳細介紹請查閱 <a href="https://zh.wikipedia.org/wiki/%E8%99%9B%E6%93%AC%E7%A7%81%E4%BA%BA%E7%B6%B2%E8%B7%AF"><strong>Wiki 維基百科</strong></a>)</p>
<p>個人推薦以下兩個 <strong>VPN</strong> 服務 — 「<a href="https://protonvpn.com/"><strong>Proton VPN</strong></a>」、「<a href="https://nordvpn.com/"><strong>Nord VPN</strong></a>」。</p>
<hr>
<h3 id="tor-browser-洋蔥瀏覽器">Tor Browser (洋蔥瀏覽器)</h3>
<p><img src="02.png" alt="&quot;Tor Browser&quot;"></p>
<p>在「<strong><a href="/2020/02/17/DarkWeb/" title="(18+) Dark Web 暗網｜人口販賣、兒童色情、殺人直播？電影情節真實上演！">(18+) Dark Web 暗網｜人口販賣、兒童色情、殺人直播？電影情節真實上演！</a></strong>」這篇文章中有提到，暗網無法透過 <a href="https://zh.wikipedia.org/wiki/Google_Chrome"><strong>Chrome</strong></a>、<a href="https://zh.wikipedia.org/wiki/Firefox%E7%80%8F%E8%A6%BD%E5%99%A8"><strong>Firefox</strong></a>、<a href="https://zh.wikipedia.org/wiki/Opera%E9%9B%BB%E8%85%A6%E7%80%8F%E8%A6%BD%E5%99%A8"><strong>Opera</strong></a> 等一般的瀏覽器來訪問伺服器，必須使用像 <strong>Tor Browser</strong> 這樣的特殊瀏覽器才行。</p>
<p>所以請先<strong>下載</strong>及<strong>安裝</strong> <a href="https://www.torproject.org/"><strong>Tor Browser</strong></a>，並且在<strong>連上 VPN 後</strong>，開啟 <strong>Tor Browser</strong>。</p>
<p>開啟後會發現，與「<a href="https://zh.m.wikipedia.org/wiki/Firefox%E7%80%8F%E8%A6%BD%E5%99%A8"><strong>FireFox (火狐)</strong></a>」這款瀏覽器界面大同小異 (做為基底開發的)，但在瀏覽網站時，點擊網址左方，可以看到 Tor Browser 的連接狀況，從「 <strong>This browser</strong> 」到「 <strong>google.com (目的位址)</strong> 」中間經過了一些中繼點，這些中繼點一層一層的就像洋蔥的外皮般，因此才被稱作 <strong>Onion Router (洋蔥路由)</strong> 。<br>
不過也因為<strong>經過的節點較多</strong>，相較<strong>一般瀏覽器</strong>的瀏覽<strong>速度</strong>是<strong>較慢</strong>的，若覺得這些節點<strong>速度太慢</strong>，也可以試試按下方的藍色按鈕「 <strong>New Circuit for this Site</strong> 」來<strong>更換節點</strong>。</p>
<img src="/2020/09/01/How-To-Enter-The-DarkWeb/02-01.png" class="">
<hr>
<h3 id="注意事項">注意事項</h3>
<img src="/2020/09/01/How-To-Enter-The-DarkWeb/03.jpg" class="">
<p><b style="color: red; font-size: 300%;">注意！</b></p>
<p>這些步驟很重要，請一定要確實做好。</p>
<blockquote>
<ul>
<li><strong>遮蔽鏡頭</strong>
<ul>
<li>建議用<strong>有色膠帶貼住鏡頭</strong>，這是為了防止電腦不幸受到<strong>入侵</strong>時，保障自身<strong>隱私</strong>。</li>
</ul>
</li>
<li><strong>瀏覽器視窗禁止最大化</strong>
<ul>
<li>在使用 Tor Browser 時，千萬<strong>不要將視窗最大化</strong>，這會使得對方可以輕易抓取你的裝置<strong>螢幕大小</strong>及<strong>部份資訊</strong>，進而透過這些資訊<strong>追蹤</strong>你的裝置。</li>
</ul>
</li>
<li><strong>不使用真實資料</strong>
<ul>
<li>在暗網上絕對<strong>不要登入個人帳號</strong>，不論是 <strong>Google</strong>、<strong>Facebook</strong>、<strong>Instagram</strong> 等。最好連 <strong>E-Mail</strong> 也重新辦個新帳號用於暗網，並且該帳戶不在<strong>個人電腦</strong>及<strong>未連上 VPN</strong> 時登入。</li>
</ul>
</li>
<li><strong>非必要時，請關閉 Javascript</strong>
<ul>
<li><strong>關閉網頁的 Javascript 運作</strong>可以得到更多的<strong>安全</strong>保障，當然這可能會使得<strong>網頁部份資訊無法成功載入</strong>。</li>
</ul>
</li>
<li><strong>危機處理</strong>
<ul>
<li>一旦發現任何<strong>不對勁的狀況</strong>，請立即<strong>拔掉網絡線</strong>。</li>
</ul>
</li>
<li><strong>防止詐騙</strong>
<ul>
<li>暗網上的交易主要是以<strong>虛擬貨幣</strong>來進行，這東西是<strong>不受政府保障</strong>的，因此暗網上的<strong>詐騙</strong>非常盛行，我敢說約 <strong>99 ％</strong> 賣家都是詐騙，例如常見的「 <strong>超低價販賣 Iphone 手機</strong> 」、「 <strong>比特幣洗錢</strong> 」、「 <strong>付費解鎖論壇資訊</strong> 」等。除非你<strong>信任</strong>該服務，並且確定該服務<strong>合法</strong>，否則請<strong>不要在暗網上消費</strong>。</li>
<li>另外，你也必須知道「 <strong>比特幣 (或其他虛擬貨幣) 並非絕對匿名</strong> 」。除非你懂的洗錢，否則對方或許可以輕易的透過其他交易所的門路<strong>反追蹤該比特幣錢包的主人</strong>！(推薦使用<strong>冷錢包</strong>，可以更有效的預防該狀況的發生)</li>
</ul>
</li>
<li><strong>不輕易相信任何人</strong>
<ul>
<li>請不要在暗網上輕易的信任對方。(準確來說… 表網也是)</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h3 id="進入暗網">進入暗網</h3>
<p>在暗網裡，也有個類似「<a href="https://zh.wikipedia.org/wiki/Wiki"><strong>Wiki 維基百科</strong></a>」的頁面，稱作「 <strong>The Hidden Wiki (隱藏維基)</strong> 」，又稱「 <strong>裡維基</strong> 」、「 <strong>黑暗維基</strong> 」。該頁面<strong>允許任何人匿名的編輯、提供暗網連結</strong>。</p>
<p>由於該服務是<strong>不經審查</strong>的，這也使得該網站時常含有<strong>非法內容</strong>在內，包括<strong>網路服務</strong>、<strong>電子商務</strong>、<strong>洗錢</strong>、<strong>契約暗殺</strong>、<strong>網路攻擊</strong>、<strong>各式禁運品</strong>、<strong>人口販賣</strong>、<strong>炸藥製作</strong>、<strong>武器</strong>、<strong>毒品</strong>、<strong>假幣</strong>、<strong>偽造身分證件</strong>、<strong>偽造信用卡</strong>、<strong>麻醉藥品</strong>等，不過對暗網好奇的你… <s>不就是衝這個而來的嗎？</s> (更多 <strong>Hidden Wiki</strong> 的詳細資訊請詳閱 <a href="https://zh.wikipedia.org/wiki/The_Hidden_Wiki"><strong>Wiki 維基百科</strong></a>)</p>
<blockquote>
<ul>
<li><strong>Hidden Wiki (隱藏維基)</strong> (地址非常多，可能隨時變更)
<ul>
<li><strong>hiddenw3s6tmzdwo.onion</strong></li>
<li><strong>hiddenwiki7wiyzr.onion</strong></li>
<li><strong>zqktlwiuavvvqqt4ybvgvi7tyo4hjl5xgfuvpdf6otjiycgwqbym2qad.onion</strong></li>
</ul>
</li>
</ul>
</blockquote>
<p><strong>另外推薦幾款好用的搜索引擎：</strong></p>
<blockquote>
<ul>
<li><strong>Ahmia</strong>
<ul>
<li><a href="https://ahmia.fi/"><strong>https://ahmia.fi/</strong></a></li>
</ul>
</li>
<li><strong>Not Evil</strong>
<ul>
<li><strong>hss3uro2hsxfogfq.onion</strong></li>
</ul>
</li>
<li><strong>DuckDuckGo</strong>
<ul>
<li><a href="https://duckduckgo.com/"><strong>https://duckduckgo.com/</strong></a></li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h3 id="結語">結語</h3>
<p>瀏覽暗網有一定的風險，就好像一把雙面刃。<br>
必須再次強調<strong>本站僅做學術研討</strong>，你有<strong>絕對的權利</strong>選擇<strong>是否這麼做</strong>，並且你所做的選擇皆屬<strong>個人意願</strong>，後果須<strong>自行承擔</strong>，<strong>與本站無關</strong>。</p>
<img src="/2020/09/01/How-To-Enter-The-DarkWeb/end.jpg" class="">
]]></content>
      <categories>
        <category>Information (資訊分享)</category>
      </categories>
      <tags>
        <tag>18+</tag>
        <tag>Deep Web (深網)</tag>
        <tag>Dark Web (暗網)</tag>
        <tag>Tor (洋蔥路由)</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用 Hexo 在 Github Pages 上部署部落格？</title>
    <url>/2021/05/15/How-to-deploy-Hexo-on-Github-Pages/</url>
    <content><![CDATA[想要創建部落格，但又不想要一堆複雜又用不到的功能，輕盈的靜態頁面及 Git 版本控制，使用 Markdown 來撰寫文章，用 Hexo 架設部落格並發布在 Github Pages 這一切就是那麼容易且方便。
<span id="more"></span>
<hr>
<h2 id="評估自己部落格的需求">評估自己部落格的需求</h2>
<p>說到架設部落格，許多人會選擇使用「<a href="https://zh.wikipedia.org/wiki/WordPress">WordPress</a>」這套網頁框架，雖然有著許多 <code>外掛功能</code> 及 <code>強大且方便的管理</code> 設計，但 WordPress 仍存在不少缺點…</p>
<blockquote>
<ul>
<li>檔案太肥<br>
因為強大的功能，導致整體檔案變得肥大笨重，在執行速度上並不出色。(尤其一堆功能其實根本用不到…)</li>
<li>使用 PHP + MySQL<br>
 乍聽之下好像不是什麼缺點，不過試問一下自己，真的有需要嗎？一旦牽扯到後端，一切都變得複雜。就好比接下來要說的安全性問題。</li>
<li>安全性<br>
 WordPress 的 <code>安全問題</code> 一直都是個有待討論的議題。若是在 WordPress 重大漏洞被發現後沒有即時做更新，可能站點容易遭到攻擊者利用舊版本的漏洞攻擊，這會使得攻擊者可能獲取你的 <code>資料庫權限</code> ，文章也可能因此遭到竄改。這也就是我為什麼建議若非必要，盡量使用<a href="https://zh.wikipedia.org/wiki/%E5%8B%95%E6%85%8B%E7%B6%B2%E9%A0%81"> <code>靜態頁面</code> </a>。</li>
</ul>
</blockquote>
<p>試想一下，架設部落格所需的功能有哪些？<br>
不外乎就是可以 <code>撰寫文章</code> ，並且將文章 <code>發布到網絡上</code> 供大家觀看。</p>
<p>那麼我們是否其實可以在 <code>本地端撰寫文章</code> 後，用一些工具將文章 <code>渲染成靜態頁面</code> ？<br>
這麼一來不僅可以避免過於複雜的 <code>資安問題</code> ，也可以使網站 <code>架構變得更簡單</code> 。</p>
<p>Hexo 作為部落格的應用，就是這麼一個角色的存在。<br>
(當然，這麼做的缺點是，可能無法使你方便的在 <code>線上編輯文章</code> )</p>
<hr>
<h2 id="什麼是-hexo">什麼是 Hexo ？</h2>
<p>官方是這麼介紹的：<br>
「 <code>Hexo</code>  是一個快速，簡單且功能強大的博客框架。您使用 Markdown (或其他標記語言) 撰寫文章，Hexo 會在幾秒鐘內生成帶有精美主題的 <code>靜態文件</code> 。(<em>Hexo is a fast, simple and powerful blog framework. You write posts in Markdown (or other markup languages) and Hexo generates static files with a beautiful theme in seconds.</em>)」。</p>
<p>Hexo 使用的是「<a href="https://zh.wikipedia.org/wiki/Markdown"> <code>Markdown</code> </a>」來撰寫部落格文章，這麼做的優點是，可以使你 <code>方便的對文章進行排版</code> 及 <code>以文字的方式</code> 快速的 <code>操作插件功能</code> 。<br>
Hexo 會將這些 Markdown 的文章 <code>渲染</code> 成有序的 <a href="https://zh.wikipedia.org/wiki/HTML"> <code>HTML</code> </a> 文件。並且在撰寫文章的過程中，Hexo 可以在 <code>本地端開啟伺服器</code> ，使你對自己的站點及文章做 <code>即時預覽</code> 。</p>
<p>搭配「 <code>hexo-deployer-git</code> 」插件，可以將這些靜態頁面快速的佈署在你的 <a href="https://pages.github.com/"> <code>Github Pages</code> </a> 上。</p>
<hr>
<h2 id="正式開始">正式開始</h2>
<h3 id="step1-安裝-nodejs-及-git-如果已經安裝請直接進入下個步驟">Step.1 安裝 Node.js 及 Git (如果已經安裝，請直接進入下個步驟)</h3>
<p>請確保你的環境有安裝  <code>Git</code>  及  <code>Node.js</code>  。<br>
注意：Node.js 版本若是太低，可能會在許多功能上不支援</p>
<ul>
<li>安裝 <strong>Git</strong>
<ul>
<li><strong> <code>Windows</code> </strong>：<strong><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></strong> 下載並安裝</li>
<li><strong> <code>Mac</code> </strong>：使用 <a href="https://brew.sh/"><strong>Homebrew</strong></a>, <a href="http://www.macports.org/"><strong>MacPorts</strong></a> 或 <a href="http://sourceforge.net/projects/git-osx-installer/"><strong>安裝程式</strong></a> 安裝</li>
<li><strong> <code>Linux (Ubuntu, Debian)</code> </strong>：<strong> <code>sudo apt-get install git-core</code> </strong></li>
<li><strong> <code>Linux (Fedora, Red Hat, CentOS)</code> </strong>：<strong> <code>sudo yum install git-core</code> </strong></li>
</ul>
</li>
<li>安裝 <strong>Node.js</strong><br>
Node.js 為大多數平台提供了官方的 <a href="https://nodejs.org/en/download/"><strong>安裝程序</strong></a>。對於中國大陸地區用戶，可以前往 <a href="https://npm.taobao.org/mirrors/node"><strong>淘寶 Node.js 鏡像</strong></a> 下載。<br>
又或者使用其他的安裝方式：
<ul>
<li><strong> <code>Windows</code> </strong>：通過 <a href="https://github.com/jasongin/nvs/"><strong>nvs</strong></a> (推薦) 或者 <a href="https://github.com/nvm-sh/nvm"><strong>nvm</strong></a> 安裝。</li>
<li><strong> <code>Mac</code> </strong>：使用 <a href="https://brew.sh/"><strong>Homebrew</strong></a> 或 <a href="http://www.macports.org/"><strong>MacPorts</strong></a> 安裝。</li>
<li><strong> <code>Linux (DEB/RPM-based)</code> </strong>：從 <a href="https://github.com/nodesource/distributions"><strong>NodeSource</strong></a> 安裝。</li>
<li>其它：使用相應的軟件包管理器進行安裝，可以參考由 Node.js 提供的 <a href="https://nodejs.org/en/download/package-manager/">指導</a></li>
</ul>
</li>
</ul>
<hr>
<h3 id="step2-安裝-hexo">Step.2 安裝 Hexo</h3>
<p>使用 Node.js 進行下載</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>沒意外的話，將會進行好一段時間的安裝過程，請耐心等候。<br>
若安裝成功，應該可以使用以下指令顯示 Hexo 的版本：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>若在安裝時顯示 <code>不存在 npm 指令</code> ，則表示可能你並未安裝成功  <code>Node.js</code> 。<br>
試試以下指令來嘗試顯示 Node.js 版本，以此檢查是否有成功安裝：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">node -v
<span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<hr>
<h3 id="step3-初始化-hexo">Step.3 初始化 Hexo</h3>
<p>安裝完 Hexo 之後，請先創建一個 <code>部落格目錄</code> ，進入該目錄中使用指令  <code>npm install</code>  將 Node.js 安裝在此以方便管理套件，之後使用  <code>hexo init</code>  初始化 Hexo 於該目錄。(所有 <code>部落格文件(包括插件)</code> ，將會存放在該資料夾中)</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> ~/MyBlog
<span class="token builtin class-name">cd</span> ~/MyBlog
<span class="token function">npm</span> <span class="token function">install</span>
hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>在 Hexo 初始化完畢後，應該會看到該目錄已經自動產生許多檔案。<br>
其中設定檔名為「<strong> <code>_config.yml</code> </strong>」。<br>
不過呢，暫時不動這些檔案，先嘗試將本地服務開啟：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>或者使用</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>預設的  <code>Port</code>  為  <code>4000</code> ，若成功運行，我們可以直接在瀏覽器訪問「<strong> <code>localhost:4000</code> </strong>」即可看到 Hexo 部落格頁面，及預設主題「<strong>Landscape</strong>」。</p>
<p><a href="https://hexo.io/"><img src="landscape.png" alt="圖源自: https://hexo.io/"></a></p>
<p>這麼一來就表示成功運作 Hexo 部落格啦！</p>
<hr>
<h3 id="step4-設定-hexo-config">Step.4 設定 Hexo Config</h3>
<p>接著就可以開始自訂自己的 <code>部落格資訊</code> 及 <code>Hexo 主題</code> 了！</p>
<p>編輯目錄下的  <code>_config.yml</code>  ：</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">#_config.yml
title: Alpaca-Tech
subtitle: AlpacaBlog
description: 這是一個 Hexo 部落格
keywords: 
 - alpaca
 - blog
author: Alpaca0x0
language: zh
timezone: Asia&#x2F;Taipei<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>Option</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>title</td>
<td>網站標題</td>
</tr>
<tr>
<td>subtitle</td>
<td>網站副標題</td>
</tr>
<tr>
<td>description</td>
<td>網站描述</td>
</tr>
<tr>
<td>keywords</td>
<td>網站的關鍵字，這有助於 Google SEO 的運作</td>
</tr>
<tr>
<td>author</td>
<td>您的名字，通常會用於顯示文章作者</td>
</tr>
<tr>
<td>language</td>
<td>網站使用的語言，參考 <a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">2-lettter ISO-639-1 code</a>，預設為 en</td>
</tr>
<tr>
<td>timezone</td>
<td>網站時區，Hexo 預設使用您電腦的時區，您可以在 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">時區列表</a> 尋找適當的時區，例如 America/New_York 、 Japan 與 UTC</td>
</tr>
</tbody>
</table>
<p>更多<strong>詳細設定</strong>可以在<strong>官方文檔</strong>中了解：<strong><a href="https://hexo.io/zh-tw/docs/configuration.html">https://hexo.io/zh-tw/docs/configuration.html</a></strong></p>
<hr>
<h3 id="step5-更換-hexo-主題">Step.5 更換 Hexo 主題</h3>
<p>Hexo 是社群維護的，有著許多設計者開發的主題可以使你免費使用。<br>
可以在 <strong><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></strong> 挑選自己喜歡的主題下載。</p>
<p><img src="themes.png" alt=""></p>
<p>將 <code>下載的主題</code> 放在 <code>部落格根目錄</code> 下的「 <code>themes/</code> 」目錄中。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> ~/Download/butterfly/ ./themes/ <span class="token comment">#移動主題至 themes/ 目錄下 (ex. butterfly)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>並且記得在  <code>_config.yml</code>  中設定使用的主題名稱 (下載的檔案名稱)：</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">#_config.yml
theme: butterfly #主題名稱 (ex. butterfly)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>再回到瀏覽器重新整理，應該就可以看到新的主題囉！</p>
<p>ps. 若是終端顯示 <code>錯誤訊息</code> ，很多時候是因為你<strong>沒有依照主題作者規定</strong> <code>設定主題設定檔</code> 。<br>
主題設定檔通常位於目錄「<strong> <code>themes/&lt;主題名稱&gt;/_config.yml</code> </strong>」。<br>
不同主題<strong>設定檔檔名可能不同</strong>，再請自行前往該主題文檔查閱使用方式。</p>
<hr>
<h3 id="step6-撰寫文章">Step.6 撰寫文章</h3>
<p>於 <code>部落格根目錄</code> 下使用以下指令可以 <code>創建新文章</code> ：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token string">"&lt;文章名稱>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>值得注意的是， <code>文章名稱</code> 要盡量 <code>避免特殊符號</code> ，以免<strong>渲染過程</strong>出現<strong>錯誤</strong>。</p>
<p>而文章會生成在目錄「<strong> <code>source/_posts/&lt;文章名稱&gt;.md</code> </strong>」。<br>
附檔名為「<strong>.md</strong>」，開啟該檔案會發現這是一個「 <code>Markdown</code> 」檔。</p>
<p>前面有提到，Hexo 部落格的文章是以「 <code>Markdown</code> 」來撰寫的。<br>
可以在 <code>文章的開頭</code> 設定一些 <code>基本資訊</code> ，例如 <code>標題</code> 、 <code>分類</code> 、 <code>標籤</code> … 等</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">title: 如何使用 Hexo 在 Github 上部署部落格？
categories:
  - 教學
tags:
  - Hexo
  - Blog
keywords:
  - hexo
  - blog
  - 部落格
  - github
date: 2021-05-13 15:38:36
description: &quot;這是一則關於文章的簡要說明&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>開始撰寫文章內容：</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">##</span> 標題</span>
這是一則內容...
第二行...

<span class="token title important"><span class="token punctuation">###</span> 更小的標題</span>
插入一張圖片
<span class="token url"><span class="token operator">!</span>[<span class="token content">圖片說明</span>](<span class="token url">image.png</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>更多  <code>Markdown</code>  語法請查閱 <strong><a href="https://markdown.tw/">https://markdown.tw/</a></strong> 。</p>
<hr>
<h3 id="step7-創建-github-pages">Step.7 創建 Github Pages</h3>
<p>如果你不知道什麼是「Github」，那可能要先了解一下。<br>
簡單來說，它是透過 Git 進行版本控制的軟體原始碼代管服務平台。詳情請見 <a href="https://zh.wikipedia.org/wiki/GitHub"><strong>Wiki 維基百科</strong></a></p>
<p>而「 <code>Github Pages</code> 」是就是「<a href="https://zh.wikipedia.org/wiki/GitHub"><strong>Github</strong></a>」所提供的一個 <code>網頁代管服務</code> ，我們可以將部落格交給 Github Pages 來代管。(注意，Github Pages 只能託管 <code>靜態網站</code> )</p>
<p>先請按照官方指示，建立一個 Github Pages 。<br>
創建名為「<strong> <code>username</code> .github.io</strong>」的 Repositories 。</p>
<div class="video-container"><iframe src="https://www.youtube.com/embed/2MsN8gpT6jY" frameborder="0" loading="lazy" allowfullscreen></iframe></div>
<hr>
<h3 id="step8-設定-hexo-的推送設定">Step.8 設定 Hexo 的推送設定</h3>
<p>首先要先安裝 Hexo 的  <code>hexo-deployer-git</code>  插件。<br>
於部落格根目錄輸入以下指令安裝：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>安裝完畢後編輯設定檔「 <code>_config.yml</code> 」：</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">#_config.yml
deploy:
  type: git
  repo: http:&#x2F;&#x2F;github.com&#x2F;alpaca0x0&#x2F;alpaca0x0.github.io
  branch: dev
  message: Site updated: &#123;&#123; now(&#39;YYYY-MM-DD HH:mm:ss&#39;) &#125;&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>由於我們要推送至「Github Pages」，因此  <code>type</code>  設定為 「 <code>git</code> 」。</li>
<li>其中  <code>repo</code>  為 「 <code>Repositories</code> 」，此指要部署的目的地。</li>
<li>而  <code>branch</code>  則是分支，可以不做此設定 (使用預設分支)。</li>
<li>最後  <code>message</code>  則是提交訊息，此項同樣可以不做設定。</li>
</ul>
<p>另外，這是允許一次部署多個站點的 (如果有需要的話)：</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">deploy:
 - type: git
   repo: ............
 - type: heroku
   repo: ............<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<hr>
<h3 id="step9-佈署到-github-pages">Step.9 佈署到 Github Pages</h3>
<p>渲染靜態網頁：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo generate <span class="token comment">#或者使用縮寫 hexo g</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>生成完之後就可以部署站點了：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo deploy <span class="token comment">#或者使用縮寫 hexo d</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>接著輸入 Github 帳號密碼即可成功部署。<br>
如果嫌每次都要<strong>輸入帳號密碼很麻煩</strong>，也可以使用 Github 提供的  <code>SSH</code>  方法來連接。<br>
更據官方格式將  <code>_config.yml</code>  中的佈署設定  <code>deploy</code>  裡面的  <code>repo</code>  改為對應的  <code>SSH</code>  連結。</p>
<p>詳情請見 <a href="https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh"><strong>Github 官方文檔</strong></a></p>
<p>你也可以直接輸入以下指令來  <code>渲染檔案並部署站點</code> ：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>這麼一來就大功告成啦～</p>
<p>另外  <code>hexo clean</code>  可以清理暫存檔案，使站點重新抓取資料及設定。</p>
<hr>
<h2 id="參考資料">參考資料</h2>
<p>《Hexo Documentation》<a href="https://hexo.io/docs/">https://hexo.io/docs/</a></p>
]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>(18+) N번방 사건 (N號房事件) 懶人包</title>
    <url>/2020/03/25/Korea-N-Room/</url>
    <content><![CDATA[<p>該事件為<a href="https://zh.wikipedia.org/zh-tw/%E5%A4%A7%E9%9F%A9%E6%B0%91%E5%9B%BD"><strong>大韓民國</strong></a>發生在<strong> 2008 年下半年至 2020 年三月</strong>，於即時通訊軟體「<a href="https://zh.wikipedia.org/wiki/Telegram"><strong>Telegram</strong></a>」上進行<strong>性剝削</strong>的案件。</p>
<span id="more"></span>
<hr>
<h3 id="注意">注意</h3>
<p><strong>本文內容主要源自網上資訊整理後，取重點撰寫。</strong></p>
<hr>
<h3 id="內容">內容</h3>
<p>於<strong> 2008 年 12 月</strong>，一個名為「 <strong>갓갓（Godgod）</strong> 」的用戶在即時通訊軟體「 <strong>Telegram</strong> 」創建<strong> 8</strong> 個聊天室，這些群組主要用來讓會員分享<strong>變態兒童色情</strong>相關的圖片、影片甚至進行直播，這 8 個聊天室中，每個約有<strong> 3～4</strong> 名受害者，而之後也出現越來越多與其同類型的聊天室，統稱「 <strong>N 號房</strong> 」。</p>
<p>其中名為「 <strong>博士</strong> 」的犯罪者運營的<strong> 3</strong> 個聊天室 (<strong>博士房</strong>) 最為猖獗。</p>
<hr>
<h3 id="博士房營運模式">博士房營運模式</h3>
<p>想進入群組成為會員，必須要經過審核，並且需要定期上傳色情視頻，或者參與語言性騷擾，否則將會被踢出群組，許多會員也被要求上傳<strong>親屬、女友、好友</strong>的私密影像。</p>
<p>犯案人對女性使用者發送<a href="https://zh.wikipedia.org/wiki/%E9%92%93%E9%B1%BC%E5%BC%8F%E6%94%BB%E5%87%BB"><strong>釣魚連結</strong></a>，或者利用「兼職」利誘，哄騙受害者拍攝露臉或裸照，在得到一定的個人資訊後進行威脅以獲取更多私密的照片、視頻等。將影片編輯成縮減的預告版本後，發布在「 <strong>1 號房</strong> 」供免費會員觀賞，若是想觀看完整內容，則必須要加入「 <strong>2 號房</strong> 」、「 <strong>3 號房</strong> 」等付費會員專屬群組，費用<strong> 25 萬至 150 萬韓圜</strong>不等（<strong>約 1550 至 9280 港元</strong>），使用 <a href="https://zh.wikipedia.org/wiki/%E6%AF%94%E7%89%B9%E5%B8%81"><strong>Bitcoin (比特幣)</strong></a> 支付，多達<strong> 26 萬人</strong>曾加入群組。</p>
<p>一些受害者甚至被要求在<strong>身體上刻字、食糞飲尿、將蟲子放入性器官</strong>，以及<strong>侵犯自己的幼年親屬</strong>，部分受害者亦於線下遭受性侵，甚至高級的會員可以命令犯案者對受害者做任何變態行為。</p>
<p>案件前後牽涉最少<strong> 74 名</strong>受害人，包括最年幼的<strong> 11 歲</strong>小學生，犯案人會將其以「 <strong>奴隸</strong> 」稱呼。</p>
<hr>
<h3 id="博士">「博士」</h3>
<p>「 <strong>博士</strong> 」最大嫌疑人目前鎖定<strong> 25 歲</strong>的「 <strong>조주빈 (趙周彬，音譯)</strong> 」。<br>
<strong>조주빈</strong>曾擔任某大學期刊的編輯，且否認自己是「博士」。警方從該男子家中搜出了<strong> 1.3 億韓元</strong>的現金。<br>
截止<strong> 2020 年 3 月</strong>，已有<strong> 14 名</strong>涉案人員因「 <strong>製作兒童性剝削品</strong> 」而被捕，涉案金額估計可達<strong>數億韓元</strong>。</p>
<img src="/2020/03/25/Korea-N-Room/01.jpg" class="" title="조주빈 (趙周彬，音譯)">
<img src="/2020/03/25/Korea-N-Room/02.jpeg" class="" title="조주빈 (趙周彬，音譯)">
]]></content>
      <categories>
        <category>Information (資訊分享)</category>
      </categories>
      <tags>
        <tag>18+</tag>
      </tags>
  </entry>
  <entry>
    <title>五種網路賺錢的方法！在家也能兼差為自己多一份薪水！</title>
    <url>/2020/08/07/Make-Money-Online/</url>
    <content><![CDATA[<p>網絡的盛行，越來越多人嘗試透過網絡<strong>在家工作</strong>，這不僅不必看老闆臉色，自己做自己的老闆以外，有時候甚至<strong>收益更勝過於你原本的工作</strong>也說不定呢！<br>
以下帶你了解現今網絡賺錢常見的主流方法，讓你踏出網絡賺錢的第一步！</p>
<img src="/2020/08/07/Make-Money-Online/cover.png" class="">
<span id="more"></span>
<hr>
<h3 id="前言">前言</h3>
<p>以下所介紹的網賺管道並<strong>不一定適合每個人</strong>，行動前請先<strong>評估風險及自身能力</strong>。</p>
<hr>
<h3 id="1-電子商務-electronic-commerce">1. 電子商務 (Electronic Commerce)</h3>
<img src="/2020/08/07/Make-Money-Online/01.jpg" class="">
<p>隨著網絡的興起，「 <strong>網購</strong> 」也不再是什麼新鮮事了，諸如「 <strong>Amazon</strong>、<strong>EBay</strong>、<strong>蝦皮</strong>、<strong>露天</strong>、<strong>Yahoo！拍賣</strong>、<strong>臉書拍賣</strong> 」等網購產業的龍頭相信大家也不陌生。這類透過<strong>網際網路</strong>或<strong>電子交易</strong>相關的服務，被稱作「 <strong>Electronic Commerce (電子商務)</strong> 」，是指將<strong>傳統的商業活動</strong>給<strong>電子化</strong>及<strong>網路化</strong>。</p>
<p>而網購的方便性在近幾年來大大提升了許多，原因主要在於「 <strong>賣家入門門檻低</strong> 」！<br>
網購不再僅僅是 <a href="https://zh.wikipedia.org/wiki/%E9%9B%B6%E5%94%AE"><strong>B2C</strong></a> ，也有許多是屬於 <a href="https://zh.wikipedia.org/wiki/C2C"><strong>C2C</strong></a> 的，也就是<strong>個人賣家</strong>，這並不需要成立品牌或公司，只是單純的交易。</p>
<p>若對經營網絡商店有興趣的朋友可以嘗試看看，至於賣的商品則可以選擇少量囤貨的方式賣出，但要注意的是，這有一定的<strong>風險</strong>，或者可以嘗試賣掉家中不必要的二手物品。</p>
<hr>
<h3 id="2-股票-stock">2. 股票 (Stock)</h3>
<img src="/2020/08/07/Make-Money-Online/02.jpg" class="">
<p>大家應該聽過不少人提起「 <strong>股票</strong> 」，但真正了解，並可藉此穩定持續賺取收益的人卻不在多數。很多人聽到「玩股票」第一個直覺就是覺得「 <strong>危險</strong>、<strong>風險高</strong>、<strong>會負債</strong> 」，但其實會有這樣的狀況，純粹是玩的人的<strong>心態問題</strong>！</p>
<blockquote>
<p>假設本金<strong> 50 萬</strong>的狀況下，若是要<strong>降低風險</strong>，大家都知道<strong>不能 ALL IN</strong>，或許在投資時會考慮以<strong> 10 萬</strong>分開投資<strong> 5 個項目</strong>。但今天假設有個你確信<strong> 99% 穩賺</strong>的投資項目出現，若是按照原本的方式投資 <strong>10%</strong> 淨賺<strong> 3 千</strong>，那麼如果將<strong> 50 萬</strong>全部拿來投資該項目，不就可以淨賺<strong> 1 萬 5 千</strong>了嗎！？對的，許多人就是在這裡選擇<strong>違背自己的限制</strong>，總歸一字「 <strong>貪</strong> 」。<br>
最後 <strong>99%</strong> 穩賺外的那 <strong>1%</strong> 機率總會奇妙的出現，說穿了，那 <strong>1%</strong> 也並非真的就是表面看到的那樣，許多都只是操盤手的傑作，讓你誤信投資該項目穩賺，或許 <strong>1%</strong> 才是投資該項目的獲利機率呢！</p>
</blockquote>
<p>以上說了這麼多主要就是要提醒大家，在玩股票之前，先問問自己是否有把握<strong>堅持自己的原則不貪心</strong>，投資出去的錢應該是「 <strong>即使這筆資金全數虧損，也不會對我生活造成太大影響，或者該影響是我有能力接受的</strong> 」的心態。</p>
<hr>
<h3 id="3-投放廣告-google-adsense">3. 投放廣告 - Google Adsense</h3>
<img src="/2020/08/07/Make-Money-Online/03.jpg" class="">
<p>「 <strong>廣告</strong> 」隨處可見，常見的地方有<strong>網頁</strong>、<strong>電視新聞角落版面</strong>、<strong>街道刊板</strong>、<strong>手游</strong>等。而<strong>廣告</strong>主要目的則是增加「 <strong>曝光度</strong> 」，要記住「 <strong>有流量的地方就有收益</strong> 」，基本上這句話就是再說曝光度。</p>
<blockquote>
<ul>
<li>什麼是「 <strong>曝光度</strong> 」呢？(<strong>若已了解曝光度可以跳過此段</strong>)
<ul>
<li>基本上可以理解成「 <strong>該廣告能讓多少人看到</strong> 」，曝光度越高代表越多人能觸及到該廣告。</li>
</ul>
</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>曝光度可以幹麻？(<strong>若已了解曝光度可以跳過此段</strong>)
<ul>
<li>還記得剛剛說的「 <strong>有流量的地方就有收益</strong> 」嗎？舉個例子，假設今天同樣是在<strong>家樂福</strong>，「 <strong>飲料</strong> 」會賣的比「 <strong>釣具</strong> 」好，因為<strong>飲料</strong>的客群<strong>幾乎是所有人</strong>，但<strong>釣具</strong>的客群可能較偏向<strong>釣客</strong>。在同樣的曝光度下，假設一天之內<strong>飲料</strong>可以賣出 <strong>600 瓶</strong>，而<strong>釣具</strong>卻可能只賣出<strong> 3 件</strong>！我們雖然無法控制客群 (場地限制)，但我們可以增加曝光度。</li>
<li>每天經過釣具店的<strong>路人</strong>假設為 <strong>1,000 人</strong>，而這 <strong>1,000 人</strong>中只有 <strong>3 人</strong>購買，既然每 <strong>1,000 人</strong>就會有 <strong>3 人</strong>願意購買，那麼 <strong>2,000 人</strong>或許就會有 <strong>6 人</strong>願意購買，於是店家在家樂福門口買下某一處的廣告欄位，並刊登了廣告，這時不僅僅是原本經過釣具店門口的 <strong>1000 人</strong>，還要加上「 <strong>經過家樂福門口卻沒有進入</strong> 」及「 <strong>進入家樂福卻沒有經過釣具店</strong> 」的人，假設這些人共計 <strong>8,000 人</strong>，在加上原本的 <strong>1,000 人</strong>共 <strong>9,000 人</strong>，那預估一天將會有 <strong>27 人</strong>願意購買釣具。<strong>1,000 人</strong>及 <strong>9,000 人</strong>，<strong>3 筆收入</strong>及 <strong>27 筆收入</strong>，這就是曝光度的可怕之處！(<strong>網絡曝光更容易，也能被更多人看到，這也是為什麼各個網站都有廣告的原因</strong>)</li>
<li>當然以上只是<strong>預估收入</strong>，實際上依照上述情境<strong>不太可能</strong>真的一天擁有 <strong>27 人</strong>購買，這只是<strong>理想狀態</strong>，不過願意購買的人數增加是可能的。</li>
</ul>
</li>
</ul>
</blockquote>
<p><strong>重點！！！</strong><br>
說了這一堆，那怎麼利用這個<strong>賺錢</strong>呢？</p>
<p>想想店家<strong>刊登廣告</strong>是為了讓<strong>更多人看見</strong>，如果你能夠幫助店家的廣告<strong>曝光度增加</strong>，那店家也會願意給予幫這個忙的<strong>費用</strong>。但要透過自己與商家協調合作太麻煩了，若不是有點名氣的人，大多數商家也懶的理你。</p>
<p>以下推薦 <strong>Google</strong> 的廣告服務「<a href="https://www.google.com/adsense/"><strong>Adsense</strong></a>」！<br>
使用方法在 <a href="https://www.youtube.com/"><strong>Youtube</strong></a> 搜尋「 <strong>Google Adsense</strong> 」就有一堆教學了！在此不多做贅述。若是看完並了解 <strong>Adsense</strong> 的服務條款後，即可開始在自己的網站投放廣告，或是連動相關服務 (ex. <a href="https://www.youtube.com/"><strong>Youtube</strong></a>、<a href="https://www.blogger.com/about/"><strong>Blogspot</strong></a> …) 來獲取<strong>廣告收益</strong>！</p>
<hr>
<h3 id="4-youtuber">4. Youtuber</h3>
<img src="/2020/08/07/Make-Money-Online/04.jpg" class="">
<p>知名的影音平台「 <strong>Youtube</strong> 」也是剛剛所提到「 <strong>Google Adsense</strong> 」可連動的服務之一。<strong>Youtuber</strong> 的入門門檻低，只要有心，一台智慧型手機就可以開始想題材拍影片上傳。依照目前的 <strong>Youtube 條款</strong>，你的 Youtube 頻道<strong>訂閱數</strong>必須達到 <strong>1,000 人</strong><br>
過去 <strong>12 個月內</strong>的<strong>有效公開影片觀看時數</strong>超過 <strong>4,000 個小時</strong>即可開啟<strong>營利</strong>功能。<br>
有了一定的知名度後，不僅僅是<strong>廣告收益</strong>，甚至開始會接到來自廠商的<strong>業配</strong>，至於什麼是「 <strong>業配</strong> 」，等等會解釋。</p>
<hr>
<h3 id="5-成為直播主">5. 成為直播主</h3>
<img src="/2020/08/07/Make-Money-Online/05.jpg" class="">
<p>線上直播平台早已融入整個網絡世界，不僅是「 <strong>Twitch</strong>、<strong>金剛直播</strong>、<strong>浪 Live</strong> 」等知名直播平台，另外包括「 <strong>Facebook</strong>、<strong>Youtube</strong> 」等服務也都加入了直播的功能，大陸地區的直播平台更是多到數不清！<br>
如果你對自己<strong>與觀眾互動</strong>的<strong>臨場反應</strong>能力有信心，又或者在<strong>遊戲直播</strong>的部份，覺得自己的<strong>遊戲技術</strong>能使觀眾驚豔，甚至最直接的，<strong>顏值就高</strong>，長的帥、長的美，那麼或許「 <strong>直播主</strong> 」真的是你可以考慮的走向。<br>
再看看剛剛所說的「 <strong>有流量的地方就有收益</strong> 」，若是你有個什麼<strong>特點</strong>能吸引觀眾前來觀看直播，並且<strong>穩定</strong>住客群，之後開始有了這些<strong>固定觀眾</strong>，漸漸的成為<strong>粉絲</strong>，這時候不僅僅是廣告收益，在有了一定的知名度後，你又解鎖了兩道收入來源 - 「 <strong>Donate</strong>、<strong>業配</strong> 」！</p>
<blockquote>
<ul>
<li><strong>Donate</strong>
<ul>
<li>「 <strong>Donate</strong> 」指的是「 <strong>捐贈</strong> 」，在直播行業中常常聽到主播說著「感謝 xxx 觀眾的<strong> Donate</strong> 」，這表示該觀眾用<strong>給予金錢</strong>或者<strong>等值的禮物</strong>、<strong>虛擬物品</strong>等方式，來鼓勵直播主，而這些<strong>禮物</strong>基本上都可以透過該平台的後台兌換<strong>現金</strong>至戶頭成為<strong>額外收益</strong>。</li>
</ul>
</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>業配 (Advertorial)</strong>
<ul>
<li>「 <strong>業配</strong> 」全稱「 <strong>業務配合</strong> 」。詳情請上<a href="https://zh.wikipedia.org/wiki/%E6%A5%AD%E5%8B%99%E9%85%8D%E5%90%88"><strong>維基百科</strong></a>觀看解說，簡單來說就是「 <strong>廠商利用你的知名度打廣告並且給你相對應的費用</strong> 」，有點像是明星們在代言商品一樣。</li>
<li>而大多數的直播主業配不外乎就是向觀眾介紹<strong>產品</strong>的<strong>使用方式</strong>及<strong>優點</strong>，<strong>遊戲</strong>業配的部份則通常是在直播中遊玩該遊戲，並在過程加入自身的特色與觀眾互動，帶動觀眾對於該遊戲的遊玩意願。(業配費 <strong>3,000</strong> ～ <strong>300,000</strong> 元不等，取決於流量及知名度，甚至更高)</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h3 id="總結">總結</h3>
<p>賺錢的方式有許多種，勝利的關鍵<strong>不在</strong>「 <strong>哪個賺最多</strong> 」，而在「 <strong>哪個最適合自己</strong> 」。以上推薦的五種在家獲取收入的方法<strong>不一定適合</strong>每個人，但如 <strong>Youtuber</strong> 及 <strong>直播主</strong>等行業，不僅入門門檻低，更是 <strong>0 成本</strong>，不妨有空嘗試看看。</p>
]]></content>
      <categories>
        <category>Concept (概念分享)</category>
      </categories>
  </entry>
  <entry>
    <title>《管理學 02》管理原則、角色分配｜管理的運作架構</title>
    <url>/2020/10/23/Management-Science-02/</url>
    <content><![CDATA[<p>負責管理真的比較<strong>輕鬆</strong>嗎？<strong>責任</strong>與<strong>壓力</strong>不是人人都可以<strong>承擔</strong>的。</p>
<span id="more"></span>
<hr>
<h1 id="14-項管理原則-principles-of-management">14 項管理原則 (Principles Of Management)</h1>
<p>上一篇文章提到的那位提出「<strong>古典管理理論 (法約爾主義)</strong>」的法國管理學理論學家 <a href="https://zh.wikipedia.org/wiki/%E4%BA%A8%E5%88%A9%C2%B7%E6%B3%95%E7%BA%A6%E5%B0%94"><strong>Henri Fayol (亨利・法約爾)</strong></a> 總結出了<strong> 14 項管理原則</strong>：</p>
<blockquote>
<ol>
<li><strong>勞動分工 (Division Of Work)</strong>
<ul>
<li>該原則屬於<strong>自然規律</strong>。和 <a href="https://zh.wikipedia.org/wiki/%E4%BA%9A%E5%BD%93%C2%B7%E6%96%AF%E5%AF%86"><strong>Adam Smith (亞當・史密斯)</strong></a> 的「<a href="https://wiki.mbalib.com/zh-tw/%E6%96%AF%E5%AF%86%E7%9A%84%E5%88%86%E5%B7%A5%E7%90%86%E8%AE%BA" title="MBA 智庫百科"><strong>分工理論</strong></a>」相同。<strong>專業化</strong>使得員工<strong>提高效率</strong>來提升產出。通過<strong>分工</strong>來提高<strong>管理工作的效率</strong>，但勞動分工有一定的<strong>限度</strong>，<strong>經驗</strong>與<strong>尺度感</strong>告訴我們<strong>不</strong>應超越這些<strong>限度</strong>。</li>
</ul>
</li>
<li><strong>權力與責任 (Authority and Responsibilities)</strong>
<ul>
<li>管理者必須擁有能夠下達指令的權利，而「<strong>有權利就也代表著有責任</strong>」，這就是著名的<a href="https://wiki.mbalib.com/zh-tw/%E6%9D%83%E8%B4%A3%E5%AF%B9%E7%AD%89%E5%8E%9F%E5%88%99" title="MBA 智庫百科"><strong>權責相符</strong></a>原則。而要貫徹<strong>權責相符</strong>原則，就應該要存在有效地<strong>獎勵</strong>和<strong>懲罰</strong>制度。</li>
</ul>
</li>
<li><strong>紀律 (Discipline)</strong>
<ul>
<li>員工必須嚴謹的<strong>遵守</strong>組織<strong>規章</strong>，而<strong>規章</strong>是<strong>領導人造就的</strong>，其<strong>紀律</strong>狀況主要取決於其<strong>領導人</strong>的<strong>道德</strong>標準。</li>
<li><strong>紀律</strong>是一個企業<strong>成功的關鍵</strong>，若沒有紀律，任何一個企業都<strong>不</strong>能興旺繁榮。</li>
<li><strong>制定</strong>和<strong>維持紀律</strong>最有效的辦法是：
<ul>
<li><strong>優良的領導</strong>：一個好的<strong>紀律</strong>來源於<strong>有效的領導力</strong>。</li>
<li><strong>明確而又公平的協定</strong>：<strong>管理者</strong>必須能與<strong>下屬</strong>有效<strong>溝通</strong>、<strong>理解</strong>。</li>
<li><strong>合理的懲罰機制</strong>：<strong>違反紀律者</strong>必須給予正確地<strong>懲罰</strong></li>
</ul>
</li>
</ul>
</li>
<li><strong>統一命令 (Unity Of Command)</strong>
<ul>
<li><strong>下屬</strong>只能接受<strong>一位上司</strong>的<strong>命令</strong>。</li>
<li>如果<strong>兩個領導人</strong>同時對<strong>同一個人</strong>或<strong>同一件事</strong>下達<strong>命令</strong>就容易形成<strong>混亂</strong>。任何情況下都<strong>不</strong>會出現「<strong>適應雙重指揮</strong>」的<strong>社會組織</strong>。</li>
</ul>
</li>
<li><strong>統一領導 (Unity Of Direction)</strong>
<ul>
<li>只能有<strong>一個領導人</strong>和<strong>一項計劃</strong>。聽起來跟<strong>統一命令 (Unity Of Command)<strong> 很像，但</strong>統一命令 (Unity Of Command)<strong> 所強調的是「一個下屬只能接受一個上級的</strong>指令</strong>」，而<strong>統一領導 (Unity Of Direction)<strong> 強調的則是「一個下屬只能有一個</strong>直接上級</strong>」。</li>
</ul>
</li>
<li><strong>個體利益服從整體利益 (Subordination Of Individual Interest to the General Interest)</strong>
<ul>
<li><strong>犧牲小我</strong>，<strong>完成大我</strong>。<strong>任何員工</strong>的<strong>利益</strong>都不應該居先於<strong>組織整體</strong>的<strong>利益</strong>。</li>
</ul>
</li>
<li><strong>報酬 (Remuneration)</strong>
<ul>
<li>員工必須被支付與自己的<strong>付出 合理</strong>、<strong>公平</strong>的<strong>薪水</strong>，同時<strong>不</strong>應導致<strong>超過合理限度</strong>的<strong>過多報酬</strong>。</li>
</ul>
</li>
<li><strong>集權或分權 (Centralization Or Decentralization)</strong>
<ul>
<li><strong>集權</strong>指的是<strong>下級</strong>參與<strong>組織決策制定</strong>的<strong>程度</strong>。目的在於對於各種情況找到<strong>最適合</strong>的<strong>集權程度</strong>。</li>
<li>舉例當一般<strong>小型企業</strong>，上級在傳達命令給下級時，幾乎可以<strong>直接傳達</strong>，這種<strong>權力擴散範圍小</strong>、<strong>較集中</strong>，等於<strong>集權</strong>程度高，這種管理方式稱為「<strong>集權管理 (Centralized Management)</strong>」。</li>
<li>而相較<strong>大型企業</strong>來說，例如「<strong>Google</strong>」則不可能如此運作。在<strong>大型企業</strong>中，由上級傳達命令給下級的過程中，可能會經過許多<strong>中階</strong>的<strong>部門</strong>或<strong>人員</strong>，此時<strong>權力</strong>就被<strong>分散</strong>了，等同<strong>集權</strong>程度小，這樣的管理方式又稱「<strong>分權管理 (Decentralized Management)</strong>」。</li>
</ul>
</li>
<li><strong>層級制度 (Scalar Chain/Line Of Authority)</strong>
<ul>
<li>主要原則是指必須創造一個「由高至低階級的<strong>層級</strong>所劃分構成」的<strong>層級鏈</strong>，而組織中的溝通應當遵循這條等級鏈的路徑。</li>
<li><strong>層級鏈</strong>使組織中各<strong>環節之間</strong>的<strong>權力關係</strong>更加明顯。有了這個<strong>等級鏈</strong>，組織中的<strong>成員</strong>就可以更<strong>明確了解</strong>各個階級的<strong>權力關係</strong>，以及誰有<strong>資格</strong>對誰下達<strong>命令</strong>，誰又應該對誰<strong>負責</strong>等。</li>
<li>這同時也表明了組織中<strong>信息傳遞</strong>的<strong>路徑</strong>。</li>
<li>雖然說組織中的<strong>溝通</strong>需要透過<strong>等級鏈的路徑</strong>一步一步<strong>執行</strong>，但在<strong>許多時候</strong>為了<strong>避免資訊傳達過慢</strong>，或者<strong>傳遞的中繼單位太多</strong>而<strong>導致訊息失真</strong>等，也會採取<strong>直接越級溝通</strong>的方式。(<strong>前提是雙方皆同意</strong>)</li>
</ul>
</li>
<li><strong>秩序 (Order)</strong>
<ul>
<li>任何的人和物都應該在<strong>合適</strong>的<strong>時間</strong>、合適的<strong>地點</strong>出現。<strong>秩序原則</strong>就是要求「每個人都待在<strong>最能使自己能力發揮</strong>的工作崗位工作」，就好比「每一件物品都放在它應該放的位置上」。</li>
<li>要符合秩序原則，首先要對<strong>企業</strong>的<strong>社會需求</strong>與<strong>資源</strong>有確切的理解，並保持兩者之間經常的平衡；同時要消除<strong>任人唯親</strong>、<strong>偏愛徇私</strong>、<strong>野心奢望</strong>和<strong>無知</strong>等弊病。</li>
</ul>
</li>
<li><strong>公平 (Equity)</strong>
<ul>
<li><strong>上級</strong>應該<strong>寬容</strong>和<strong>公正</strong>同時又<strong>不忽視任何原則</strong>地對待<strong>下級</strong>。</li>
</ul>
</li>
<li><strong>人員穩定 (Stability Of Tenure Of Personnel)</strong>
<ul>
<li>一個人到了<strong>新職位</strong>，從<strong>適應</strong>、<strong>調適</strong>、<strong>熟悉自身工作內容</strong>，一直到能<strong>很好地完成自己的工作</strong>，這個<strong>過程</strong>需要耗費<strong>時間成本</strong>，因此<strong>高的人員流動</strong>是<strong>沒有效率</strong>的。</li>
<li>管理員應該規劃<strong>有秩序</strong>的人員安排，並且保持<strong>隨時有代替人員</strong>可以<strong>填補空位</strong>。</li>
</ul>
</li>
<li><strong>首創精神 (Initiative)</strong>
<ul>
<li>人的<strong>自我實現需求</strong>滿足是激勵人們的<strong>工作熱情</strong>和<strong>工作積極性</strong>最有力的<strong>刺激因素</strong>。想出一個計畫並使其成功是一個聰明人的最大快樂之一，這造就了<strong>首創精神 (Initiative)<strong> 的核心目的「<strong>職員</strong>會在</strong>被允許創立和執行</strong>自己的<strong>計劃</strong>時發揮<strong>更高水平</strong>的<strong>努力</strong>」。</li>
</ul>
</li>
<li><strong>團隊精神 (Esprit de Corps)</strong>
<ul>
<li>管理者需要培養員工正確的工作態度。在<strong>團隊精神 (Esprit de Corps)<strong> 原則中，員工</strong>不</strong>該有<strong>自私自利</strong>的心態，為了增加組織的<strong>團結</strong>，員工必須有<strong>個人</strong>和<strong>集體積極的工作態度</strong>，促進團體中的<strong>和諧</strong>與<strong>團結</strong>。</li>
</ul>
</li>
</ol>
</blockquote>
<hr>
<h1 id="henry-mintzberg-的-3-大類-10-種角色">Henry Mintzberg 的 3 大類、10 種角色</h1>
<p>管理思想家 <strong>Henry Mintzberg (亨利・明茨伯格)</strong> 歸類出了 <strong>10 種角色</strong>並分成 <strong>3 大類</strong>：</p>
<h2 id="人際角色">人際角色</h2>
<blockquote>
<ul>
<li><strong>代表人 (Figurehead)</strong>
<ul>
<li><strong>團隊單位</strong>的<strong>代表</strong>，對外以<strong>團隊名義</strong>參與活動。</li>
</ul>
</li>
<li><strong>領導人 (Leader)</strong>
<ul>
<li>給予下屬<strong>指揮</strong>及<strong>下達命令</strong>。</li>
</ul>
</li>
<li><strong>聯絡人 (Liaison)</strong>
<ul>
<li>建立良好的組織<strong>內外關係</strong>和<strong>網絡</strong>，做好<strong>溝通</strong>、<strong>傳達</strong>、<strong>收集訊息</strong>等任務。</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="信息">信息</h2>
<blockquote>
<ul>
<li><strong>監控者 (Monitor)</strong>
<ul>
<li>透過收集<strong>組織內外消息</strong>以分析出組織的潛在<strong>機會</strong>和<strong>威脅</strong>。</li>
</ul>
</li>
<li><strong>傳播者 (Disseminator)</strong></li>
<li>將接收到的<strong>組織外部</strong>資訊傳播給<strong>組織內部</strong>。</li>
<li><strong>發言人 (Spokesman)</strong>
<ul>
<li>將<strong>組織內部</strong>欲傳遞給<strong>外部</strong>的訊息，代表<strong>整個單位</strong>傳遞。</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="決策角色">決策角色</h2>
<blockquote>
<ul>
<li><strong>創業家 (Entrepreneur)</strong>
<ul>
<li>發現<strong>機會</strong>並進行<strong>投資</strong>。</li>
</ul>
</li>
<li><strong>危機處理者 (Disturbance Handler)</strong>
<ul>
<li>處理<strong>危機事件</strong>及<strong>衝突</strong>。</li>
</ul>
</li>
<li><strong>資源分配者 (Resource Allocator)</strong>
<ul>
<li>決定資源分配的<strong>對象</strong>及<strong>數量</strong>。</li>
</ul>
</li>
<li><strong>談判者 (negotiator)</strong>
<ul>
<li>負責<strong>組織</strong>與<strong>客戶</strong>、<strong>供應商</strong>的<strong>商業談判</strong>。(包含<strong>員工</strong>的<strong>勞資</strong>談判。)</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h1 id="參考資料">參考資料</h1>
<blockquote>
<p>Wiki 維基百科：<a href="https://zh.wikipedia.org/wiki/%E8%A1%8C%E6%94%BF%E7%AE%A1%E7%90%86%E5%AD%B8%E6%B4%BE">https://zh.wikipedia.org/wiki/ 行政管理學派</a><br>
 MBA 智庫百科：<a href="https://wiki.mbalib.com/zh-tw/14%E9%A1%B9%E7%AE%A1%E7%90%86%E5%8E%9F%E5%88%99">https://wiki.mbalib.com/zh-tw/14 项管理原则</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Learning (學習筆記)</category>
        <category>Management Science</category>
      </categories>
      <tags>
        <tag>Management-Science (管理學)</tag>
      </tags>
  </entry>
  <entry>
    <title>《管理學 01》組織、管理者、四大功能｜管理 與 被管理</title>
    <url>/2020/10/22/Management-Science/</url>
    <content><![CDATA[<p>為什麼學習<strong>管理學</strong>？因為在這個<strong>社會</strong>，你不是<strong>管理別人</strong>、就是<strong>被人管理</strong>！你打算怎麼選擇？</p>
<span id="more"></span>
<hr>
<h1 id="學習目的">學習目的</h1>
<p><strong>管理 (Management)</strong> 指的是 <strong>協調</strong> 及 <strong>監督</strong> 與他人的 <strong>業務</strong>，讓其有 <strong>效率</strong>、有 <strong>效能</strong> 地完成。</p>
<p>至於何謂「<strong>效能</strong>」、「<strong>效率</strong>」？<br>
管理大師 <a href="https://zh.wikipedia.org/wiki/%E5%BD%BC%E5%BE%97%C2%B7%E5%BE%B7%E9%B2%81%E5%85%8B"><strong>彼得・杜拉克 (Peter Ferdinand Drucker)</strong></a> 是這麼說的：</p>
<blockquote>
<ul>
<li><strong>效率 (Efficiency)</strong><br>
<strong> 把事情做對 (Doing the thing right)</strong> 。<br>
強調<strong>資源</strong>的<strong>有效利用</strong>，以<strong>最少投入</strong>得到<strong>最大產出</strong>。</li>
<li><strong>效能 (Effectiveness)</strong><br>
<strong> 做對的事情 (Doing the right thing)</strong> 。<br>
追求<strong>目標</strong>與<strong>方向正確性</strong>，將「<strong>完成工作活動以達成組織目標</strong>」看的比「<strong>資源的運用</strong>」更為<strong>重要</strong>。</li>
</ul>
</blockquote>
<hr>
<h1 id="廣義-狹義-的-組織結構">廣義、狹義 的 組織結構</h1>
<blockquote>
<ul>
<li><strong>狹義</strong>
<ul>
<li>指為了<strong>實現</strong>組織的<strong>目標</strong>，組織理念下經過組織設計所形成的<strong>組織內部部門</strong>、各個層次之間的排列方式，即<strong>組織內部的構成方式</strong>。</li>
</ul>
</li>
<li><strong>廣義</strong>
<ul>
<li>包含<strong>狹義</strong>的組織結構。</li>
<li>「<strong>組織</strong>」主要是指有<strong>目的</strong>、<strong>系統</strong>的<strong>集合</strong>。</li>
<li>簡單來說，<strong>組織</strong>就是指為了實現<strong>一致的目標</strong>，而<strong>互相合作</strong>，集結而成的<strong>集體</strong>或<strong>團體</strong>， 如<strong>企業</strong>、<strong>黨團</strong>… 等。</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h1 id="管理-與-被管理">管理 與 被管理</h1>
<blockquote>
<ul>
<li><strong>非管理者員工</strong>
<ul>
<li>直接<strong>從事工作</strong>與<strong>執行任務</strong>的人員，<strong>沒</strong>有<strong>監督</strong>其他人工作的責任。</li>
</ul>
</li>
<li><strong>管理者 (Managers)</strong>
<ul>
<li>在組織中負責<strong>指揮</strong>及<strong>監督</strong>下屬<strong>工作活動</strong>的人員，藉由<strong>協調他人</strong>來<strong>完成工作</strong>，以便<strong>達成組織目標</strong>，必要時也會<strong>親自執行任務</strong>。</li>
<li>管理者的工作著重在<strong>協助他人進行工作</strong>。</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h1 id="管理者階級">管理者階級</h1>
<blockquote>
<ul>
<li><strong>基層管理者 (First-Line Managers)</strong>
<ul>
<li>又稱<strong>第一線管理者</strong> 。負責<strong>非管理職員工作的管理</strong>，通常負責指揮他們的<strong>日常作業</strong>。</li>
<li>常見的<strong>基層管理者</strong>職位：
<ul>
<li>領班 (Supervisors)</li>
<li>組長 (Shift Managers)</li>
<li>課長 (Office Managers)</li>
<li>部門經理 (Department Managers)</li>
<li>單位協調者 (Unit Coordinators)</li>
</ul>
</li>
</ul>
</li>
<li><strong>中階管理者 (Middle Managers)</strong>
<ul>
<li>負責管理基層管理者的活動。在管理者職位中，介於<strong>基層</strong>與<strong>高層</strong>之間 (<s>難做人</s>)。</li>
<li>常見的<strong>中階管理者</strong>職位：
<ul>
<li>部門經理或局長 (Department Or Agency Head)</li>
<li>專案領導者 (Project Leader)</li>
<li>單位主管 (Unit Chief)</li>
<li>地區經理 (District Manager)</li>
<li>事業部經理 (Division Manager)</li>
<li>店經理 (Store Manager)</li>
</ul>
</li>
</ul>
</li>
<li><strong>高階管理者 (Top Managers)</strong>
<ul>
<li>屬於<strong>組織架構</strong>中<strong>位於</strong>或<strong>接近</strong>組織<strong>頂端</strong>的管理者。負責全公司的<strong>決策</strong>，訂定全公司的<strong>計劃</strong>和<strong>目標</strong>。</li>
<li>常見的<strong>高階管理者</strong>職位：
<ul>
<li>副總經理 (Vice President)</li>
<li>總經理 (President)</li>
<li>校長 (Chancellor)</li>
<li>執行董事 (Managing Director)</li>
<li>營運長 (Chief Operating Officer)</li>
<li>執行長 (Chief Executive Officer)</li>
<li>董事長 (Chairperson Of The Board)</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h1 id="管理者該做些什麼管理學四大功能">管理者該做些什麼？管理學四大功能！</h1>
<p>起初，法國的管理學理論學家 <a href="https://zh.wikipedia.org/wiki/%E4%BA%A8%E5%88%A9%C2%B7%E6%B3%95%E7%BA%A6%E5%B0%94"><strong>Henri Fayol (亨利・法約爾)</strong></a> 歸類出的「<strong>古典管理理論 (法約爾主義)</strong>」為：<strong> <code>規劃 (Plan)</code> </strong>、<strong> <code>組織 (Organize)</code> </strong>、<strong> <code>命令 (Command)</code> </strong>、<strong> <code>協調 (Coordinated)</code> </strong>、<strong> <code>控制 (Control)</code> </strong>。</p>
<p>隨後，美國 <a href="https://zh.wikipedia.org/wiki/%E5%8A%A0%E5%88%A9%E7%A6%8F%E5%B0%BC%E4%BA%9A%E5%A4%A7%E5%AD%A6%E6%B4%9B%E6%9D%89%E7%9F%B6%E5%88%86%E6%A0%A1"><strong>UCLA</strong></a> 的教授 <a href="https://en.wikipedia.org/wiki/Harold_Koontz"><strong>Harold Koontz</strong></a> 和 <a href="https://en.wikipedia.org/wiki/Cyril_J._O'Donnell"><strong>Cyril O’Donnell</strong></a> 提出<strong>管理五大功能</strong>：<strong> <code>規劃 (Planning)</code> </strong>、<strong> <code>組織 (Organizing)</code> </strong>、<strong> <code>人事 (Staffing)</code> </strong>、<strong> <code>領導 (Leading)</code> </strong>、<strong> <code>控制 (Controlling)</code> </strong>。</p>
<p>而在<strong>現代管理理論</strong>中，管理功能已被濃縮成<strong>四項</strong>：<strong> <code>規劃 (Planning)</code> </strong>、<strong> <code>組織 (Organizing)</code> </strong>、<strong> <code>領導 (Leading)</code> </strong>、<strong> <code>控制 (Controlling)</code> </strong>。</p>
<blockquote>
<ul>
<li><strong>規劃 (Planning)</strong>
<ul>
<li>訂定組織發展的<strong>目標</strong>及<strong>方向</strong>及達成目的的方法。(錯的方向努力等同徒勞)</li>
</ul>
</li>
<li><strong>組織 (Organizing)</strong>
<ul>
<li>界定部門間的<strong>職掌</strong>、<strong>權責</strong>，透過<strong>安排</strong>和<strong>架構工作</strong>完成組織目標。</li>
</ul>
</li>
<li><strong>領導 (Leading)</strong>
<ul>
<li>目的在於<strong>激勵員工</strong>，使其自發性朝向組織目標努力，以提供<strong>最大貢獻</strong>。</li>
</ul>
</li>
<li><strong>控制 (Controlling)</strong>
<ul>
<li>檢視<strong>執行過程</strong>及<strong>結果</strong>，對重大差異<strong>提出修正</strong>，將錯誤的方向導回正軌，以確保組織目標的達成。</li>
</ul>
</li>
</ul>
</blockquote>
<p>每個階層對於這四項管理功能的比重都有所不同：<br>
<img src="POLC-first-line-managers.png" alt="first-line-managers" width="85%"><br>
<img src="POLC-middle-managers.png" alt="middle-managers" width="85%"><br>
<img src="POLC-top-managers.png" alt="top-managers" width="85%"></p>
<hr>
<h1 id="管理者該具備什麼">管理者該具備什麼？</h1>
<blockquote>
<ul>
<li><strong>概念能力 (Conceptual Competencies)</strong>
<ul>
<li><strong>掌握</strong>和<strong>協調</strong>組織的<strong>整體利益</strong>和<strong>活動</strong>。</li>
</ul>
</li>
<li><strong>人際關係能力 (Human Competencies)</strong>
<ul>
<li>以<strong>領導</strong>、<strong>激勵</strong>和<strong>溝通</strong>來達成<strong>組織的目標</strong>。</li>
</ul>
</li>
<li><strong>技術能力 (Technical Competencies)</strong>
<ul>
<li>利用特殊的技術，以完成<strong>特定的管理任務</strong>。</li>
</ul>
</li>
<li><strong>政治能力 (Political Competencies)</strong>
<ul>
<li>建立正確的<strong>關係</strong>或<strong>權力</strong>基礎。</li>
</ul>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>Learning (學習筆記)</category>
        <category>Management Science</category>
      </categories>
      <tags>
        <tag>Management-Science (管理學)</tag>
      </tags>
  </entry>
  <entry>
    <title>Maslow&#39;s Hierarchy Of Needs (馬斯洛 需求層級理論)</title>
    <url>/2021/03/17/Maslow-s-Hierarchy-Of-Needs/</url>
    <content><![CDATA[<p>Maslow 將心理需求與生理需求分成五個層級來探討，或許你聽過「<strong>需求層級</strong>」，但你真的了解嗎？</p>
<span id="more"></span>
<hr>
<h2 id="起源">起源</h2>
<p><strong>Maslow’s Hierarchy Of Needs (馬斯洛 需求層次理論)</strong> 是由一名美國心理學家 <a href="https://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%AF%E6%8B%89%E7%BD%95%C2%B7%E9%A9%AC%E6%96%AF%E6%B4%9B"><strong>Abraham Harold Maslow</strong></a> 於 <strong>1943</strong> 年《<strong>心理學評論</strong>》的論文〈<strong>人類動機的理論 (A Theory of Human Motivation)</strong>〉 中所提出的理論。該理論屬於<strong>心理健康</strong>的理論，主張認為人類天生的需求是首先要被滿足的，隨後更進一步滿足自己，最後達成自我實現。</p>
<p><a href="https://upload.wikimedia.org/wikipedia/zh/e/e0/Abraham_Maslow.jpg"><img src="Abraham_Maslow.jpg" alt="Abraham Harold Maslow (圖源: Wiki 維基百科)"></a></p>
<hr>
<h2 id="需求比較">需求比較</h2>
<p>凡是人便有需求，<strong>食衣住行娛樂</strong>皆是。<br>
而這些需求有<strong>輕重緩急</strong>之分，舉例「 <code>食</code> 」相較「 <code>娛樂</code> 」來的更重要，因此在滿足「 <code>食</code> 」的需求之前，「 <code>娛樂</code> 」先放一旁。又好比說「 <code>安全</code> 」與「 <code>理想</code> 」來說，當一個人面臨<strong>威脅自身安全</strong>的處境而又<strong>無法解決</strong>時，是<strong>沒</strong>有心思去<strong>思考自己的理想</strong>的，安全相對是更重要的，也正是大家常聽到的「<strong>安全第一</strong>」。</p>
<p>Maslow 將這些需求進行<strong>排列</strong>、<strong>分級</strong>就形成了著名的「<strong>需求層級圖</strong>」。</p>
<hr>
<h2 id="需求層級">需求層級</h2>
<p><a href="https://upload.wikimedia.org/wikipedia/commons/thumb/6/60/Maslow%27s_Hierarchy_of_Needs.svg/1280px-Maslow%27s_Hierarchy_of_Needs.svg.png"><img src="1280px-Maslow's_Hierarchy_of_Needs.svg.png.jpg" alt="需求層級圖 (圖源: Wiki 維基百科)"></a></p>
<p>這些需求被以<strong>優先需要的程度</strong> <code>高至低</code> 分別為 <code>下到上</code> 分級，及形成上圖的<strong>需求層級金字塔</strong>。<br>
以下為生理層面的需求：</p>
<blockquote>
<h3 id="physiological-needs-生理需求">Physiological Needs (生理需求)</h3>
<p>級別最低，在整個需求層級金字塔最底部，也就是<strong>最優先需要</strong>的層級。<br>
其中就包括 <code>空氣</code> 、 <code>食物</code> 、 <code>水</code> 、 <code>睡眠</code> 、 <code>性</code> 等。<br>
這些是使人能存活下去的主要條件。當不被滿足時，其他層級的需求相對不再重要，甚至可能被捨棄，像是「<a href="https://zh.wikipedia.org/wiki/%E7%83%8F%E6%8B%89%E5%9C%AD%E7%A9%BA%E8%BB%8D571%E8%99%9F%E7%8F%AD%E6%A9%9F%E7%A9%BA%E9%9B%A3">烏拉圭空軍 571 號班機空難</a>」事件中，遇難的 45 人中，只剩 16 名生還者，使這些生還者能夠生存的關鍵在於，他們選擇<strong>吃了其他同伴的遺體</strong>，聽起來殘忍，但也正是因為這個選擇滿足了生理需求才能活下來。</p>
</blockquote>
<blockquote>
<p>「<em>倖存者的食物很少：幾塊巧克力、什錦點心和幾瓶紅酒。墜機後的幾天裡，眾人將食物分成很少的量，以免把他們微薄的補給用盡。費托還設計一種把雪融成水的辦法，他把雪放上金屬座位。用陽光把雪融掉後滴入空酒瓶。即便分配很嚴格，他們的食物還是很快地減少。白雪皚皚的山上不會有天然植物或動物存活。眾人作出集體決定，吃死去戰友的屍體。這個決定不是輕易做出的，因為大多死難者都是親密的朋友和同學。</em>」 - <a href="https://zh.wikipedia.org/wiki/%E7%83%8F%E6%8B%89%E5%9C%AD%E7%A9%BA%E8%BB%8D571%E8%99%9F%E7%8F%AD%E6%A9%9F%E7%A9%BA%E9%9B%A3">Wiki 維基百科</a></p>
</blockquote>
<blockquote>
<h3 id="safety-needs-安全需求">Safety Needs (安全需求)</h3>
<p>為次要需求層級，在滿足了 <strong>Physiological (生理)</strong> 層面的需求後，生物的基本生存條件就被鞏固了，但以群觀視角來說，依舊無法滿足真正「<strong>穩定的生存</strong>」。<br>
對一般動物而言，身處的<strong>環境</strong>及自己處在<a href="https://zh.wikipedia.org/wiki/%E9%A3%9F%E7%89%A9%E9%8F%88">食物鏈</a>的哪一環決定了自己的安全條件如何。而人類不只是如此，人類還必須得面臨在人類社會中的 <code>經濟</code> 問題。<br>
諸如 <code>人身安全</code> 、 <code>生活安穩</code> 、 <code>疾病或痛苦</code> 、 <code>威脅</code> 等，只要是影響到<strong>自身生命安全</strong>的因素，皆是屬於該層級。</p>
</blockquote>
<hr>
<p>以上皆是為了「生存」的生理需求，<br>
從這裡才開始有了心理需求：</p>
<blockquote>
<h3 id="love-and-belonging-needs-愛與歸屬感需求">Love And Belonging Needs (愛與歸屬感需求)</h3>
<p>又稱「<strong>社交需求</strong>」。既然是「<strong>社交</strong>」就<strong>不</strong>會只有<strong>自己</strong>。<br>
<strong>生理需求</strong>中所作的一切都只是<strong>為了自己</strong>，讓自己能夠活下去，但在此層級中，開始會<strong>為他人著想</strong>、<strong>付出</strong>。<br>
開始有了 <code>親情</code> 、 <code>友誼</code> 、 <code>愛情</code> 等需求，可以為了愛付出貢獻，甚至是無私的奉獻。</p>
</blockquote>
<blockquote>
<h3 id="esteem-needs-尊嚴需求">Esteem Needs (尊嚴需求)</h3>
<p>屬於高級需求。在文明社會中，大家所追求的基本上就是該層級的相關內容。<br>
尊嚴不只是<strong>他人對自己</strong>，也包括<strong>自己對自己</strong>，分別又稱<strong>外部尊重</strong>及<strong>內部尊重</strong>。<br>
舉例 <code>社會地位</code> 、 <code>成就</code> 、 <code>名聲</code> 、 <code>被他人認同</code> 、 <code>被他人尊重</code> 屬於<strong>外部尊重</strong>；<br>
 <code>自我認知價值</code> 、 <code>自信(自我肯定)</code> 、 <code>自尊</code> 則屬於<strong>內部尊重</strong>。</p>
</blockquote>
<blockquote>
<h3 id="need-for-self-actualization-自我實現需求">Need For Self-Actualization (自我實現需求)</h3>
<p>為最高層級的需求。主要是指獲得更高<strong>人生境界</strong>的需求。<br>
像是<strong>發覺自我潛能</strong>、<strong>做到自我實現</strong>等。<br>
聽起來很複雜，但例子就在生活周遭： <code>愛護動物而選擇吃素</code> 、 <code>運動國手勤奮訓練為了超越自己</code> 、 <code>為了幫助弱勢族群而捐款</code> ，是一種衍生性需求。</p>
</blockquote>
<hr>
<blockquote>
<h3 id="over-actualization-超自我實現">Over Actualization (超自我實現)</h3>
<p>Maslow 在晚期提出的延伸理論。<br>
當人們充分的滿足 <strong>Need For Self-Actualization (自我實現需求)</strong> 時，所出現短暫的「<strong>高峰體驗</strong>」。<br>
可能是 <code>成就感</code> 或 <code>某種體悟</code> ，通常都是在進行或完成一件事情時，<strong>深刻體驗</strong>到的感覺，通常<strong>藝術家</strong>或是<strong>音樂家</strong>較常體會到。<br>
「<em>一位音樂家，在演奏音樂時，所感受到的一股「忘我」的體驗。一位藝術家在畫圖時，感受不到時間的消逝，他在畫圖的每一分鐘，對他來說跟一秒一樣快，但每一秒卻活的比一個禮拜還充實。</em>」 - <a href="https://zh.wikipedia.org/wiki/%E9%9C%80%E6%B1%82%E5%B1%82%E6%AC%A1%E7%90%86%E8%AE%BA">Wiki 維基百科</a></p>
</blockquote>
<hr>
<h2 id="參考資料">參考資料</h2>
<p>《Wiki 維基百科 - 需求層級理論》<a href="https://zh.wikipedia.org/wiki/%E9%9C%80%E6%B1%82%E5%B1%82%E6%AC%A1%E7%90%86%E8%AE%BA">https://zh.wikipedia.org/wiki/ 需求层次理论</a></p>
]]></content>
      <categories>
        <category>Learning (學習筆記)</category>
        <category>Management Science</category>
      </categories>
      <tags>
        <tag>Psychology (心理學)</tag>
      </tags>
  </entry>
  <entry>
    <title>Monty-Hall Problem (三門問題)｜選擇的順序改變了機率？並非如此！</title>
    <url>/2021/03/04/MontyHall-Problem/</url>
    <content><![CDATA[<p><strong>三分之一</strong>的機率中，可以透過<strong>更換選擇</strong>來<strong>提高機率</strong>，這是曾經讓許多人摸不著頭緒的 Monty-Hall Problem (三門問題)，你能參透其中的答案嗎？</p>
<span id="more"></span>
<hr>
<h2 id="起源">起源</h2>
<p><strong>Monty-Hall Problem</strong> 又稱<strong>三門問題</strong>、<strong>山羊問題</strong>、<strong>蒙提霍爾問題</strong>。<br>
起源是一個源自<a href="https://zh.wikipedia.org/wiki/%E5%8D%9A%E5%BC%88%E8%AE%BA"><strong> Game Theory (博奕論)</strong></a> 的數學遊戲問題，最早推測可能出自 1963 年的一個美國電視遊戲節目 - 「<strong>Let’s Make a Deal (讓我們一起交易)</strong>」，其中該節目的主人名為「<strong>Monty Hall</strong>」，故稱做「<strong>Monty-Hall Problem</strong>」。</p>
<hr>
<h2 id="三門遊戲">三門遊戲</h2>
<p><a href="https://zh.wikipedia.org/wiki/%E8%92%99%E6%8F%90%E9%9C%8D%E7%88%BE%E5%95%8F%E9%A1%8C#/media/File:Monty_open_door.svg"><img src="01.png" alt="圖源: Wiki 維基百科"></a></p>
<p>在節目中，參賽者的面前會有<strong>三道關閉的門</strong>，其中一道門後有著一輛<strong>汽車</strong>，其餘兩道門後則是<strong>山羊</strong> (我也不知道為啥是山羊…)，若是參賽者選中門後為汽車的門，那麼即可贏得汽車。</p>
<p>遊戲開始後，主持人會要求參賽者<strong>選擇一道門</strong>，不論這道門後是<strong>汽車</strong>或者<strong>山羊</strong>，主持人都會開啟 <code>參賽者所選的門之外，其餘兩道門中含有山羊的那道門</code>  (主持人是知道門後狀況的)。</p>
<p>舉例，三道門分別為  <code>A</code> 、 <code>B</code> 、 <code>C</code>  ，參賽者選擇了  <code>C</code>  ，若是  <code>B</code> 、 <code>C</code>  門後皆為 <code>山羊</code> ，那麼主持人則會開啟  <code>B</code>  門；若是  <code>A</code> 、 <code>B</code>  門後為山羊，那麼主持人隨機選擇開啟  <code>A</code>  或  <code>B</code>  門。</p>
<p>到目前為止沒什麼太大問題，這時候我們探討的核心問題是…<br>
「在主持人打開一道背後是山羊的門後，會詢問參賽者<strong>是否要更換剛剛所選的門</strong>，若是選擇換門，那麼參賽者贏得汽車的的<strong>機率是否會增加</strong>？」</p>
<p>聽起來很荒謬對吧！換不換門，其實對於結果並不會改變才對。<br>
但若是我告訴你，這的確會使得贏得汽車的機率提高至 <strong>1/2</strong> 呢？</p>
<hr>
<h2 id="驗證">驗證</h2>
<p>為了方便探討機率，我們實際列舉所有可能性:</p>
<blockquote>
<p>先假設  <code>A</code> 、 <code>B</code>  門後是 <code>山羊</code> ，而  <code>C</code>  門後則是 <code>汽車</code></p>
<ul>
<li>不換門
<ul>
<li>參賽者堅持選擇  <code>A</code>  門，獲得 <code>山羊</code></li>
<li>參賽者堅持選擇  <code>B</code>  門，獲得 <code>山羊</code></li>
<li>參賽者堅持選擇  <code>C</code>  門，獲得 <code>汽車</code></li>
</ul>
</li>
</ul>
<p>由此可知，贏得 <code>汽車</code> 機率為  <code>1/3</code></p>
<ul>
<li>換門
<ul>
<li>參賽者選擇  <code>A</code>  門，主持人開  <code>B</code>  門，參賽者換  <code>C</code>  門，獲得 <code>汽車</code></li>
<li>參賽者選擇  <code>B</code>  門，主持人開  <code>A</code>  門，參賽者換  <code>C</code>  門，獲得 <code>汽車</code></li>
<li>參賽者選擇  <code>C</code>  門，主持人開  <code>A</code>  門，參賽者換  <code>B</code>  門，獲得 <code>山羊</code></li>
<li>參賽者選擇  <code>C</code>  門，主持人開  <code>B</code>  門，參賽者換  <code>A</code>  門，獲得 <code>山羊</code></li>
</ul>
</li>
</ul>
<p>欸？贏得 <code>汽車</code> 的機率變成  <code>1/2</code>  ！？</p>
</blockquote>
<p>這太不符合常理了，怎麼可能在選擇過後機率發生改變！？<br>
別擔心，帶你繼續看下去。<br>
但在解答之前，喜歡解題的朋友，可以先停在這邊好好思考一下。</p>
<hr>
<h2 id="解答">解答</h2>
<p>其實，機率是沒有變的，一直都是  <code>1/2</code> ！<br>
在一開始的選擇當中，三道門選一道的機率確實是  <code>1/3</code> ，但在主持人開啟一道門後 (後面是山羊的門)，這等於刪除了一道門，此刻若是再給參賽者一次選擇，這次的選擇機率將會是  <code>1/2</code> ，重點在於，我們必須將前後兩次選擇視為 <strong> <code>獨立事件</code> </strong>，真正影響參賽者贏得汽車機率的關鍵在於<strong>第二次</strong>的選擇。</p>
<p>我們再來重新列舉一次可能性:</p>
<blockquote>
<p>先假設  <code>A</code> 、 <code>B</code>  門後是 <code>山羊</code> ，而  <code>C</code>  門後則是 <code>汽車</code> <br>
並且 主持人已經開啟一道門 ( <code>第一次</code> 選擇不重要，此指的選擇是 <code>第二次</code> 選擇)</p>
<ul>
<li>不換門
<ul>
<li>主持人刪除  <code>B</code>  門，參賽者仍選擇  <code>A</code>  門，獲得 <code>山羊</code></li>
<li>主持人刪除  <code>A</code>  門，參賽者仍選擇  <code>B</code>  門，獲得 <code>山羊</code></li>
<li>主持人刪除  <code>A</code>  門，參賽者仍選擇  <code>C</code>  門，獲得 <code>汽車</code></li>
<li>主持人刪除  <code>B</code>  門，參賽者仍選擇  <code>C</code>  門，獲得 <code>汽車</code></li>
</ul>
</li>
</ul>
<p>機率為  <code>1/2</code></p>
</blockquote>
<p>沒錯，這道陷阱題使人容易忽略了參賽者選擇汽車那道門時，主人持人選擇刪除門的可能性是有<strong>兩種</strong>的。</p>
<p><a href="https://zh.wikipedia.org/wiki/File:Monty_tree_door1.svg"><img src="02.jpg" alt="圖源:  Wiki 維基百科"></a></p>
<hr>
<h2 id="結論">結論</h2>
<p>這麼一來你知道為什麼了嗎？(如果還是很矇，可以再重頭看一次 XD)<br>
 有時候看一件事物時， <strong>第一直覺</strong> 有可能會是 <strong>錯</strong> 的，當你深信自己的第一直覺而不求證時，很容易造成如同該題目一般的狀況，一直反覆的問自己為什麼，總是不能理解為什麼機率為 <strong>1/2</strong> 。<br>
那是因為題目一開始就告訴你機率是 <strong>1/3</strong> ，而我們在看到題目是「<strong>三道門選一道</strong>」的時候，就對此深信不已。</p>
]]></content>
      <categories>
        <category>Popular-Science (科普)</category>
      </categories>
      <tags>
        <tag>Mathematics (數學)</tag>
      </tags>
  </entry>
  <entry>
    <title>打檔機車 原理解說｜看完馬上了解打檔車原理！</title>
    <url>/2020/07/20/Motorcycle/</url>
    <content><![CDATA[<p>檔車很帥沒錯，這也是許多人入坑的原因，但是對沒接觸過的新手來說，真的很頭痛！<br>
以下盤點許多關於檔車新手會有的疑問…</p>
<span id="more"></span>
<hr>
<h3 id="注意">注意</h3>
<p><strong>本文內容主要為個人理解，若有錯誤請聯繫告知，感謝。</strong></p>
<hr>
<h3 id="速克達-與-打檔機車-的差別"><strong>速克達</strong> 與 <strong>打檔機車</strong> 的差別</h3>
<ul>
<li><strong>Scooter (速克達)</strong></li>
</ul>
<blockquote>
<p>台灣常見的機車多半為下圖的樣式，這也是大多數台灣人聽到「機車」後會想到的樣子，該機車類型被稱作「 <strong>Scooter (速克達)</strong> 」又或者叫做「 <strong>塑膠車</strong> 」，港澳地區則稱之為「 <strong>綿羊仔</strong> 」。</p>
<p>「<em>在二十世紀初有存在，此後二次大戰後由<a href="https://zh.wikipedia.org/wiki/%E7%BE%A9%E5%A4%A7%E5%88%A9">義大利</a><a href="https://zh.wikipedia.org/wiki/%E4%BC%9F%E5%A3%AB%E7%89%8C">偉士牌</a>帶動流行起來的交通工具，是摩托車的一種。</em>」 - <a href="https://zh.wikipedia.org/wiki/%E9%80%9F%E5%85%8B%E9%81%94"><strong>Wiki 維基百科</strong></a></p>
</blockquote>
<img src="/2020/07/20/Motorcycle/i1.jpg" class="" title="台灣路上常見的 Scooter (速克達) 機車">
<hr>
<ul>
<li><strong>Motorcycle (檔車)</strong></li>
</ul>
<blockquote>
<p>檔車才是一般大家所指的「 <strong>Motorcycle</strong> 」。<br>
與 <strong>Scooter (速克達)</strong> 最主要的差別在於「需要<strong>手動更換檔位</strong>變速 (速克達為機器自動更換)」，且速克達是以<strong>皮帶</strong>傳動，檔車則是以<strong>鏈條</strong>傳動。</p>
</blockquote>
<img src="/2020/07/20/Motorcycle/i2.jpg" class="" title="Motorcycle (打檔車)">
<hr>
<br>
<table border="0">
 	<tr>
	<td><center><b>速克達: 皮帶傳動</b></center><br></td>
	<td><center><b>檔車: 鏈條傳動</b></center><br></td>
	</tr>
	<tr>
		<td style="width: 49%;"><img src="/2020/07/20/Motorcycle/i3.jpg" class=""></td>
		<td style="width: 49%;"><img src="/2020/07/20/Motorcycle/i4.jpg" class=""></td>
	</tr>
</table>
<hr>
<h3 id="煞車離合器打檔桿">煞車？離合器？打檔桿？</h3>
<p>許多人搞不清楚「離合器」到底是什麼。<a href="https://zh.wikipedia.org/wiki/%E9%9B%A2%E5%90%88%E5%99%A8"><strong>離合器 (Clutch)</strong></a> 主要功能是用來控制將引擎動力傳遞至車軸的裝置，舉例機車的離合器來說，一般路上常見的<strong>速克達</strong>離合器是<strong>自動化</strong>讓<strong>車輛自行控制</strong> ，因此非常的方便，你只需要催油門就可以讓機車前進。</p>
<p>但是檔車就不同了，因為<strong>檔車</strong>的離合器是<strong>手動控制</strong>的，因此檔車比起速克達多了一個「離合器控制的開關」，而這個開關通常就是設計在<strong>左邊手把前拉桿</strong> ，相當於是<strong>速克達的後煞車位置 (左煞)</strong> ，那<strong>檔車的後煞車</strong>跑去哪了？</p>
<p><strong>檔車後煞車</strong>則是被改到了車體<strong>右方腳踏桿</strong> ，也就是說<strong>所有的煞車都在車體右方</strong> ，用<strong>右手</strong>、<strong>右腳</strong>去控制<strong>前煞車</strong>、<strong>後煞車</strong>。而<strong>左腳</strong>位置則是「 <strong>打檔桿</strong> 」，顧名思義就是配合左手的離合器用來更換檔位用的。</p>
<hr>
<center><b>
<br>檔車: 左手離合器
<p><img src="i5.jpg" alt="離合器" width="60%"></p>
<p><br>檔車：右腳後煞車</p>
<p><img src="i6.jpeg" alt="&quot;後煞車&quot;" width="60%"></p>
<p><br>檔車：左腳打檔桿 升檔 (勾)</p>
<p><img src="i7.jpeg" alt="&quot;打檔桿 升檔&quot;" width="60%"></p>
<p><br>檔車：左腳打檔桿 降檔 (踩)</p>
<p><img src="i8.jpeg" alt="&quot;打檔桿 降檔&quot;" width="60%"></p>
<p></b></center></p>
<hr>
<h3 id="離合器-與-發動機">離合器 與 發動機</h3>
<p>了解了以上檔車的基本控制項後，就可以來開始講解離合器的作用原理，以下附上我<s>精湛的畫技下</s>產出的圖文講解。</p>
<img src="/2020/07/20/Motorcycle/1.png" class="">
<p>當車子還未發動時，所有零件都處於靜止狀態 (<s>會自己動你就要擔心了</s>)，車子一檔發動後，此刻發動機開始轉動，但<strong>離合器還是按壓狀態</strong> ，就會形成最<strong>左邊那張分離狀態的圖</strong> ，發動機 (褐色) 雖然在運轉，但因為離合器 (灰色) 還沒與其接合，所以離合器目前尚未開始運轉。</p>
<p>當慢慢鬆開離合器直到與發動機<strong>部份接合</strong>時，則會形成<strong>中間那張 &quot;半離合&quot; 狀態的圖</strong> ，此刻機車也因為離合器與發動機開始有了銜接，會開始慢慢往前移動，<strong>半離合</strong>的目的是要「 <strong>&quot;慢慢的&quot; 帶動離合器去適應發動機的轉速</strong> 」。如果在轉速靜止的狀態下，直接使離合器與發動機快速銜接 (離合器放太快)，跳過 &quot;半離合&quot; 狀態，基本上會直接<strong>熄火</strong> ，這也是大多數騎檔車的人會遇到的問題之一！因為運動定律的關係，<strong>運動中的發動機無法直接帶動靜止的離合器</strong> ，會導致<strong>轉速差太多</strong>而讓發動機卡住，進而停止運作。</p>
<p>當在半離合狀態時，正常來說機車會開始慢慢向前移動，這時候離合器開始跟發動機的轉速做磨合，當本身有一定的轉速後，這時釋放離合器，形成最右邊那張 &quot;密合&quot; 狀態的圖時，此刻發動機則會自然的帶動離合器開始運轉，起步成功！</p>
<hr>
<p>以下是網路上其他大大分享的圖。（<a href="http://cclinsbackyard.blogspot.com/2010/03/blog-post_25.html"><strong>圖取自此網站</strong></a>）</p>
 <center><b>離合器直接透過鏈條 (黑色虛線) 帶動輪軸。<br>將離合器接上引擎以取得動力。</b></center> <img src="/2020/07/20/Motorcycle/2.jpg" class="">
<hr>
<p><br><center><b>離合器 與 發動機 轉速差</b></center><br> <img src="/2020/07/20/Motorcycle/3.jpg" class=""></p>
<hr>
<h3 id="打檔大齒輪-與-小齒輪">打檔｜大齒輪 與 小齒輪</h3>
<p>在介紹打檔之前呢，必須要先說「 <strong>檔</strong> 」是用來幹麻的？</p>
<p>前面說到，打檔機車不像速克達的傳動方式，<strong>速克達</strong>採用的是 &quot;<strong> 皮帶</strong> &quot; 死死拖著輪軸跑的方式前進，而<strong>打檔機車</strong>則是的使用 &quot;<strong> 鏈條</strong> &quot;。鏈條兩邊連接齒輪，位於<strong>後輪輪軸那邊的齒輪大小是固定的</strong> ，我們改變的是另一端<strong>離合器那邊的齒輪大小</strong> ，<strong>檔位越小齒輪越小</strong> ，<strong>檔位越大則齒輪越大</strong>。<br>
說到這邊應該很多人會聯想到腳踏車…<br>
 沒錯，基本上打檔機車換檔跟腳踏車換檔原理是一樣的 (只是腳踏車是更改後方齒輪)。</p>
<hr>
<p>兩個齒輪之間透過鏈條運作，當機車以「一檔」在工作時 (剛剛說的<strong>檔位越小齒輪越小</strong>)，是以<strong>離合器的小齒輪帶動後方輪軸的齒輪</strong> ，所以此刻是「 <strong>小齒輪帶大齒輪</strong> 」的狀況，說到這裡回想一下國小的物理課，當「小齒輪帶大齒輪」的情況下，<strong>小的齒輪轉一圈，帶動後方的齒輪可能只有 3 分之 1 圈</strong> ，但同時也比較<strong>輕鬆</strong> ，適合用在<strong>起步</strong>。而當行進中轉速夠快，已經快要在該檔位的極限時 (轉速高的狀態)，此時若是想要繼續提速，則需要做「 <strong>升檔</strong> 」的動作。</p>
<p>檔位升高，齒輪變大，逐漸變成「 <strong>大齒輪帶小齒輪</strong> 」的狀況，此刻就是<strong>大的齒輪轉一圈，帶動後方齒輪可能一圈半</strong> ，處於<strong>帶動速度快</strong> ，但<strong>力量要求較大</strong> ，因此<strong>不適合使用高檔位起步</strong> ，容易因為<strong>力量要求過大</strong> ，<strong>扭力不夠</strong>的關係而<strong>熄火</strong>。而行徑中可以切換高檔位則是因為本身已經<strong>有一定的速度</strong> ，所以力量要求較大這點就可以被彌補。</p>
<p>而「降檔」基本上就是相反，用來減速，或者需要扭力大的場合 (例如：起步、爬坡)，若新手不熟練也可以待車子停下後，在原地做降檔動作 (停下降檔是為了下一次起步的準備，剛剛說了起步適合用高扭力的低檔位)。</p>
<hr>
<p><b style="color: red;">※ 以下「回油」指「收油門」，「補油」指「催油門」。</b></p>
<p><strong>升檔</strong>基本上操作為：</p>
<p><strong> <code>回油 =&gt; 壓離合 =&gt; 升檔 =&gt; 半離合 =&gt; 放離合</code> </strong></p>
<blockquote>
<ul>
<li>為什麼要先 <strong> <code>回油</code> </strong> ？
<ul>
<li>這是為了讓<strong>轉速下降</strong> ，以免換檔時<strong>轉速差太大</strong>。<br>
例如<strong>一檔升二檔</strong>來說，應該是以<strong>一檔高轉</strong>接<strong>二檔低轉</strong> ，所以需要 <strong> <code>收油門</code> </strong> 來使轉速降低，也就是說這個 <strong> <code>回油</code> </strong> 是「為了下個檔位而準備」的。<br>
若維持一樣的轉速升檔，則會變成<strong>一檔高轉</strong>接<strong>二檔高轉</strong> ，不僅會爆衝較危險以外，車體本身也會有明顯的頓挫，騎久了也很不舒服。</li>
</ul>
</li>
<li>機車已經有足夠的動能了，還需要 <strong> <code>半離合</code> </strong> 嗎？
<ul>
<li>其實正確來說整體動作是一瞬間的，從 <strong> <code>回油</code> </strong> 到 <strong> <code>放離合</code> </strong> 完成升檔的過程只需要 <strong>0.5 秒</strong>！(如果可以盡量<strong>避免 <code>半離合</code> </strong> 時間過長，這會<strong>磨損離合器片</strong>)</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<p><strong>降檔</strong>基本上操作為：</p>
<p><strong>中高速行徑中：</strong>  <strong> <code>回油 =&gt; 壓離合 =&gt; 降檔 =&gt; 半離合 =&gt; 補油 =&gt; 放離合</code> </strong></p>
<p><strong>低速行徑中：</strong>  <strong> <code>回油 =&gt; 壓離合 =&gt; 降檔 =&gt; 半離合 =&gt; 放離合</code> </strong></p>
<blockquote>
<ul>
<li>為什麼中<strong>高速行徑</strong>的情況下要 <strong> <code>補油</code> </strong> ？
<ul>
<li>這是因為在<strong>高檔位</strong>且<strong>具有一定的行徑速度</strong>時，<strong>後輪運轉速度快</strong> ，若是維持一樣的轉速 <strong> <code>降檔</code> </strong>  ，會造成<strong>後輪與發動機轉速差大</strong> (後輪快，發動機慢)。(退檔時避免轉速差大而 <strong> <code>補油</code> </strong>  ，就是常聽見的「<b style="color: red;">退檔補油</b>」)<br>
 舉例<strong>二檔降一檔</strong> ，應該是以<strong>二檔中低轉</strong>接<strong>一檔中高轉</strong> ，若是沒有在降檔後補油，則會變成<strong>二檔中低轉</strong>接<strong>一檔中低轉</strong> ，行徑間，<strong>後輪速度還維持在二檔</strong> ，卻突然降回一檔，<strong>離合器與發動機轉速差大</strong> ，<strong>卡住了離合器</strong> ，透過鏈條間接<strong>阻擋了後輪的運轉</strong> ，除了會感覺到明顯的<strong>頓挫感</strong>外，嚴重可能會導致<strong>後輪鎖死、打滑</strong>。(此指的轉速差所造成的煞車稱為「<b style="color: red;">檔煞</b>」)</li>
<li>但若是在<strong>低速</strong>的情況下則可以<strong>省略補油</strong>的動作，維持原速即可。</li>
<li>若是要將機車停下，也可以在完全停止後才做降檔的動作。</li>
</ul>
</li>
<li>為何不直接省略 <strong> <code>回油</code> </strong>  ，退檔後補更多的油不就好了？
<ul>
<li>當 <strong> <code>壓離合</code> </strong> 的時候，<strong>離合器</strong>與<strong>發動機</strong>的動能是<strong>分離</strong>的，若是固定一樣的油門，在分離的一瞬間<strong>轉速</strong>會<strong>飆高</strong> ，當然你可以在退檔後做<strong>退檔補油</strong>來配合轉速，但這不但較<strong>傷車</strong> ，也更容易發生因<strong>轉速配合不當</strong>而產生的<strong>轉速差意外</strong>。</li>
</ul>
</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>另外，與升檔一樣，<strong>降檔</strong>的動作從 <strong> <code>回油</code> </strong> 到 <strong> <code>放離合</code> </strong> 的過程是<strong>一瞬間</strong>的。</li>
</ul>
</blockquote>
<hr>
<h3 id="檔位模式">檔位模式</h3>
<p>懂了上述的原理後，來看看市面上的打檔模式吧。<br>
基本上檔車打檔模式分為兩種 —「 <strong>循環檔</strong> 」、「 <strong>國際檔</strong> 」。</p>
<hr>
<p><b style="color: red;">※ 以下都以<strong> 5 檔</strong>車來解說。</b></p>
<p>「 <strong>循環檔</strong> 」的檔位為<strong>迴圈式</strong>的：<br>
 <code>N &gt; 1 &gt; 2 &gt; 3 &gt; 4 &gt; 5 &gt; N &gt; 1 &gt; 2 ...</code></p>
<blockquote>
<ul>
<li>欸？數字的部份大家應該都了解了，那「 <strong>N</strong> 」是什麼意思？
<ul>
<li><strong>N</strong> 就是「 <strong>空檔</strong> 」，空檔的時候，不管怎麼摧油門<strong>車子都是不會動的</strong> ，此刻的<strong>離合器齒輪與發動機齒輪是斷開的</strong>。基本用在要<strong>停車</strong>的時候。</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<p>目前大多打檔機車為「 <strong>國際檔</strong> 」：<br>
 <code>1 &gt; N &gt; 2 &gt; 3 &gt; 4 &gt; 5</code></p>
<blockquote>
<p>這種設計可以清楚看到，並不像循環檔一樣有個迴圈。<br>
有別於循環檔的地方還有，<strong>空檔是在 1 檔跟 2 檔</strong>「 <strong>中間</strong> 」，進空檔的方法則為「 <strong>小力踩</strong> 」或「 <strong>小力勾</strong> 」。</p>
</blockquote>
<p>以下是網路上其他大大分享的圖，看了相信會更明白的。（<a href="https://timmy.pixnet.net/blog/post/1617378-%E5%9C%8B%E9%9A%9B%E6%AA%94%E5%92%8C%E5%BE%AA%E7%92%B0%E6%AA%94%E7%9A%84%E5%B7%AE%E5%88%A5"><strong>圖取自此網站</strong></a>）</p>
<img src="/2020/07/20/Motorcycle/4.gif" class="">
<img src="/2020/07/20/Motorcycle/5.jpg" class="">
<hr>
<h3 id="珍奶跟雞排要放哪">珍奶跟雞排要放哪？</h3>
<p>這也是檔車的一大痛點，因為檔車構造的緣故，大多數檔車是「 <strong>沒有車廂</strong> 」的！</p>
<p>有些檔車雖然有提供置物箱，但容量嘛… 大約只能放的下手機，若想加大空間，可以考慮加裝「 <strong>漢堡包</strong> 」或「 <strong>側掛包</strong> 」，攜帶的物品不多的話，也可以自己背個<strong>隨身背包</strong>上路。</p>
<p>(P.S. <strong>側掛包</strong>有個<strong>小缺點</strong> — 後座在上下車比較麻煩)</p>
<p><img src="bike-and-boat-motorcycle-tours-cjoPD3VRHIA-unsplash.jpg" alt="" width="70%"></p>
<hr>
<h3 id="結語">結語</h3>
<p>以上是我個人對於打檔機車的認知及觀念講解，若有錯誤請不吝嗇私訊通知。<br>
當然還有很多細節沒有提到，真的有興趣的朋友請再自行研究，我就不在此多做贅述。</p>
<p>另外我必須要說一件我個人覺得<strong>非常重要</strong>的心態：</p>
<blockquote>
<p>機車、汽車都一樣，別想說會駕駛就好，不必管原理。<br>
當你騎乘一個時速可達 100 公里的機械在路上奔馳，而你對它的構造渾然不知時，這不是件很恐怖的事情嗎…?</p>
</blockquote>
<p>這篇文章如果有幫助你更認識打檔機車的話，也別忘記分享給你身邊喜愛檔車的朋友吧！</p>
]]></content>
      <categories>
        <category>Popular-Science (科普)</category>
      </categories>
  </entry>
  <entry>
    <title>Mr.L — 我的啟蒙者</title>
    <url>/2020/01/06/MrL/</url>
    <content><![CDATA[<p>「寫程式好難啊…」我獨自坐在電腦桌前說著，那是我國三畢業後的假期。<br>
想想那段時間，我近三個月沒有與任何人說過話，腦裡已經被程式語言給佔領。</p>
<span id="more"></span>
<img src="/2020/01/06/MrL/title.jpg" class="">
<hr>
<h3 id="入坑">入坑</h3>
<p>我與很多小孩一樣從小不愛讀書，更是沒什麼過人的成就，當時「學校」對於我來說只是必須準時報到的「娛樂場所」，天天到學校去也是開開心心、無憂無慮，名副其實的「上課睡覺，下課尿尿」，偶爾再找點樂子闖個禍爽一下，一直是令家人及老師頭痛的問題兒童。<br>
偶然在國三畢業後的假期裡接觸了<a href="https://zh.wikipedia.org/wiki/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1" target="_blank">編程</a>，當初什麼也不懂，也不是特別感興趣，而且自己也先入為主的認為「這需要大量動腦的東西不適合我」，僅僅只是因為喜歡玩電腦而報考「資訊科」，想想電影裡的駭客寫程式的樣子也蠻帥的感覺。然而不知道是哪根筋作祟，這一學，居然近三個月就這麼過去了，回過神來，我忘了吃飯，忘了睡覺，幽暗的房間，只剩螢幕上滿滿來自程序錯誤的視窗以及一頭亂髮的男孩。</p>
<h3 id="社交障礙">社交障礙</h3>
<p>高中如願考上了資訊科，接觸了許多事物，但總是覺得少了點什麼，少的原來是能和我溝通的人。長時間的面對電腦，早讓我忘記了如何與人相處，我遇到了人生中的一大難題 — <a href="https://zh.wikipedia.org/wiki/%E7%A4%BE%E4%BA%A4%E6%81%90%E6%87%BC%E7%97%87" target="_blank">社交障礙</a>。我嘗試透過網路學習，結交許多圈內網友，他們熱心的與我討論所遇到的程式問題，也分享了許多有趣的資安事件，我終於在他們的幫助下解決了程式的錯誤，也好像在這樣的環境找到屬於我的一絲溫暖。日子一天天的過，學習的東西越來越難，對於從小沒有讀書習慣的我，即使再有興趣，也扛不住了，我開始厭煩、頹廢，直到… 我遇見了 Mr.L。<br>
L 先生的資訊能力非常強大，他是一個想到什麼說什麼的人，不做作，有著一套屬於自己獨特的學習系統、邏輯及思維，但也因此，在現實生活中顯的格格不入，是個時常受到排擠的對象，但我喜歡他這樣的個性。</p>
<h3 id="發現">發現</h3>
<p>撿到了這樣一塊不起眼的寶石，我真很幸運。在 L 先生的陪同下，我挖掘了更深入的技術，他手把手的教導我如何以正確的心態學習，面對難題時，又該如何去應對，不得不說，對於一個從小不用功的野孩子，「學習」兩個字真的很陌生，可以說是在這個時候，我才開始與這個詞擦上邊。<br>
然而正當我以為故事只是就此發展時，我意外的發現，L 先生不僅僅只是資訊技能強而已，在網絡的世界裡，他其實是大家口中的「駭客」，親眼目睹了他將一個網站給打掉，原本光鮮亮麗的頁面，轉眼間被置換成了搞笑的貓動圖，我驚訝的問他「你做了什麼！？」，然而他只是淡淡的回道「玩玩而已，怎麼？有興趣嗎？」，我呆呆的望著螢幕，耳機傳來 L 先生的呼喊「Yo~ 還在嗎？」，我慌忙著邊大力點頭回應道「有！我有興趣！教我！」。</p>
<h3 id="成型">成型</h3>
<p>一路跟著 L 先生的腳步，也希望有天能超越他，存在這麼強大的人成了我的學習動力，更何況… 誰又能想像，當初的 L 先生居然僅僅只是個國小生。</p>
<hr>
<p>我： 什麼！？你居然才國小！？WTF<br>
L：欸不是，我說你啊… 別看不起國小生，學習、能力跟年紀沒有直接關係。</p>
]]></content>
      <categories>
        <category>Writing (文學創作)</category>
      </categories>
      <tags>
        <tag>Composition (作文)</tag>
      </tags>
  </entry>
  <entry>
    <title>拋棄式信箱、手機號碼｜匿名接收簡訊，避開垃圾郵件及騷擾！</title>
    <url>/2020/08/21/One-Off-Service/</url>
    <content><![CDATA[<p><strong>垃圾信件</strong>氾濫，手機號碼在<strong>廣告</strong>名單上流動。<br>
使用這些服務，讓你的<strong>電子郵件</strong>、<strong>手機</strong>不再受到<strong>廣告的轟炸</strong>！</p>
<span id="more"></span>
<hr>
<h3 id="前言">前言</h3>
<p>許多網站會要求在<strong>註冊</strong>時使用<strong>電子郵件</strong>作為<strong>帳號</strong>，甚至有些會要求提供<strong>手機號碼</strong>以傳送<strong>驗證碼</strong>認證，而這些常見的動作也正是為什麼你的<strong>手機</strong>及<strong>信箱</strong>會有<strong>一堆廣告</strong>的主因之一。<br>
你永遠不知道，這些服務在<strong>收集了使用者的資料</strong>後，是否會<strong>將這些資料販賣給廣告商</strong>！</p>
<p>因此為了避免<strong>手機號碼</strong>及<strong>信箱</strong>在網絡上流動的太頻繁，在不必要使用真實資料的場合，建議可以使用<strong>替代</strong>的資料！也正是本文所介紹的這些服務！</p>
<hr>
<h3 id="一次性信箱">一次性信箱</h3>
<p>「<strong>一次性信箱</strong>」顧名思義就是採<strong>拋棄式</strong>的使用方式。通常使用在<strong>此刻需要收信，但未來不希望對方向我寄信</strong>的場合。例如<strong>辦理遊戲帳號</strong>，但又<strong>不希望將來收到該遊戲的廣告郵件</strong>，這時<strong>一次性信箱</strong>就派上用場了！通常信箱將在 <strong>10 分鐘</strong>、<strong>半小時</strong>、<strong>一天</strong>後失效，取決於不同服務的設計。<br>
不過需要注意的是，若是使用一次性信箱註冊帳戶，由於<strong>將來無法再次使用同一個信箱</strong>，因此可能會造成無法正常使用<strong>忘記密碼</strong>的功能。</p>
<hr>
<blockquote>
<ul>
<li><strong>10 分鐘信箱</strong>
<ul>
<li>網址：<a href="https://10minutemail.net">https://10minutemail.net</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/01.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>10 Minute Mail</strong>
<ul>
<li>網址：<a href="https://10minutemail.com/">https://10minutemail.com/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/02.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>MAILNESIA</strong>
<ul>
<li>網址：<a href="http://mailnesia.com/">http://mailnesia.com/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/03.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>Guerrilla</strong>
<ul>
<li>網址：<a href="https://www.guerrillamail.com/">https://www.guerrillamail.com/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/04.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>Temp-Mail</strong>
<ul>
<li>網址：<a href="https://temp-mail.org/">https://temp-mail.org/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/05.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>Mailinator</strong>
<ul>
<li>網址：<a href="https://www.mailinator.com/">https://www.mailinator.com/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/08.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>Dispostable</strong>
<ul>
<li>網址：<a href="https://www.dispostable.com/">https://www.dispostable.com/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/09.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>myTrash Mail</strong>
<ul>
<li>網址：<a href="http://www.mytrashmail.com/">http://www.mytrashmail.com/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/10.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>Mint Email</strong>
<ul>
<li>網址：<a href="https://www.mintemail.com/">https://www.mintemail.com/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/11.png" class="">
<hr>
<h3 id="代理信箱">代理信箱</h3>
<p>若是需要<strong>長期接收信件</strong>，但又<strong>不希望向對方提供自身真實的電子郵件地址</strong>，那或許可以考慮看看「<strong>代理信箱</strong>」。該服務運作原理很簡單，一般情況下，<strong>A 方</strong>寄信給 <strong>B 方</strong>為 <strong> <code>A =&gt; B</code> </strong> 直接寄送的方式，而<strong>代理</strong>信箱則是像 <strong> <code>A =&gt; 代理 =&gt; B</code> </strong> ，等同於幫你擔任<strong>中間人</strong>的角色，因此可以在不給對方真實電子郵件地址時收信。<br>
不過要注意的是，許多代理信箱服務是<strong>不支援寄信</strong>的，也就是只能收信，若有回覆的需求可能需要斟酌使用。</p>
<hr>
<blockquote>
<ul>
<li><strong>Jetable</strong>
<ul>
<li>網址：<a href="https://www.jetable.org/">https://www.jetable.org/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/06.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>Spamgourmet</strong>
<ul>
<li>網址：<a href="https://www.spamgourmet.com/">https://www.spamgourmet.com/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/07.png" class="">
<hr>
<h3 id="一次性手機號碼">一次性手機號碼</h3>
<p>與一次性信箱同樣概念，只是是用於<strong>手機接收簡訊</strong>使用。<br>
雖然說是<strong>一次性</strong>手機號碼，但<strong>號碼存活時間會比一次性信箱來的更久</strong>，不過由於號碼隨時可能會不見，因此不建議使用在<strong>需要接收重要簡訊</strong>的場合。<br>
需要注意的是，由於<strong>號碼是公佈在網絡上的</strong>，因此<strong>該號碼所接收到的簡訊</strong>等同是<strong>公開</strong>的，若是用於接收較隱私得訊息，可能會帶來不必要的麻煩。</p>
<hr>
<blockquote>
<ul>
<li><strong>Receive SMS Online</strong>
<ul>
<li>網址：<a href="https://www.receivesmsonline.net/">https://www.receivesmsonline.net/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/12.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>Free Online Phone</strong>
<ul>
<li>網址：<a href="https://www.freeonlinephone.org/">https://www.freeonlinephone.org/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/13.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>Receive-SMS Online</strong>
<ul>
<li>網址：<a href="https://receive-sms.com/">https://receive-sms.com/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/14.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>Receive FREE SMS Online</strong>
<ul>
<li>網址：<a href="http://receivefreesms.com/">http://receivefreesms.com/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/15.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>Receive SMS Online</strong>
<ul>
<li>網址：<a href="http://receive-sms-online.com/">http://receive-sms-online.com/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/16.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>Sellaite</strong>
<ul>
<li>網址：<a href="http://sms.sellaite.com/">http://sms.sellaite.com/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/17.png" class="">
<hr>
<blockquote>
<ul>
<li><strong>Receive SMS Online</strong>
<ul>
<li>網址：<a href="https://hs3x.com/">https://hs3x.com/</a></li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/08/21/One-Off-Service/18.png" class="">
]]></content>
      <categories>
        <category>Service (服務分享)</category>
      </categories>
  </entry>
  <entry>
    <title>「𝝿」是什麼？度、弧度又是...？</title>
    <url>/2021/06/09/PI/</url>
    <content><![CDATA[圓周率「𝝿」是什麼？而熟悉的一圈為 360度 是怎麼被訂定的？ 弧度又是什麼？
<span id="more"></span>
<hr>
<h2 id="圓周率π">圓周率「𝝿」</h2>
<p>圓周率<strong>約</strong>為「 <code>3.1415926</code> 」，它被歸類在<a href="https://zh.wikipedia.org/wiki/%E6%95%B0%E5%AD%A6%E5%B8%B8%E6%95%B0"><strong>常數</strong></a>中，且是<a href="https://zh.wikipedia.org/wiki/%E7%84%A1%E7%90%86%E6%95%B8"><strong>無理數</strong></a>，是個 <code>無限不循環小數</code> 同時也是一個<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E8%B6%8A%E6%95%B8"> <code>超越數</code> </a>，數學用小寫希臘字母「 <code>𝝿</code> 」符號表示，發音相似於「 <code>pie</code> 」，源自希臘語「 <code>περίμετρος</code> ( <code>周長</code> )」的首字母。</p>
<hr>
<h2 id="圓周率的意思是">圓周率的意思是？</h2>
<p>圓周率讓人感覺很抽象，但其實就只是指「<strong>一半的圓周</strong>與<strong>半徑</strong>之<strong>比</strong>」，又或者可以說是「<strong>圓周</strong>與<strong>直徑</strong>之<strong>比</strong>」。也就是代表一圓的 <code>周長</code> 與 <code>直徑</code> 的 <code>比例關係</code>  ( <code>比值</code> )。</p>
<p>由於 <code>周長</code> 是該圓 <code>直徑</code> 的 <code>3.1415926....</code>  倍，因此將這個無理數定義成「 <code>𝝿</code> 」符號，命名為 <code>圓周率</code> 。所以才會出現 <code>周長</code> 算 <code>圓周長</code> 的公式「 <code>2r 𝝿</code> 」。( <code>r</code>  為半徑)</p>
<hr>
<h2 id="degree-與-radian">degree 與 radian</h2>
<p><code>degree</code>  與  <code>radian</code>  都是表示 <code>角</code> 的大小，將其 <code>單位量化</code> 後的表示方式。</p>
<p>其中較常被使用的是「 <code>degree</code> 」也就是所謂的「 <code>度</code> 度量」，簡稱「 <code>deg</code> 」。(e.g. 一圈等於 360 deg)<br>
 而「 <code>radian</code> 」中文翻譯為「 <code>弧度</code> 」或者「 <code>弳度</code> 」，簡稱「 <code>rad</code> 」。<br>
其中「 <code>弳</code> 」這個字很有趣，它是<strong>弧度</strong>的「 <code>弧</code> 」與<strong>半徑</strong>的「 <code>徑</code> 」取字旁而選的字。</p>
<hr>
<h2 id="圓弧-產生出-角度單位">圓弧 產生出 角度單位</h2>
<p>一開始的圓在訂定角度單位之前，先稱某角為  <code>theta</code> ，該圓半徑為  <code>r</code> ，而  <code>theta</code>  與某弧長  <code>S</code>  與  <code>r</code>  有絕對的 <code>比例關係</code> ，這個才是一切的<strong>重點</strong>…</p>
<p>「角  <code>theta</code>  對  <code>S</code>  與  <code>r</code>  之間的 <code>比例關係</code> 」才是這些<strong>角度單位</strong>的指標。(當 <code>半徑 r 相同</code> ，且 <code>弧長 S 越長</code> ，則  <code>角 theta 越大</code> )</p>
<blockquote>
<ul>
<li><strong>弳 (radian, rad)</strong><br>
 得到了比例「 <code>S / r</code> 」後… 欸等等！這麼一來不就是一個 <code>單位量</code> 了嗎？<br>
對的，這個 <code>單位量</code> 就命名做「 <code>radian</code> 」簡稱「 <code>rad</code> 」中文稱作「 <code>弳</code> 」。<br>
因此 <code>角 theta</code>  可以表示成「 <code>theta = S / r</code> 」即是使用 <code>弳度</code> 表示該  <code>theta</code>  角的大小。<br>
就這樣，現在大家所使用的「 <code>弧度</code> 」被定義了， <code>弧</code> 衍生出了表示 <code>角大小</code> 的 <code>單位量</code> 。</li>
</ul>
<p>若定義 <code>圓弧 S</code>  為 <code>圓周長</code> ，可以寫成「 <code>S = 2r 𝝿</code> 」。<br>
因此將表示 <code>角大小</code> 的 <code>弳度</code> 式子「 <code>theta = S / r</code> 」寫作「 <code>theta = (2r 𝝿) / r</code> 」化簡得「 <code>theta = 2 𝝿</code> 」。因此 <code>一周角</code> 相當於「 <code>2 𝝿</code> 」單位  <code>rad</code>  。</p>
</blockquote>
<blockquote>
<ul>
<li><strong>度 (degree, deg)</strong><br>
 若我們將 <code>圓周長 S</code>  劃分成  <code>360 等分</code> <br>
並且將其中 <code>一等份</code> 所對應的 <code>角度大小</code> 當作一個 <code>單位</code> ，這單位就叫做 <code>degree</code>  簡稱 <code>deg</code> ，也就是大家目前常用的 <code>度</code> 度量。<br>
 <code>1 deg</code>  也可以寫作 「 <code>1°</code> 」，所對應的弧長為  <code>(2 𝝿 / 360) / r</code> 。</li>
</ul>
</blockquote>
<hr>
<h2 id="補充">補充</h2>
<blockquote>
<h4 id="梯度-gradian-grad">梯度 (Gradian, GRAD)</h4>
<p>這也是一個單位，其定義為 <code>一圓周長</code> 平均分為  <code>400</code>  等分，每一等份為  <code>1 grad</code>  。<br>
由於寫在這是因為，這東西真的比較少人在用，就不聚焦在這了。</p>
</blockquote>
<blockquote>
<h4 id="換算">換算</h4>
<p><strong> <code>一周角</code> </strong> = <strong> <code>360 deg</code> </strong> = <strong> <code>2 𝝿 rad</code> </strong> = <strong> <code>400 grad</code> </strong></p>
</blockquote>
<blockquote>
<h4 id="無單位">無單位</h4>
<p>有些人不能理解為什麼說  <code>deg</code>  與  <code>rad</code>  是 <code>無單位</code> 的… (<s>對就是我</s>)<br>
 就好比常見的寬螢幕 <code>長寬比</code> 為「 <code>16:9</code> 」，試問  <code>16</code>  與  <code>9</code>  的單位是什麼一樣。<br>
「 <code>S / r</code> 」該算式只是用來表示 <code>圓周長</code> 與 <code>半徑</code> 之間的比例關係，自然就不需要有 <code>單位</code> 。</p>
</blockquote>
<hr>
<h2 id="參考資料">參考資料</h2>
<p>《Wiki 維基百科 - 圓周率》<a href="https://zh.wikipedia.org/wiki/%E5%9C%93%E5%91%A8%E7%8E%87">https://zh.wikipedia.org/wiki/ 圓周率</a></p>
]]></content>
      <categories>
        <category>Learning (學習筆記)</category>
        <category>Math</category>
      </categories>
      <tags>
        <tag>𝝿 (圓周率)</tag>
      </tags>
  </entry>
  <entry>
    <title>PRISM (稜鏡計劃)｜政府監控人民網絡的陰謀！</title>
    <url>/2020/02/27/PRISM(%E7%A8%9C%E9%8F%A1%E8%A8%88%E5%8A%83)/</url>
    <content><![CDATA[<p>如果說，政府監控你的一切網絡活動，甚至你的私生活，並告訴你這是為了你的安全，你能接受嗎？</p>
<span id="more"></span>
<hr>
<h3 id="前言">前言</h3>
<p>資訊圈內的朋友應該多少聽過「 <strong>史諾登</strong> 」這個名字吧！<br>
那麼你必須知道歷史上，一個與該人物有著重大關聯的「 <strong>稜鏡計劃</strong> 」。<br>
一個關於隱私及網絡自由的事件。</p>
<p>如果你還不知道誰是 <strong>Edward Joseph Snowden (愛德華・約瑟夫・史諾登)</strong> ，建議請先觀看我上一篇簡單介紹該人物的文章 - 「<strong><a href="/2020/02/27/Snowden/" title="Edward Joseph Snowden (愛德華·約瑟夫·史諾登)｜賭上自己的一生，只為揭露政府祕密監控人民的醜聞！">Edward Joseph Snowden (愛德華·約瑟夫·史諾登)｜賭上自己的一生，只為揭露政府祕密監控人民的醜聞！</a></strong>」。</p>
<hr>
<h3 id="prism-稜鏡計劃">PRISM (稜鏡計劃)</h3>
<img src="/2020/02/27/PRISM(%E7%A8%9C%E9%8F%A1%E8%A8%88%E5%8A%83)/Stylized_eye.svg" class="" title="PRISM">
<p>「 <strong>PRISM (稜鏡計劃)</strong> 」，正式名稱為「 <strong>US-984XN</strong> 」。<br>
為一項由 <a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9B%BD%E5%9B%BD%E5%AE%B6%E5%AE%89%E5%85%A8%E5%B1%80"><strong>NSA (美國國家安全局)</strong></a> 自<strong> 2007 年</strong>開始實施的<strong>絕密級網絡監控計劃</strong> 。</p>
<p>根據報導，泄露的文件中描述 PRISM 計劃能夠對<strong>即時通信</strong>和<strong>既存資料</strong>進行<strong>深度的監聽</strong> 。許可的監聽對象包括<strong>任何在美國以外地區使用參與計劃公司服務的客戶</strong> ，或是<strong>任何與國外人士通信的美國公民</strong> 。<br>
在該計劃中，NSA 可以獲得<strong>數據電子郵件、視訊和音語交談、影片、照片、VoIP 交談內容、檔案傳輸、登入通知，以及社群網路細節</strong> ，並透過各種聯網裝置，如 <strong>空氣內之奈米機器人、智慧型手機、電子式手錶等</strong> 各式聯網裝置對於特定目標<strong>進行攻擊</strong> 。</p>
<p>該計畫的前身是 <a href="https://zh.wikipedia.org/wiki/%E4%B9%94%E6%B2%BB%C2%B7%E6%B2%83%E5%85%8B%C2%B7%E5%B8%83%E4%BB%80"><strong>George Walker Bush (喬治・沃克・布希，小布希)</strong></a> 任內在<a href="https://zh.wikipedia.org/wiki/%E4%B9%9D%E4%B8%80%E4%B8%80%E4%BA%8B%E4%BB%B6"><strong>九一一事件</strong></a>後的<strong>恐怖分子監聽計劃 (Terrorist Surveillance Program)</strong> 。</p>
<p>在當時這個計劃曾遭到廣泛批評，且其合法性因未經過 <strong>外國情報監視法庭 (Foreign Intelligence Surveillance Court)</strong> 批准而受到質疑，但之後的 PRISM 則得到了該法庭的授權令。在 <a href="https://zh.wikipedia.org/wiki/%E5%B7%B4%E6%8B%89%E5%85%8B%C2%B7%E6%AC%A7%E5%B7%B4%E9%A9%AC"><strong>Barack Obama (巴拉克・歐巴馬)</strong></a> 任內，國家安全局持續運作 PRISM。</p>
<p>PRISM 的年度花費約為 2000 萬美元。</p>
<hr>
<h3 id="參與-prism-計畫的知名科技公司">參與 PRISM 計畫的知名科技公司</h3>
<p>根據洩漏的文檔發現，數家科技公司參與了 PRISM 計劃。</p>
<p>包括 <strong><a href="https://zh.wikipedia.org/wiki/%E5%BE%AE%E8%BD%AF">Microsoft (微軟)</a> (2007 年)、<a href="https://zh.wikipedia.org/wiki/%E9%9B%85%E8%99%8E">Yahoo! (雅虎)</a> (2008 年)、<a href="https://zh.wikipedia.org/wiki/Google">Google</a> (2009 年)、<a href="https://zh.wikipedia.org/wiki/Facebook">Facebook</a> (2009 年)、Paltalk (2009 年)、<a href="https://zh.wikipedia.org/wiki/YouTube">YouTube</a> (2010 年)、<a href="https://zh.wikipedia.org/wiki/Skype">Skype</a> (2011 年)、<a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9B%BD%E5%9C%A8%E7%BA%BF">AOL (美國在線)</a> (2011 年)，以及 <a href="https://zh.wikipedia.org/wiki/%E8%98%8B%E6%9E%9C%E5%85%AC%E5%8F%B8">Apple (蘋果公司)</a> (2012 年)</strong> 。此外，<a href="https://zh.wikipedia.org/wiki/Dropbox"><strong>Dropbox</strong></a> 也被指控「即將加入」這項計劃。</p>
<p>以下這些單位也回應到：</p>
<blockquote>
<ul>
<li><strong>Facebook</strong><br>
<em><strong> 我們向任何機構提供對 Facebook 伺服器的直接訪問。當 Facebook 收到有關個人信息的請求時，我們會不審慎的審查這類請求以確保其符合所有適用法律，並只在法律要求的限度內提供信息。</strong></em></li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>
<p><strong>Google</strong><br>
<em><strong>Google 深切地關心用戶數據的安全性。我們依據法律向政府透露用戶資料，並認真評估所有的這類要求。人們有時聲稱我們在自己的系統內設置了政府後門，但 Google 只為政府訪問用戶私人資料而設置的後門。</strong></em></p>
<p>Google 也另外在其官方網誌上發表了由該公司執行長和首席法務官聯合署名的文章，稱「<em><strong>我們沒有加入任何給予美國政府 (或是任何其他政府) 對我們伺服器直接訪問的計劃</strong></em>」。</p>
</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>Apple (蘋果公司)</strong><br>
<em><strong> 我們從未聽說過 PRISM 。我們不對任何政府機構提供對我們伺服器的直接訪問，並且任何對客戶數據提出請求的政府機構都必須得到法庭的核准。</strong></em></li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>Microsoft (微軟)</strong><br>
<em><strong> 我們只有在收到具有法律效力的命令或傳票時才會提供客戶數據，從不會主動提供。另外，我們只會遵從有關特定帳戶或標識符的請求。如果政府有更大範圍收集客戶數據的自願參與計劃，我們不會參與到其中。</strong></em></li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>Yahoo! (雅虎)</strong><br>
<em><strong> 雅虎十分認真地對待用戶隱私。 我們不對政府提供對我們的伺服器、系統、或網絡的直接訪問。</strong></em></li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>Dropbox</strong><br>
<em><strong> 目前為止我們看到了一些報導指稱 Dropbox 可能被要求參與一項名為 PRISM 的政府計劃。我們不是任何類似計劃的一部分，並繼續致力於保護我們用戶的隱私。</strong></em></li>
</ul>
</blockquote>
<p><a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E8%81%94%E7%A4%BE">美聯社</a>形容這些公司的聲明經過「字斟句酌」（carefully worded），且並不排除國家安全局持續收集在線通信內容的可能性。此外，矽谷大公司試圖公布有關這些項目的更多信息。Google 要求美國政府允許其公開聯邦法庭密令的數量和範圍。Twitter 和微軟等科技公司都對此舉表示聲援。</p>
<p>而該計畫參與的國家也包含<a href="https://zh.wikipedia.org/wiki/%E8%8B%B1%E5%9B%BD"><strong>英國</strong></a>。<br>
英國的 <strong>政府通信總部 (GCHQ，與美國國家安全局對應的 <a href="https://zh.wikipedia.org/wiki/%E4%BF%A1%E5%8F%B7%E6%83%85%E6%8A%A5">SIGINT (信號情報)</a> 機構)</strong> 最早從 <strong>2010 年 6 月起</strong> 就能訪問 PRISM 系統，並在 <strong>2012 年</strong> 使用該計劃的數據撰寫了<strong> 197</strong> 份報告。PRISM 讓 GCHQ 得以繞過正式法律手續來取得所需的個人資料。</p>
<hr>
<h3 id="yahoo-雅虎-聲明表示受到-nsa-威脅">Yahoo! (雅虎) 聲明表示受到 NSA 威脅</h3>
<p><strong>2007 年</strong> 和 <strong>2008 年</strong> ，美國政府曾<strong>威脅</strong>雅虎：<em><strong>如果雅虎不按照 NSA (美國國安局) 的棱鏡計劃要求，向其繳交網站的使用者資料，那麼將受到政府每日 25 萬美元的罰款處罰。</strong></em></p>
<p><strong>2014 年 9 月 12 日</strong> ，雅虎官方發表了一份聲明，證實了這份長達<strong> 1500</strong> 頁的法庭文件的存在。從這份聲明中可以看出，最終雅虎還是成為向棱鏡計畫提供使用者資料的公司之一。</p>
<hr>
<h3 id="總結">總結</h3>
<p>該事件是因為史諾登的努力而被公開，這只是眾多祕密計畫中的一小部份，有沒有可能有著其他尚未被洩漏的可怕計畫？一舉一動都受到監控，相信沒有人願意如此。</p>
<p>當然，官方也有自己的說法：「 <strong>這可以降低許多恐怖攻擊、犯罪事件，提前發現並預防，從人民那收集來的資料也只有在你需要被調查的時候才會被查詢，平時並不會去觀看。</strong> 」，其實我個人覺得這點是有道理的，但別忘了，政府並不是神，也<strong>沒有權利</strong>去監控人民的隱私，相反的，政府應該是<strong>受到人民監督</strong>的。</p>
<p>對了，關於史諾登以及該計畫的故事有被拍成電影《 <strong>Snowden (神鬼駭客：史諾登)</strong> 》，有興趣的朋友可以看看。</p>
]]></content>
      <categories>
        <category>Information (資訊分享)</category>
      </categories>
      <tags>
        <tag>Hacker (駭客)</tag>
        <tag>CIA (美國中央情報局)</tag>
      </tags>
  </entry>
  <entry>
    <title>八二法則 真正的意義是什麼？</title>
    <url>/2021/06/13/Pareto-Principle/</url>
    <content><![CDATA[在許多地方都能看見八二法則，但你可能不明白它所表達的含意。重點不在八與二，重點在於找出關鍵。
<span id="more"></span>
<hr>
<h2 id="pareto-principle">Pareto Principle</h2>
<p>義大利的 <code>經濟學</code> 家「<a href="https://zh.wikipedia.org/zh-tw/%E7%BB%B4%E5%B0%94%E5%BC%97%E9%9B%B7%E5%A4%9A%C2%B7%E5%B8%95%E7%B4%AF%E6%89%98"> <code>Vilfredo Federico Damaso Pareto (維爾弗雷多·柏拉圖)</code> </a>」偶然的發現，在義大利  <code>80%</code>  的土地為  <code>20%</code>  的所有者掌控。隨著觀察的事物越多，越是發現遵循該比例的事件也越多。<br>
後人將其稱作「 <code>Pareto Principle</code> 」中文為「 <code>柏拉圖法則</code> 」，也被稱作「 <code>八二法則</code> 」、「 <code>80/20 法則</code> 」、「 <code>關鍵少數原則</code> 」。</p>
<hr>
<h2 id="被-20-的變因操縱著-80-大局">被 20% 的變因，操縱著 80% 大局</h2>
<p><img src="01.jpg" alt=""><br>
 <code>8：2</code>  是個神奇的比例。<br>
約  <code>8 成</code> 的<strong>財富</strong>被  <code>2 成</code> 的<strong>富人</strong>掌握；<br>
約  <code>8 成</code> 的<strong>土地</strong>歸  <code>2 成</code> 的<strong>地主</strong>所管；<br>
約  <code>8 成</code> 的<strong>公司利潤</strong>來自  <code>2成</code> 的<strong>顧客</strong>；<br>
甚至是<strong>人體</strong>中水分約佔  <code>8 成</code> ，其餘約  <code>2 成</code> 。</p>
<p>該論點所貫徹的重點在於，大部分的事物中，找出關鍵的因素，則通常 <code>重要的因素</code> 為 <code>少數</code> ， <code>不重要的因素</code> 為 <code>多數</code> 。因此， <code>控制</code> 那 <code>少數的重要因素</code> 成了 <code>核心的關鍵</code> 。</p>
<p>許多時候，掌握少數的重要因素，比起掌握多數的不重要因素來的更加重要。</p>
<hr>
<h2 id="管理學-教你用人使用八二法則">管理學 教你用人使用八二法則</h2>
<p><code>管理者</code> 會希望 <code>部屬</code> 的 <code>工作能力</code> 要好，做事的 <code>效率</code> 越高越好。<br>
但準確的說，應該是， <code>管理者</code> 希望在 <code>付出相同薪資</code> 的情況下， <code>部屬</code> 的 <code>工作效率</code> 高過其他員工。一旦部屬的 <code>工作效率</code> 從茫茫人海中脫穎而出，這時候 <code>八二法則</code> 就會讓 <code>管理者</code> 了解了 <code>八成</code> 與 <code>兩成</code> 的人在哪。</p>
<hr>
<h2 id="經濟學-這麼說">經濟學 這麼說</h2>
<p>若以 <code>經濟學</code> 的角度來解釋 <code>八二法則</code> 的話，通常會以「 <code>如何以最少的付出，獲取最大的利益</code> 」來當作核心話題討論。<br>
比他人 <code>少量</code> 的 <code>付出</code> ， <code>賺取</code> 與他人 <code>相同甚至更多</code> 的 <code>利益</code> 。<br>
一個企業家如何抓住 <code>兩成</code> 的 <code>大商機</code> ？<br>
放眼望去的 <code>客群</code> ，只有 <code>兩成</code> 可能成為你的 <code>顧客</code> ，怎麼找出這 <code>兩成</code> ？</p>
<hr>
<h2 id="計算機科學-debug">計算機科學 Debug</h2>
<p>系統中所存在的 <a href="https://zh.wikipedia.org/zh-tw/%E7%A8%8B%E5%BA%8F%E9%94%99%E8%AF%AF"> <code>Bug</code> </a> 中，許多時候是因為 <code>連鎖反應</code> 形成的，若能找出 <code>關鍵的錯誤</code> ，優先解決主要的 <code>兩成</code> ，剩下 <code>八成</code> 出現錯誤的地方也將迎刃而解。</p>
<hr>
<h2 id="反向思考">反向思考</h2>
<p>前面都只是在說，如何以掌握 <code>兩成</code> 的關鍵因素來獲得利益，但反觀若是為了 <code>改善負面影響</code> 而用八二法則，那麼也是行得通的。<br>
簡單的舉例，一個人在某方面的 <code>處事</code> 非常 <code>失敗</code> ，可能的 <code>原因</code> 有 <code>很多種</code> ，若要短時間內 <code>改善所有原因</code> 可能十分困難。 <code>八二法則</code> 讓他知道，他需要找出那 <code>兩成</code> 造成 <code>失敗的最大主因</code> ，其餘的 <code>八成</code> 相對上並沒有那麼重要，這才是解決問題的思考方向。</p>
<hr>
<h2 id="你也應該使用">你也應該使用</h2>
<p>千萬不要覺得這些與你的生活無關！<br>
 <code>八二法則</code> 真正希望人們 <code>學習</code> 的是，「如何找出那<strong>兩成</strong>」的 <code>思考過程</code> 。<br>
說是 <code>理論</code> ，更多的是在說處事的 <code>態度</code> 。</p>
<p>試著在日常生活中多運用<strong>八二法則</strong>，深入的了解說不定對你的人生有著未知的改變。</p>
<p><img src="02.jpg" alt=""></p>
<hr>
<h2 id="參考資料">參考資料</h2>
<ul>
<li>《Wiki - 柏拉圖法則》<a href="https://zh.wikipedia.org/zh-tw/%E5%B8%95%E7%B4%AF%E6%89%98%E6%B3%95%E5%88%99">https://zh.wikipedia.org/zh-tw/ 帕累托法则</a></li>
</ul>
]]></content>
      <categories>
        <category>Concept (概念分享)</category>
      </categories>
  </entry>
  <entry>
    <title>用手機賺 Pi 幣，趁現在還免費趕快挖！(詳細圖文教學)</title>
    <url>/2021/01/11/Pi-Coin-APP/</url>
    <content><![CDATA[<p>上一篇我們了解了什麼是 <strong>Pi Coin (Pi 幣)</strong> 也了解了 <strong>Pi Network</strong> 其運作政策及流程，這篇文章將教你如何<strong>實際入場</strong>！跟我一起踏入 Pi Coin 的市場吧！</p>
<span id="more"></span>
<h2 id="前言">前言</h2>
<p>如果你還不知道 <strong>Pi Coin (Pi 幣)</strong> 是什麼，可以先觀看我的上一篇文章「<strong><a href="/2021/01/09/Pi-Coin/" title="Pi 幣是什麼？數位貨幣「π」到底是韭菜傳說，還是改寫歷史的神話！？">Pi 幣是什麼？數位貨幣「π」到底是韭菜傳說，還是改寫歷史的神話！？</a></strong>」！</p>
<hr>
<h2 id="下載-安裝-app">下載 / 安裝 APP</h2>
<p>開始用手機挖礦之前，當然要先安裝所對應的軟體！<br>
現在不論是 Apple 或 Android 都可以使用該 APP 進行水龍頭式的挖礦。</p>
<blockquote>
<p>首先進入這個網站「 <strong><a href="https://minepi.com">https://minepi.com</a></strong> 」<br>
你應該會看到以下畫面：</p>
<p><img src="download-01.jpg" alt="" height="600px"></p>
<p>點擊「<strong>Download App</strong>」後會看到以下畫面：<br>
你可以直接下載 <strong>apk</strong> 安裝，又或者到 <strong>Google Play</strong> 安裝。<br>
(建議到 <strong>Google Play</strong> 安裝。<strong>Apple</strong> 用戶請使用 <strong>Apple Store</strong>)</p>
<p><img src="download-02.jpg" alt="" height="600px"></p>
<p>下載後安裝並開啟程式，接著我們到下一步。</p>
</blockquote>
<hr>
<h2 id="註冊帳號">註冊帳號</h2>
<blockquote>
<p>可以選擇用 <strong> <code>Facebook (臉書)</code> </strong> 或者 <strong> <code>手機號碼</code> </strong> 登入。<br>
這邊建議用 <strong> <code>手機號碼</code> </strong>：</p>
<p><img src="signup-01-phone-login.jpg" alt="" height="500px"></p>
</blockquote>
<hr>
<blockquote>
<p>記得選擇自己<strong>地區</strong>門號的<strong>代碼</strong> (例如.<strong> 台灣 +886</strong>)，之後輸入手機號碼：</p>
<p><img src="signup-02-phone-number.jpg" alt="" height="500px"></p>
</blockquote>
<hr>
<blockquote>
<p>之後設定密碼 (不能忘記，否則之後可能<strong>無法提款</strong>、<strong>交易</strong>)：</p>
<p><img src="signup-03-password.jpg" alt="" height="550px"></p>
<p>如果你看到如下的錯誤，則代表你的密碼不符合官方所規定的格式！<br>
必須要  <code>8 個字以上</code> ，並且至少包含 1 個  <code>數字</code>  及 1 個  <code>小寫英文</code>  及 1 個  <code>大寫英文</code> 。</p>
<p><img src="signup-04-password-error.jpg" alt="" style="height: 75vh;"></p>
</blockquote>
<hr>
<blockquote>
<p>名稱必須填寫  <code>英文</code>   <code>真實姓名</code>  (與護照上相同)<br>
 若不清楚的可以到 <a href="https://www.boca.gov.tw/sp-natr-singleform-1.html"><strong>外交部領事事務局 (翻譯中文名)</strong></a> 做查詢</p>
<p>上一篇文章有提到，官方在之後會強制做 <strong>KYC 認證</strong>，若此時<strong>名稱亂填</strong>，到時候帳號則<strong>無法認證</strong>。<br>
另外要注意的是，英語語系的關係，「<strong> <code>First Name</code> </strong>」為「<strong> <code>名</code> </strong>」，「<strong> <code>Last Name</code> </strong>」才是「<strong> <code>姓</code> </strong>」，不要搞混了。</p>
<p>用戶名用於  <code>邀請他人</code> 、 <code>交易</code>  等，註冊之後 <code>不得更改</code> ！請謹慎填寫<br>
用戶名<strong>只能</strong>是  <code>小寫英文</code>  或  <code>數字</code></p>
<p><img src="signup-05-username.jpg" alt="" height="600px"></p>
</blockquote>
<hr>
<h2 id="推薦人機制">推薦人機制</h2>
<blockquote>
<p>上一篇文章有提到，<strong>Pi Network</strong> 有所謂的<strong>推薦人機制</strong>。<br>
你必須要有推薦人才可進入 Pi Network。</p>
<p>在這邊可以填入我的推薦碼，<strong> <code>9 個「pi」</code> </strong>，馬上獲得 1 Pi 幣：</p>
<pre class="line-numbers language-none"><code class="language-none">pipipipipipipipipi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="signup-06-invited.jpg" alt="" style="height: 400px;"></p>
</blockquote>
<hr>
<h2 id="開始賺-pi-coin">開始賺 Pi Coin</h2>
<blockquote>
<p>看到這個畫面代表成功啦！<br>
點擊「<strong>GET STARTED</strong>」繼續！</p>
<p><img src="start-01.jpg" alt="" height="600px"></p>
</blockquote>
<hr>
<blockquote>
<p>點擊<strong>白色</strong>「<strong>閃電</strong>」符號即可 <strong>開始挖礦</strong>：</p>
<p><img src="start-02.jpg" alt="" height="600px"></p>
<p>「<strong>閃電</strong>」變成<strong>綠色</strong>的表示正在挖礦<br>
畫面上寫的 <strong>0.12</strong> 是指「<strong>每小時可挖 0.12 Pi Coin</strong>」。<br>
原本的<strong>基礎速度</strong>是 <strong>0.10</strong>，因為有<strong>推薦人加成</strong>，所以加速了 <strong>25%</strong> 的速度：</p>
<p><img src="start-03-mining.jpg" alt="" height="600px"></p>
</blockquote>
<hr>
<blockquote>
<p>螢幕最上方是你目前擁有的 Pi Coin！<br>
你會看到已經有了 <strong>1 Pi Coin</strong>，這是因為剛剛<strong>輸入邀請碼</strong>的關係。(<strong>受邀者獎勵</strong>)</p>
<p><img src="start-04-how-much-now.jpg" alt="" height="600px"></p>
</blockquote>
<hr>
<blockquote>
<p>可以點擊該圖示觀看目前 <strong>自己 的 挖礦團隊</strong></p>
<p><img src="team-01.jpg" alt="" height="600px"></p>
</blockquote>
<hr>
<blockquote>
<p>剛開始應該只看得見我 (推薦人)<br>
 如果 <strong>顯示該圖示</strong> 則表示 <strong>我也正在挖礦</strong>，此刻你也享有我的  <code>算力加成</code> 。</p>
<p><img src="team-02.jpg" alt="" style="height: 230px;"></p>
</blockquote>
<hr>
<h2 id="填寫母語名稱-用於之後-kyc">填寫母語名稱 (用於之後 KYC)</h2>
<blockquote>
<p>點擊下方 <strong> <code>Review name</code> </strong> (審核名字)</p>
<p><img src="name-01.jpg" alt="" height="600px"></p>
</blockquote>
<hr>
<blockquote>
<p>之後點擊 <strong> <code>更正</code> </strong></p>
<p><img src="name-02.jpg" alt="" height="600px"></p>
</blockquote>
<hr>
<blockquote>
<p>確認英文名稱無誤後，點擊下方的「<strong>用母語拼寫  <code>點擊這裡</code> </strong>」</p>
<p><img src="name-03.jpg" alt="" style="height: 350px;"></p>
</blockquote>
<hr>
<blockquote>
<p>在下方母語名稱欄位中，輸入<strong>自己母語的名字</strong>，例如中文名。<br>
並且在最下方選擇該 <strong>名字的語言</strong> 為何，</p>
<p><img src="name-04.jpg" alt="" height="550px"></p>
</blockquote>
<hr>
<blockquote>
<p>選擇該 <strong>名字的語言</strong></p>
<p><img src="name-05.jpg" alt="" height="600px"></p>
</blockquote>
<hr>
<blockquote>
<p>確認無誤後，按下  <code>提交</code></p>
<p><img src="name-06.jpg" alt="" height="600px"></p>
</blockquote>
<hr>
<blockquote>
<p>輸入自己  <code>常用</code>  的  <code>名稱</code> ，用於顯示給他人看。<br>
又或者你可以如圖，填入<strong>英文名</strong>即可。<br>
輸入完畢後，按下  <code>儲存</code>  即可</p>
<p><img src="name-07.jpg" alt="" style="height: 330px;"></p>
</blockquote>
<hr>
<blockquote>
<p>輸入自己的  <code>信箱</code> ，用於日後有需要時，驗證帳戶權限。<br>
輸入完畢後，按下  <code>提交</code>  即可</p>
<p><img src="name-08.jpg" alt="" height="330px"></p>
</blockquote>
<hr>
<h2 id="security-circle-安全圈">Security Circle (安全圈)</h2>
<blockquote>
<p>在挖礦滿 <strong> <code>3 個週期 (72小時)</code> </strong> 後，即可使用 <strong> <code>Security Circle (安全圈)</code> </strong> 功能。( <code>盾牌圖示</code> )<br>
<strong>Security Circle</strong> 是由每個 Pi Network 用戶各自建立的 <strong> <code>信任圈</code> </strong>，這用於<strong>保護數位貨幣</strong>，防止有心人士進行<strong>假冒的交易詐騙</strong>，Security Circle 內建議最高安全人數是容納 <strong>6 人</strong>，也就是說，扣除自己還可以加入 <strong>5 人</strong> 至自己的安全圈，而這 5 人必須是自己所<strong>信任</strong>的人。</p>
<p>當 Security Circle <strong>越多人</strong>，<strong>算力</strong>則會<strong>越高</strong>，也就是將會<strong>提升挖礦速度</strong>，達 <strong>5 人</strong>時可以獲得最大算計加成，<strong>每小時</strong>提升 <strong>0.39 Pi</strong> 的速度。(<strong>盾牌</strong>顯示 <strong>100%</strong>)<br>
(當然你可以選擇加入更多人，但算力在 5 人之後不會再加成)<br>
 ps. 加入安全圈後，算力基本上會等到加入的 <strong> <code>第二週期 (48小時)</code> </strong> 後才加成。<br>
具體操作如下：</p>
<p><img src="security-01.jpg" alt="" height="550px"><br>
<img src="security-02.jpg" alt="" height="550px"><br>
<img src="security-03.jpg" alt="" height="450px"><br>
<img src="security-04.jpg" alt="" height="250px"></p>
</blockquote>
<hr>
<h2 id="其他功能">其他功能</h2>
<blockquote>
<h3 id="變更界面語言">變更界面語言</h3>
<p><img src="language-01.jpg" alt="" height="600px"><br>
<img src="language-02.jpg" alt="" height="600px"></p>
</blockquote>
<hr>
<blockquote>
<h3 id="隱藏名稱">隱藏名稱</h3>
<p><img src="hide-name-01.jpg" alt="" height="600px"><br>
<img src="hide-name-02.jpg" alt="" height="600px"><br>
<img src="hide-name-03.jpg" alt="" height="600px"><br>
<img src="hide-name-04.jpg" alt=""></p>
</blockquote>
<hr>
<blockquote>
<h3 id="與-pi-友聊天">與 Pi 友聊天</h3>
<p><img src="chat-01.jpg" alt="" height="600px"></p>
</blockquote>
<hr>
<h2 id="最後">最後</h2>
<p>如果這篇文章有幫助到你，也不要忘了分享給那些還不知道怎麼入場的朋友看！<strong>祝大家挖礦順利！</strong></p>
]]></content>
      <categories>
        <category>Information (資訊分享)</category>
      </categories>
      <tags>
        <tag>Bitcoin (比特幣)</tag>
        <tag>Digital-Currency (數位貨幣)</tag>
      </tags>
  </entry>
  <entry>
    <title>Public-key Cryptography (非對稱加密)</title>
    <url>/2020/02/16/Public-keyCryptography(%E9%9D%9E%E5%B0%8D%E7%A8%B1%E5%8A%A0%E5%AF%86)/</url>
    <content><![CDATA[<p>這次提到的概念是比上次的「 <strong>Symmetric-key Algorithm (對稱加密)</strong> 」來的更進階的「 <strong>Public-key Cryptography (非對稱加密)</strong> 」，其概念被廣泛運用在<strong>數位簽章</strong>。</p>
<span id="more"></span>
<hr>
<h3 id="前言">前言</h3>
<p>若你還不了解「 <strong>Symmetric-key Algorithm (對稱加密)</strong> 」是什麼，建議在閱讀本文前，先看看我前一篇文章「<strong><a href="/2020/02/10/Symmetric-keyAlgorithm(%E5%B0%8D%E7%A8%B1%E5%8A%A0%E5%AF%86)/" title="Symmetric-key Algorithm (對稱加密)">Symmetric-key Algorithm (對稱加密)</a></strong>」，否則可能會搞不清楚在本篇中，基於上一篇介紹裡所使用的單字意思。</p>
<hr>
<h3 id="對稱加密所無法解決的難題"><strong>對稱加密</strong>所無法解決的難題</h3>
<p>在上一篇的對稱加密概念介紹中，其作法可以有效的使多方溝通之間存在更高的安全性，但<strong>共享密鑰</strong>也同時意味著「 <strong>對方有與你相同的權限</strong> 」，你能加密訊息後發布，對方也能，你能透過密鑰解密，對方也能。</p>
<p>在很多時候，A 方與 B 方雖然需要加密溝通，但卻必須<strong>分清楚雙方身份</strong>，否則可能存在<strong>偽造的風險</strong>，注意，這邊所說的 A、B 方並不一定是<strong>單一</strong>的，他可以是<strong>群體</strong>，也就是說有某一群人稱為<strong> A</strong>，某另一群人稱為<strong> B</strong>，而雙方都有著相同的密鑰可以用來加密及解密訊息，這兩群人透過<strong>對稱加密</strong>來加密訊息並溝通，但這僅能保護雙方在溝通時，不被<strong>非 A、B 兩方的人</strong>了解密文意思而已，並不能驗證該訊息的發送者身份是 A 還是 B，因為雙方的密鑰是相同的，因此萬一有某人為 B 方，而他卻聲稱自己是 A 方的人，並且使用密鑰加密訊息發給 B 方，那 B 方又該如何驗證該人的身份？</p>
<img src="/2020/02/16/Public-keyCryptography(%E9%9D%9E%E5%B0%8D%E7%A8%B1%E5%8A%A0%E5%AF%86)/01.png" class="" title="B群組成員偽造A群組身份發送訊息">
<hr>
<h3 id="public-key-cryptography-非對稱加密">Public-key Cryptography (非對稱加密)</h3>
<p>為了解決上述問題，我們必須改成「 <strong>加密與解密使用不同密鑰</strong> 」，於是「 <strong>Public-key Cryptography (非對稱加密)</strong> 」誕生了。</p>
<ul>
<li><strong>公鑰、私鑰</strong>
<ul>
<li>由於加密與解密需要使用不同密鑰，因此若是要達到雙方可以溝通的效果，至少需要要 4 把鑰匙，在一開始的時候，雙方各別生產<strong>一對</strong>密鑰，這一對密鑰一把當公鑰，一把當私鑰，注意，這兩把密鑰並<strong>不是分開獨立生成</strong>的，<strong>它們之間有著數學關連</strong>，至於分成公、私鑰是做什麼的，等等會解釋，目前只要先記得，這兩把鑰匙是<strong>一對</strong>，不可被拆散的。</li>
<li>在這邊提醒一個<strong>重點</strong>，雖然說一對公鑰與私鑰之間有著關聯，可是並<strong>不能透過單一一把鑰匙推算出另一把鑰匙</strong>，也就是說，今天就算別人知道你的公鑰，對方也是<strong>無法</strong>破解出該公鑰所對應的私鑰。</li>
</ul>
</li>
</ul>
<img src="/2020/02/16/Public-keyCryptography(%E9%9D%9E%E5%B0%8D%E7%A8%B1%E5%8A%A0%E5%AF%86)/02.png" class="" title="雙方生成公私鑰">
<ul>
<li><strong>釋出公鑰</strong><br>
將公鑰交給對方，用於給對方在之後進行解密使用。</li>
</ul>
<img src="/2020/02/16/Public-keyCryptography(%E9%9D%9E%E5%B0%8D%E7%A8%B1%E5%8A%A0%E5%AF%86)/03.png" class="" title="雙方交換公鑰">
<ul>
<li><strong>加密、解密</strong>
<ul>
<li>接下來就是非對稱加密的特殊之處了，這時候雙方手上都持有<strong>自己的私鑰</strong>及<strong>對方的公鑰</strong>，「 <strong>自己的私鑰</strong> 」用於「 <strong>加密</strong> 」，「 <strong>對方的公鑰</strong> 」用於「 <strong>解密</strong> 」。</li>
<li>下方示意圖是<strong> B 方</strong>傳送訊息給<strong> A 方</strong>的情境，<strong>B 方</strong>運用<strong>自己的私鑰</strong>加密後傳送給<strong> A 方</strong>，而<strong> A 方</strong>則使用<strong> B 方的公鑰</strong>進行解密。</li>
<li>運用私鑰所加密的訊息只有該私鑰所對應的公鑰才能解密。</li>
</ul>
</li>
</ul>
<img src="/2020/02/16/Public-keyCryptography(%E9%9D%9E%E5%B0%8D%E7%A8%B1%E5%8A%A0%E5%AF%86)/04.png" class="" title="加密解密">
<ul>
<li>所以萬一有人想偽造身份，除非是偷到密鑰，否則是不可行的。</li>
</ul>
<img src="/2020/02/16/Public-keyCryptography(%E9%9D%9E%E5%B0%8D%E7%A8%B1%E5%8A%A0%E5%AF%86)/05.png" class="" title="辨識身份">
<hr>
<h3 id="運用">運用</h3>
<p>非對稱加密被運用在許多地方，而常見的 <strong>數位簽章 (Digital Signature)</strong> 也是利用此概念來達到辨識身份及加密的原理。另外，許多標榜像是加密傳輸、加密聊天等應用，也都看得到非對稱加密的蹤影，只要私鑰不洩漏，基本上不會有第二則密文可以被該公鑰解密成有意義的明文。</p>
<p>P.S. 非對稱加密中常見的加密演算法有：<br>
<a href="https://zh.wikipedia.org/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95"><strong>RSA</strong></a>、<a href="https://zh.wikipedia.org/wiki/%E8%BF%AA%E8%8F%B2-%E8%B5%AB%E7%88%BE%E6%9B%BC%E5%AF%86%E9%91%B0%E4%BA%A4%E6%8F%9B"><strong>DH</strong></a>、<a href="https://zh.wikipedia.org/wiki/%E6%A9%A2%E5%9C%93%E6%9B%B2%E7%B7%9A%E8%BF%AA%E8%8F%B2-%E8%B5%AB%E7%88%BE%E6%9B%BC%E9%87%91%E9%91%B0%E4%BA%A4%E6%8F%9B"><strong>ECDH</strong></a>、<a href="https://zh.wikipedia.org/wiki/%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E7%AE%97%E6%B3%95"><strong>ECDSA (橢圓曲線數字簽名算法)</strong></a>、<a href="https://zh.wikipedia.org/wiki/ElGamal%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95"><strong>ElGamal</strong></a>、<a href="https://zh.wikipedia.org/wiki/SM2"><strong>SM2</strong></a>。<br>
有興趣的朋友可以點擊連結或自行上網研究。</p>
]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Cryptography</category>
      </categories>
      <tags>
        <tag>Cryptography (密碼學)</tag>
        <tag>Public-key Cryptography (非對稱加密)</tag>
        <tag>Digital Signature (數位簽章)</tag>
      </tags>
  </entry>
  <entry>
    <title>RC 語音 XSS 漏洞</title>
    <url>/2019/12/23/RC%E8%AA%9E%E9%9F%B3XSS%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<span id="more"></span>
<img src="/2019/12/23/RC%E8%AA%9E%E9%9F%B3XSS%E6%BC%8F%E6%B4%9E/title.jpeg" class="">
<hr>
<h3 id="id">ID</h3>
<p>《ZDID》ZD-2017-00589</p>
<hr>
<h3 id="content">Content</h3>
<p>受測單位：伊凡達科技股份有限公司<br>
風險評估：中<br>
漏洞類型：預存式跨站腳本攻擊 (Stored Cross-Site Scripting)<br>
 通報時間：2017/10/16</p>
<hr>
<h3 id="describe">Describe</h3>
<p>名稱欄位可以被執行腳本，沒有做到字元過濾的防護</p>
<p>RC 語音的「名稱欄位」中，如果命名為 「 <strong> <code>&quot;&gt;&lt;script&gt;alert('1')&lt;/script&gt;</code> </strong> 」 再進去 &quot;秀場&quot; 系統，則會被執行名稱上的語法，在論壇中也有一樣的問題，甚至可以透過「 <strong> <code>&lt;!--</code> </strong> 」輕鬆註解論壇網頁。</p>
<hr>
<h3 id="repair">Repair</h3>
<p>可禁用敏感字眼，並且最好能在輸出前轉換文字為 html 編碼，這可以大大減少 XSS 的發生。</p>
<p>防護原則：</p>
<p><a href="https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet" target="_blank">https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet</a></p>
]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Security-Flaw (安全漏洞)</category>
        <category>我的通報</category>
      </categories>
      <tags>
        <tag>XSS (Cross-Site-Scripting)</tag>
        <tag>ReportedFromMe (我的通報)</tag>
      </tags>
  </entry>
  <entry>
    <title>《SQL 基礎 01》創建、新增</title>
    <url>/2021/05/25/SQL-Basic-01/</url>
    <content><![CDATA[一些基礎常見的 SQL 語法。
<span id="more"></span>
<hr>
<h2 id="創建">創建</h2>
<h3 id="創建資料庫">創建資料庫</h3>
<p>創建使用的是「<strong> <code>CREATE</code> </strong>」語法：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token punctuation">`</span>資料庫名稱<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="創建資料表及欄位">創建資料表及欄位</h3>
<p>由於要先指定資料庫才能使用裡面的資料表，所以先選擇資料庫：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> <span class="token punctuation">`</span>資料庫名稱<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>之後創建資料表，創建格式如下：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">(</span>
	<span class="token punctuation">`</span>欄位<span class="token number">1</span>名稱<span class="token punctuation">`</span> 資料型態<span class="token punctuation">(</span>長度<span class="token punctuation">)</span> 屬性<span class="token number">1</span> 屬性<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>
	<span class="token punctuation">`</span>欄位<span class="token number">2</span>名稱<span class="token punctuation">`</span> 資料型態<span class="token punctuation">(</span>長度<span class="token punctuation">)</span> 屬性<span class="token number">1</span> 屬性<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="範例">範例</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">(</span>
	<span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
	<span class="token punctuation">`</span>phone<span class="token punctuation">`</span> <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">'Anonymous'</span><span class="token punctuation">,</span>
	<span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="語法說明">語法說明</h3>
<p>欄位格式為「<strong> <code>欄位名稱</code>   <code>資料類別(長度)</code>   <code>屬性1</code>   <code>屬性2...</code> </strong>」。每筆資料以「<strong> <code>,</code> </strong>」區隔。</p>
<ul>
<li>
<p>欄位「 <code>id</code> 」為「 <code>int</code> 」表示「 <code>整數</code> 」，範圍為「 <code>-2,147,483,648</code>  ~  <code>2,147,483,647</code> 」。<br>
屬性 「 <code>PRIMARY KEY</code> 」則表示  <code>主鍵</code> ，同時加上「 <code>AUTO_INCREMENT</code> 」使其能在新增一筆新資料時，<strong>自動累加</strong> id 以確保資料筆之間的 id 值唯一。</p>
</li>
<li>
<p>欄位「 <code>phone</code> 」為「 <code>char</code> 」表示「 <code>字元</code> 」，最大字元長度為「 <code>255</code> 」。在後方有「 <code>(10)</code> 」則限制其長度為 10 。(ps. 若長度 <code>不足</code>  10 則會自動補足 10，總之在儲存上 <code>佔用的容量是固定的</code> )</p>
</li>
<li>
<p>而「 <code>name</code> 」欄位同樣是字元，但寫作「 <code>varchar</code> 」，最大字元長度為「 <code>65535</code> 」，差別在於資料儲存上，若字元長度不足 20 ，則只會佔用 <code>資料的字元長度大小</code> ，相較於「 <code>char</code> 」更為彈性，通常建議使用這個類別而非「 <code>char</code> 」。<br>
屬性「 <code>DEFAULT</code> 」意思為「 <code>預設</code> 」。在新增資料筆時，若沒有指定該欄位的情況下，會自動寫入預設值，舉上述例子，當沒有指定「 <code>name</code> 」欄位寫入時，該欄位將自動寫入「 <code>Anonymous</code> 」。</p>
</li>
<li>
<p>最後的「 <code>age</code> 」欄位屬性「 <code>NOT NULL</code> 」表示該欄位 <code>不能為空值</code> 。<br>
若要表示該資料可以為空，則使用「 <code>NULL</code> 」屬性。<br>
若沒有特別指定，則使用系統預設，通常為「 <code>NULL</code> 」屬性。<br>
(ps.  <code>id</code>  雖然沒有該屬性，但  <code>PRIMARY KEY</code>  屬性本身就自帶  <code>NOT NULL</code>  了)</p>
</li>
</ul>
<p>另外，你也可以將欄位格式寫好後，在最後才將其定義為主鍵：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token punctuation">(</span>
	<span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<hr>
<h2 id="新增">新增</h2>
<p>想要在資料表內新增資料筆，則需要用到「<strong> <code>INSERT</code> </strong>」語法：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>欄位<span class="token number">1</span><span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>欄位<span class="token number">2</span><span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span>欄位<span class="token number">1</span>的值<span class="token punctuation">,</span> 欄位<span class="token number">2</span>的值<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>填寫<strong>值的順序</strong>是對應前面<strong>欄位順序</strong>的。</p>
<p>這邊要特別注意的是，兩行之間並<strong>沒有</strong>「 <code>,</code> 」或「 <code>;</code> 」區隔。<br>
本質上它算是一行，只是為了提高 <code>可讀性</code> ，所以習慣寫作兩行或以上。</p>
<p>(ps. 另外，舉上述例子，我們不需要在新增時手動寫入「 <code>id</code> 」欄位，因為「 <code>AUTO_INCREMENT</code> 」會自動寫入。)</p>
<h3 id="範例-2">範例</h3>
<p>舉上述 <code>創建</code> 例子中的資料表為例：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>phone<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span><span class="token punctuation">)</span>
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">"0123456789"</span><span class="token punctuation">,</span> <span class="token string">"新之助"</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>會寫入以下資料：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">phone</th>
<th style="text-align:left">name</th>
<th style="text-align:left">age</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">0123456789</td>
<td style="text-align:left">新之助</td>
<td style="text-align:left">5</td>
</tr>
</tbody>
</table>
<p>再寫入一筆，但這次只指定必要的欄位「 <code>age</code> 」：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>age<span class="token punctuation">`</span><span class="token punctuation">)</span>
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>目前資料為：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">phone</th>
<th style="text-align:left">name</th>
<th style="text-align:left">age</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">0123456789</td>
<td style="text-align:left">新之助</td>
<td style="text-align:left">5</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">Anonymous</td>
<td style="text-align:left">19</td>
</tr>
</tbody>
</table>
<ul>
<li>由於  <code>id</code>  欄位的「 <code>AUTO_INCREMENT</code> 」屬性，所以自動累加上一筆資料的  <code>id</code> 。</li>
<li>欄位  <code>phone</code>  並未指定，而又不存在預設值，因此為 <code>NULL (空值)</code> 。</li>
<li>欄位  <code>name</code>  並未指定，但存在預設值「 <code>Anonymous</code> 」，因此寫入預設值。</li>
<li>欄位  <code>age</code>  指定為  <code>19</code>  。</li>
</ul>
<p>但如果這麼寫：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>phone<span class="token punctuation">`</span><span class="token punctuation">)</span>
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">"小葵"</span><span class="token punctuation">,</span> <span class="token string">"0987654321"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><strong>會發生什麼事情？</strong></p>
<p>答案是噴一個錯誤 -  <code>Field 'age' doesn't have a default value</code> <br>
 還記得剛剛創建資料表時，設置了  <code>age</code>  欄位為「 <code>NOT NULL</code> 」屬性嗎？<br>
而在此並未給予  <code>age</code>  值，而  <code>age</code>  又不存在「 <code>DEFAULT</code> 」預設值，因此出錯。</p>
]]></content>
      <categories>
        <category>Computer Science</category>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Database (資料庫)</tag>
      </tags>
  </entry>
  <entry>
    <title>《SQL 基礎 02》查詢、模糊比對</title>
    <url>/2021/05/25/SQL-Basic-02/</url>
    <content><![CDATA[一些基礎常見的 SQL 語法。
<span id="more"></span>
<hr>
<h2 id="查詢">查詢</h2>
<p>要在資料表內查詢資料筆，則需要用到「<strong> <code>SELECT</code> </strong>」語法：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token punctuation">`</span>查詢欄位<span class="token number">1</span><span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>查詢欄位<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">`</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> 查詢條件<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>而查詢的欄位也可以填入「<strong> <code>*</code> </strong>」來表示查詢「 <code>全部欄位</code> 」：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱 <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>查詢條件<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>至於條件… 各種寫法，常見的寫法為  <code>比對資料值相符與否</code> 。</p>
<h3 id="範例-比對數字">範例 - 比對數字</h3>
<p>利用上一篇文章「<a href="/2021/05/25/SQL-Basic-01/" title="《SQL 基礎 01》創建、新增">《SQL 基礎 01》創建、新增</a>」中所說的語法，陸續寫入幾筆資料後，目前的資料表內容為：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">phone</th>
<th style="text-align:left">name</th>
<th style="text-align:left">age</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">0123456789</td>
<td style="text-align:left">新之助</td>
<td style="text-align:left">5</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">Anonymous</td>
<td style="text-align:left">19</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">向日葵</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">0111222333</td>
<td style="text-align:left">美冴</td>
<td style="text-align:left">29</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">0444555666</td>
<td style="text-align:left">廣志</td>
<td style="text-align:left">35</td>
</tr>
</tbody>
</table>
<p>輸入查詢語法：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Database Server 返回以下結果：</p>
<table>
<thead>
<tr>
<th style="text-align:left">name</th>
<th style="text-align:left">age</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Anonymous</td>
<td style="text-align:left">19</td>
</tr>
<tr>
<td style="text-align:left">美冴</td>
<td style="text-align:left">29</td>
</tr>
<tr>
<td style="text-align:left">廣志</td>
<td style="text-align:left">35</td>
</tr>
</tbody>
</table>
<p>因為  <code>WHERE</code>  後方所寫的查詢條件為「 <code>age</code> 」的值須 <code>大於</code> 「10」，<br>
因此  <code>age</code>  小於等於 10 的資料筆將不顯示。</p>
<p><code>大於</code> 使用「 <code>&gt;</code> 」； <code>小於</code> 使用「 <code>&lt;</code> 」；<br>
 <code>等於</code> 使用「 <code>=</code> 」； <code>不等於</code> 使用「 <code>!=</code> 」或「 <code>&lt;&gt;</code> 」；<br>
 <code>大於等於</code> 使用「 <code>&gt;=</code> 」； <code>小於等於</code> 使用「 <code>&lt;=</code> 」；</p>
<p>ps. 若不指定查詢條件，則表示查詢全部：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Database Server 返回以下結果：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">name</th>
<th style="text-align:left">age</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">新之助</td>
<td style="text-align:left">5</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left">Anonymous</td>
<td style="text-align:left">19</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">向日葵</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">美冴</td>
<td style="text-align:left">29</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">廣志</td>
<td style="text-align:left">35</td>
</tr>
</tbody>
</table>
<h3 id="範例-比對字串">範例 - 比對字串</h3>
<p>輸入查詢語法：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token string">"新之助"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Database Server 返回以下結果：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">name</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">新之助</td>
</tr>
</tbody>
</table>
<p>不等於的字串查詢：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">!=</span> <span class="token string">"Anonymous"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Database Server 返回以下結果：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">name</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">新之助</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left">向日葵</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">美冴</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">廣志</td>
</tr>
</tbody>
</table>
<h3 id="範例-模糊比對">範例 - 模糊比對</h3>
<p>當有時候我們<strong>不確定</strong>目標欄位的<strong>值</strong>時，我們可以用<strong>部份特徵</strong>來比對。<br>
要模糊查詢則是使用「 <code>LIKE</code> 」語法：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>phone<span class="token punctuation">`</span> <span class="token operator">LIKE</span> <span class="token string">"01%"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Database Server 返回以下結果：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">phone</th>
<th style="text-align:left">name</th>
<th style="text-align:left">age</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">0123456789</td>
<td style="text-align:left">新之助</td>
<td style="text-align:left">5</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">0111222333</td>
<td style="text-align:left">美冴</td>
<td style="text-align:left">29</td>
</tr>
</tbody>
</table>
<p>百分號「 <code>%</code> 」表示任意字元比對  <code>0</code>  次或  <code>0 次以上</code> 。<br>
該語法的意思是，查詢  <code>phone</code>  的值為  <code>01 開頭</code>  的資料筆。<br>
所以假設「 <code>蘋果%</code> 」可以配對「 <code>蘋果</code> 」、「 <code>蘋果汁</code> 」、「 <code>蘋果派不好吃</code> 」，但 <code>不</code> 能配對「 <code>青蘋果</code> 」，因為「 <code>青蘋果</code> 」開頭並非是「 <code>蘋果</code> 」，若要配對它，則可以寫成「 <code>%蘋果%</code> 」。</p>
<p>如果輸入以下語法：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token operator">LIKE</span> <span class="token string">"_9"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Database Server 返回以下結果：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">phone</th>
<th style="text-align:left">name</th>
<th style="text-align:left">age</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">Anonymous</td>
<td style="text-align:left">19</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">0111222333</td>
<td style="text-align:left">美冴</td>
<td style="text-align:left">29</td>
</tr>
</tbody>
</table>
<p>底線「 <code>_</code> 」表示任意字元比對  <code>1</code>  次。<br>
該語法表示，查詢  <code>age</code>  欄位「 <code>第二字為 9</code> 」的結果。<br>
所以「 <code>_9</code> 」可以配對「 <code>39</code> 」、「 <code>59</code> 」但不能配對「 <code>22</code> 」、「 <code>9</code> 」，當然也不能配對「 <code>193</code> 」，如果要配對「 <code>193</code> 」則須寫做「 <code>_9_</code> 」或者「 <code>_9%</code> 」。</p>
]]></content>
      <categories>
        <category>Computer Science</category>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Database (資料庫)</tag>
      </tags>
  </entry>
  <entry>
    <title>《SQL 基礎 03》修改、刪除</title>
    <url>/2021/05/25/SQL-Basic-03/</url>
    <content><![CDATA[一些基礎常見的 SQL 語法。
<span id="more"></span>
<hr>
<h2 id="示範的資料">示範的資料</h2>
<p>目前資料表內有以下資料：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">phone</th>
<th style="text-align:left">name</th>
<th style="text-align:left">age</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">0123456789</td>
<td style="text-align:left">新之助</td>
<td style="text-align:left">5</td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">Anonymous</td>
<td style="text-align:left">19</td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">向日葵</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">0111222333</td>
<td style="text-align:left">美冴</td>
<td style="text-align:left">29</td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">0444555666</td>
<td style="text-align:left">廣志</td>
<td style="text-align:left">35</td>
</tr>
</tbody>
</table>
<p>如果可以的話也試著一起做做看。</p>
<hr>
<h2 id="修改">修改</h2>
<h3 id="修改資料筆">修改資料筆</h3>
<p>修改資料筆需要使用「 <code>UPDATE</code> 」語法：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">UPDATE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> 
<span class="token keyword">SET</span> <span class="token punctuation">`</span>欄位<span class="token number">1</span><span class="token punctuation">`</span> <span class="token operator">=</span> 欄位<span class="token number">1</span>新的值<span class="token punctuation">,</span> <span class="token punctuation">`</span>欄位<span class="token number">2</span><span class="token punctuation">`</span> <span class="token operator">=</span> 欄位<span class="token number">2</span>新的值<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">WHERE</span> 修改條件<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="範例-修改資料筆">範例 - 修改資料筆</h3>
<p>輸入語法：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">UPDATE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> 
<span class="token keyword">SET</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token string">"小白"</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">WHERE</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token operator">LIKE</span> <span class="token string">'%onym%'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>原資料：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">phone</th>
<th style="text-align:left">name</th>
<th style="text-align:left">age</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">Anonymous</td>
<td style="text-align:left">19</td>
</tr>
</tbody>
</table>
<p>被更改為：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">phone</th>
<th style="text-align:left">name</th>
<th style="text-align:left">age</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">小白</td>
<td style="text-align:left">0</td>
</tr>
</tbody>
</table>
<p>條件「<strong>`name` LIKE  <code>'%onym%'</code> </strong>」表示模糊查詢  <code>name</code>  欄位「 <code>含有 &quot;onym&quot;</code> 」的資料筆。<br>
ps. 若沒有寫  <code>WHERE</code>  條件，則會更改所有資料。<br>
所有資料的欄位  <code>name</code>  會變「 <code>小白</code> 」，欄位  <code>age</code>  會變「 <code>0</code> 」…</p>
<h3 id="修改欄位">修改欄位</h3>
<h4 id="新增欄位">新增欄位</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span>欄位名稱<span class="token punctuation">`</span> 資料型態<span class="token punctuation">(</span>長度<span class="token punctuation">)</span> 屬性<span class="token number">1</span> 屬性<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="範例-新增欄位">範例 - 新增欄位</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span>name_jp<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>資料表欄位多出「 <code>name_jp</code> 」：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">phone</th>
<th style="text-align:left">name</th>
<th style="text-align:left">age</th>
<th style="text-align:left">jp_name</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">0123456789</td>
<td style="text-align:left">新之助</td>
<td style="text-align:left">5</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">小白</td>
<td style="text-align:left">0</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">向日葵</td>
<td style="text-align:left">0</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">0111222333</td>
<td style="text-align:left">美冴</td>
<td style="text-align:left">29</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">0444555666</td>
<td style="text-align:left">廣志</td>
<td style="text-align:left">35</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
</tbody>
</table>
<h4 id="修改欄位-2">修改欄位</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> CHANGE <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span>舊欄位名稱<span class="token punctuation">`</span>
<span class="token punctuation">`</span>新欄位名稱<span class="token punctuation">`</span> 新資料形態<span class="token punctuation">(</span>長度<span class="token punctuation">)</span> 屬性<span class="token number">1</span> 屬性<span class="token number">2.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="範例-修改欄位">範例 - 修改欄位</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> CHANGE <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span>phone<span class="token punctuation">`</span>
<span class="token punctuation">`</span>phone<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>則資料欄位  <code>phone</code>  由型態「 <code>char(10)</code> 」更改至「 <code>varchar(11)</code> 」。</p>
<h4 id="刪除欄位">刪除欄位</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span>欄位名稱<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="範例-刪除欄位">範例 - 刪除欄位</h4>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span>age<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>欄位「 <code>age</code> 」被刪除了：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">phone</th>
<th style="text-align:left">name</th>
<th style="text-align:left">jp_name</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">0123456789</td>
<td style="text-align:left">新之助</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">小白</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">向日葵</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">0111222333</td>
<td style="text-align:left">美冴</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">0444555666</td>
<td style="text-align:left">廣志</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
</tbody>
</table>
<hr>
<h2 id="刪除">刪除</h2>
<h3 id="刪除資料筆">刪除資料筆</h3>
<p>刪除資料筆使用的語法為「 <code>DELETE</code> 」：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> 刪除條件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="範例-刪除資料筆">範例 - 刪除資料筆</h3>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span> <span class="token keyword">WHERE</span> <span class="token punctuation">`</span>phone<span class="token punctuation">`</span> <span class="token operator">IS</span> <span class="token boolean">NULL</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>ps. 「<strong> <code>IS NULL</code> </strong>」這個寫法表示比對值為  <code>NULL (空值)</code> ，等同於「<strong>`phone`  <code>= &quot;&quot;</code> </strong>」。</p>
<p>原資料為：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">phone</th>
<th style="text-align:left">name</th>
<th style="text-align:left">jp_name</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">0123456789</td>
<td style="text-align:left">新之助</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">2</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">小白</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">3</td>
<td style="text-align:left"><em>NULL</em></td>
<td style="text-align:left">向日葵</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">0111222333</td>
<td style="text-align:left">美冴</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">0444555666</td>
<td style="text-align:left">廣志</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
</tbody>
</table>
<p>刪除後：</p>
<table>
<thead>
<tr>
<th style="text-align:left">id</th>
<th style="text-align:left">phone</th>
<th style="text-align:left">name</th>
<th style="text-align:left">jp_name</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">1</td>
<td style="text-align:left">0123456789</td>
<td style="text-align:left">新之助</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">4</td>
<td style="text-align:left">0111222333</td>
<td style="text-align:left">美冴</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
<tr>
<td style="text-align:left">5</td>
<td style="text-align:left">0444555666</td>
<td style="text-align:left">廣志</td>
<td style="text-align:left"><em>NULL</em></td>
</tr>
</tbody>
</table>
<p>當然，如同  <code>UPDATE</code>  語法一樣，<strong>沒有</strong>指定  <code>WHERE</code>  刪除條件，則會 <code>刪除全部</code> ！</p>
<h3 id="刪除資料表">刪除資料表</h3>
<p>刪除資料表使用的是「 <code>DROP</code> 」語法：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>資料表名稱<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="刪除資料庫">刪除資料庫</h3>
<p>刪除資料庫一樣使用「 <code>DROP</code> 」語法：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token punctuation">`</span>資料庫名稱<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>Computer Science</category>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>Database (資料庫)</tag>
      </tags>
  </entry>
  <entry>
    <title>Edward Joseph Snowden (愛德華·約瑟夫·史諾登)｜賭上自己的一生，只為揭露政府祕密監控人民的醜聞！</title>
    <url>/2020/02/27/Snowden/</url>
    <content><![CDATA[<p>「 <em><strong>你不關心隱私權，因為你沒有什麼可隱瞞，這和說你不關心言論自由沒什麼不同，因為你無話可說。</strong></em> 」</p>
<span id="more"></span>
<hr>
<h3 id="前言">前言</h3>
<p>由於分類不同，我決定分成兩篇文章來寫。<br>
本篇僅<strong>簡單</strong>對於 <strong>Edward Joseph Snowden (愛德華・約瑟夫・史諾登)</strong> 做大致介紹。</p>
<hr>
<h3 id="snowden-史諾登">Snowden (史諾登)</h3>
<p><strong>Edward Joseph Snowden (愛德華・約瑟夫・史諾登)</strong><br>
<strong> 1983 年 6 月 21 日</strong> 生於 <strong>Elizabeth City, North Carolina (北卡羅萊納州 伊麗莎白市)</strong> 。<br>
曾是 <a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9C%8B%E4%B8%AD%E5%A4%AE%E6%83%85%E5%A0%B1%E5%B1%80"><strong>CIA (美國中央情報局)</strong></a> 職員、<a href="https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9C%8B%E5%9C%8B%E5%AE%B6%E5%AE%89%E5%85%A8%E5%B1%80"><strong>NSA (美國國家安全局)</strong></a> 外包技術員。</p>
<hr>
<h3 id="snowden-的事蹟">Snowden 的事蹟</h3>
<p><strong>2004 年 5 月 7 日</strong>，史諾登加入<a href="https://en.wikipedia.org/wiki/United_States_Army_Reserve"><strong>美國陸軍預備隊</strong></a>並同時希望最終能參入特種部隊，他表示：「 <strong>我要爭取參加伊拉克戰爭，因為我覺得作為一個人，我有責任，幫助人們擺脫壓迫。</strong> 」，可惜的是，他並沒有完成訓練，因為在一次訓練事故中摔斷了雙腿，於 <strong>2004 年 9 月 28 日</strong> 除役，由於身體的狀況被迫中斷原本的軍旅生涯。</p>
<p>之後史諾登仍想著用腦袋繼續報效國家，之後便在 <strong>2005 年</strong> 於 <a href="https://zh.wikipedia.org/wiki/%E9%A9%AC%E9%87%8C%E5%85%B0%E5%A4%A7%E5%AD%A6"><strong>University of Maryland, College Park (馬利蘭大學)</strong></a> 的 <a href="https://en.wikipedia.org/wiki/Center_for_Advanced_Study_of_Language"><strong>Center for Advanced Study of Language (高級語言研究中心，由美國國家安全局所贊助的研究中心)</strong></a> 中的一處隱蔽設施擔任警衛。在此之後，他又在 <strong>CIA (中央情報局)</strong> 擔任與資訊科技安全有關的職務。</p>
<blockquote>
<ul>
<li><strong>2007 年</strong>，CIA 派他到日內瓦維持電腦網路安全，並給予他外交身分作為掩護。</li>
<li><strong>2009 年</strong>，他離開 CIA 前往一個駐日美軍基地中的國家安全局設施，為一間私營外包商工作。</li>
<li><strong>2013 年</strong>，史諾登與他的女朋友住在<a href="https://zh.wikipedia.org/wiki/%E7%B6%AD%E5%B8%95"><strong>夏威夷歐胡島維帕</strong></a>，職務是在夏威夷的一個國家安全局設施內擔任系統管理員。但由於對美國政府的<strong>秘密監控工程</strong>感到良心過不去，儘管年薪約 20 萬美元，與女友過著舒適生活，但他選擇放棄這一切，並將其內容爆料給記者 <a href="https://zh.wikipedia.org/wiki/%E8%91%9B%E5%80%AB%C2%B7%E8%91%9B%E6%9E%97%E8%8F%AF%E5%BE%B7"><strong>Glenn Edward Greenwald (葛倫・愛德華・葛林華德)</strong></a> 後，該計畫才被報導公之於眾。</li>
</ul>
</blockquote>
<p>終於，<strong>2013 年 6 月</strong> 史諾登在香港將 <strong>NSA (美國國家安全局)</strong> 關於上述所提到 <strong>秘密監控工程</strong> 的「 <strong>稜鏡計劃</strong> 」監聽專案的秘密文件披露給了英國《<a href="https://zh.wikipedia.org/wiki/%E5%8D%AB%E6%8A%A5"><strong>衛報</strong></a>》和美國《<a href="https://zh.wikipedia.org/wiki/%E5%8D%8E%E7%9B%9B%E9%A1%BF%E9%82%AE%E6%8A%A5"><strong>華盛頓郵報</strong></a>》後，遭到<strong>美國</strong>及<strong>英國</strong>通緝，並受到「 <strong>盜竊政府財產、未經授權的國防通信和未經授權機密情報通信</strong> 」的指控。</p>
<p><strong>2013 年 6 月 23 日</strong> 史諾登離開<strong>香港</strong>前往<strong>莫斯科</strong>，<strong>俄羅斯</strong>給予他一年臨時難民身分，至此開始了他的逃亡生活。</p>
<hr>
<h3 id="prism-稜鏡計劃">PRISM (稜鏡計劃)</h3>
<p>以上，若是你大致了解了 <strong>Edward Joseph Snowden (愛德華・約瑟夫・史諾登)</strong> 的背景，那麼接下來一定不能錯過我的下一篇文章，關於史諾登揭開的「 <strong>PRISM (稜鏡計劃)</strong> 」內幕 - 「<strong><a href="/2020/02/27/PRISM(%E7%A8%9C%E9%8F%A1%E8%A8%88%E5%8A%83)/" title="PRISM (稜鏡計劃)｜政府監控人民網絡的陰謀！">PRISM (稜鏡計劃)｜政府監控人民網絡的陰謀！</a></strong>」。</p>
]]></content>
      <categories>
        <category>Person (人物分享)</category>
      </categories>
      <tags>
        <tag>Hacker (駭客)</tag>
        <tag>CIA (美國中央情報局)</tag>
      </tags>
  </entry>
  <entry>
    <title>Social-Engineering (社交工程)｜你駭計算機，我駭你心。</title>
    <url>/2020/01/24/Social-Engineering(%E7%A4%BE%E4%BA%A4%E5%B7%A5%E7%A8%8B)/</url>
    <content><![CDATA[<p>什麼是社交工程？是心理學的一種嗎？兩者之間有什麼關聯？社交工程是指詐騙嗎？</p>
<p>嘿！別想的太複雜，其實<strong>你應該也經歷過</strong> 。</p>
<span id="more"></span>
<hr>
<h3 id="前言">前言</h3>
<p><strong>注意！<br>
本文技巧禁止用於非法用途，一切行為請自行負責，與本站無關。本文僅作為學術研討用途。</strong></p>
<p>刑法第三百五十八條：「 <strong>無故輸入他人帳號密碼、破解使用電腦之保護措施或利用電腦系統之漏洞，而入侵他人之電腦或其相關設備者，處三年以下有期徒刑、拘役或科或併科十萬元以下罰金。</strong> 」 刑法第三百六十三條：「 <strong>第三百五十八條至第三百六十條之罪，須告訴乃論。</strong> 」</p>
<hr>
<h3 id="心理誘導的概念">心理誘導的概念</h3>
<p>很多時候，有心人士希望達成某個特定目的時，會透過<strong>言語</strong>、<strong>文字</strong>或<strong>肢體</strong>誘導他人去<strong>協助達成</strong>該目的。<br>
舉個常見的例子，詐騙集團在騙取你的財物時，他的目標是你「 <strong>ATM 裡的錢</strong> 」，此為「 <strong>特定目的</strong> 」。可是他沒有權限可以調動裡面的金錢，於是他在電話裡透過欺騙式的言語誘導你去「 <strong>自己去操作 ATM</strong> 」，此為「 <strong>言語誘導</strong> 」。當你真的聽信他所說的謊言時，你自己操作了 ATM，並且將錢轉到對方指定的帳戶，此時對方也達成目的了，此為「 <strong>協助達成</strong> 」，你協助詐騙集團「 <strong>操作你的 ATM</strong> 」。</p>
<hr>
<h3 id="釣魚攻擊-phishing-attack">釣魚攻擊 (Phishing Attack)</h3>
<p>「<a href="https://zh.wikipedia.org/wiki/%E9%92%93%E9%B1%BC%E5%BC%8F%E6%94%BB%E5%87%BB"><strong>網路釣魚 (Phishing Attack)</strong></a>」是個常見的社交工程例子，並且這個名字取的很好，你可以想像「 <strong>釣魚</strong> 」的情境，你需要有「 <strong>環境</strong>、<strong>魚</strong>、<strong>釣鉤</strong>、<strong>魚餌</strong> 」。以剛剛詐騙集團的例子來說：<br>
「 <strong>電話中</strong> 」就是你們之間所處的「 <strong>環境</strong> 」；「 <strong>你 (受害者)</strong> 」則是「 <strong>魚</strong> 」；「 <strong>釣鉤</strong> 」是「 <strong>ATM 匯款的動作</strong> 」；最後「 <strong>魚餌</strong> 」就是「 <strong>謊言</strong> 」。</p>
<p>再舉個常見的例子 - 「 <strong>電子信箱散播病毒</strong> 」。</p>
<p>在某些例子當中，一些駭客並非是為了自身的利益目的，有些只是想搞破壞，我們稱之為「 <strong>Cracker (破壞者)</strong> 」，廣義的解釋差不多是「 <strong>惡意對伺服器進行入侵、竊取資料、盜用帳戶及破壞 者</strong> 」。<br>
這類人很多會透過利用 <strong><a href="https://zh.wikipedia.org/wiki/%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6">E-Mail (電子信箱)</a></strong> 來散播惡意連結及含有 <a href="https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%97%85%E6%AF%92"><strong>病毒 (Virus)</strong></a> 的檔案，因為他們無法直接對你電腦植入病毒，所以需要透過你來幫忙點擊連結或下載檔案。另外像是「 <strong>WIFI 詐欺</strong> 」、「 <strong>釣魚登入網站</strong> 」也是常見的「 <strong>網路釣魚 (Phishing Attack)</strong> 」，整理一下：</p>
<ul>
<li>利用「 <strong>釣竿掛魚餌</strong> 」誘導魚自己「 <strong>吃魚餌</strong> 」達成「 <strong>上鉤</strong> 」的目的。</li>
<li>利用「 <strong>通話與謊言</strong> 」誘導你自己「 <strong>操作 ATM</strong> 」達成「 <strong>匯錢</strong> 」的目的。</li>
<li>利用「 <strong>電子信箱來寄惡意信件</strong> 」誘導你自己「 <strong>點擊惡意連結</strong> 」達成「 <strong>電腦中毒</strong> 」的目的。</li>
<li>利用「 <strong>架設誤導性名稱的<a href="https://zh.wikipedia.org/wiki/%E7%84%A1%E7%B7%9A%E6%8E%A5%E5%85%A5%E9%BB%9E"> AP</a></strong> 」誘導你自己「 <strong>連上該 WIFI</strong> 」達成「 <strong><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB">中間人</a>攔截封包</strong> 」的目的。</li>
<li>利用「 <strong>架設假的登入界面</strong> 」誘導你「 <strong>輸入帳號密碼登入</strong> 」達成「 <strong>竊取帳戶</strong> 」的目的。</li>
</ul>
<hr>
<h3 id="自己幫助駭客入侵自己">自己幫助駭客入侵自己</h3>
<p>在上述的各個例子中，你會發現一個規律…<br>
 就是這些入侵事件的關鍵步驟都是「 <strong>自己操作</strong> 」的！</p>
<blockquote>
<p>讓錢真正被調動的步驟是「 <strong>操作 ATM 轉帳</strong> 」<br>
誰操作 ATM 進行轉帳的？</p>
</blockquote>
<blockquote>
<p>電腦真正中毒的步驟是「 <strong>開啟惡意檔案</strong> 」<br>
誰點擊連結下載惡意檔案並開啟的？</p>
</blockquote>
<blockquote>
<p>被中間人攻擊的前一刻是「 <strong>連上 WIFI</strong> 」<br>
誰做連接 WIFI 的動作？</p>
</blockquote>
<blockquote>
<p>帳密傳入他人伺服器是因為在其他網站「 <strong>輸入自己的帳號密碼</strong> 」<br>
誰在釣魚網頁上輸入自己的帳號密碼？</p>
</blockquote>
<p>這就是 <strong>Social-Engineering (社交工程)</strong> 可怕之處，<br>
他不是利用資訊技術的漏洞讓你受害，<br>
他不必入侵你的電腦，他入侵的是你的心理。</p>
<hr>
<h3 id="心理學">心理學？</h3>
<p>仔細想想會發現，這的確與「 <strong>心理學</strong> 」有關，很多時候我們在實施社交工程前，會先了解目標所感興趣之事物，這有助於提升成功機率，例如對方喜歡「 <strong>貓</strong> 」，那麼在信箱中的病毒可能標題就會是「 <strong>可愛的貓咪圖檔</strong> 」，至於怎麼蒐集目標資訊… 。</p>
<hr>
<h3 id="我該怎麼預防">我該怎麼預防？</h3>
<p>其實在許多的資安宣導中一再的強調以下幾點：</p>
<blockquote>
<ul>
<li><strong>不隨意點擊來路不明的連結</strong>
<ul>
<li>當你不確定連結是否可靠時，千萬別因為一時的好奇心去點擊它，不妨先看看「<a href="https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D"><strong>Domain Name (網域名稱)</strong></a>」是什麼，覺得可疑的話，可以先拿去 Google 看看相關資訊。</li>
</ul>
</li>
<li><strong>盡量不使用非官方的檔案</strong>
<ul>
<li>使用任何非官方的載點時都有一定的風險，有些是官方的檔案被拿去「 <strong>加工</strong> 」過的，所以即使功能正常，你也很難保證背後不會有其他的惡意程序在運行。另外，許多標榜免費的「<a href="https://zh.wikipedia.org/wiki/%E6%B8%B8%E6%88%8F%E5%A4%96%E6%8C%82"><strong>遊戲外掛</strong></a>」其實是夾帶著病毒的，別讓自己的電腦成為 <a href="https://zh.wikipedia.org/wiki/%E6%AE%AD%E5%B1%8D%E9%9B%BB%E8%85%A6"><strong>肉雞 (Zombie, 殭屍電腦)</strong></a>！</li>
</ul>
</li>
<li><strong>公共場合的網路不要亂連</strong>
<ul>
<li>在許多如「 <strong>7-11</strong> 」、「 <strong>星巴克</strong> 」等公共場所都會搜尋到許多名稱像是「 <strong>Free-Wifi</strong> 」、「 <strong>Free-2F</strong> 」無密碼的無線網路，會讓人誤以為是店家提供給顧客使用的網絡，但實際上很多是有心人士所架設的，連上了將有被<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB"><strong> MITM (中間人攻擊)</strong></a> 的風險。</li>
</ul>
</li>
<li><strong>輸入帳密前先評估風險</strong>
<ul>
<li>首先，使用公共場所的裝置 (如圖書館電腦) 登入自身帳號本身就具有極高的風險，另外你還需要擔心剛剛所提到的「 <strong>釣魚網頁</strong> 」，請一定要在登入之前確認清楚「<a href="https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D"><strong>Domain Name (網域名稱)</strong></a>」。</li>
</ul>
</li>
<li><strong>防毒軟體 (？)</strong>
<ul>
<li>市面上有許多防毒軟體供你選擇，由於本人的電腦一台是 <a href="https://zh.wikipedia.org/wiki/Linux"><strong>Linux</strong></a> 作業系統，另一台是<a href="https://zh.wikipedia.org/wiki/Windows_10"><strong> Windows10</strong></a> 作業系統，前者沒安裝防毒軟體，後者其實個人認為內建的「 <strong><a href="https://zh.wikipedia.org/wiki/Windows_Defender">Windows Defender</a></strong> 」也夠用了，所以目前沒什麼可以推薦的防毒軟體，硬要說的話… 「 <strong><a href="https://zh.wikipedia.org/wiki/AVG_AntiVirus">AVG</a></strong> 」？ 但在此 <strong>不建議</strong>「<a href="https://zh.wikipedia.org/wiki/360%E5%AE%89%E5%85%A8%E5%8D%AB%E5%A3%AB"><strong>360 安全衛士</strong></a>」、「<a href="https://zh.wikipedia.org/wiki/Avira_AntiVirus"><strong>Avira AntiVirus 小紅傘</strong></a>」，原因其實圈內人都很清楚，當然這也只是<strong>我個人的想法</strong>，不代表真的不好。</li>
</ul>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Psychology (心理學)</tag>
        <tag>Social-Engineering (社交工程)</tag>
        <tag>Phishing (釣魚攻擊)</tag>
      </tags>
  </entry>
  <entry>
    <title>Symmetric-key Algorithm (對稱加密)</title>
    <url>/2020/02/10/Symmetric-keyAlgorithm(%E5%B0%8D%E7%A8%B1%E5%8A%A0%E5%AF%86)/</url>
    <content><![CDATA[<p>大家對於「<strong>密碼</strong>」並不陌生，生活中總是遇到許多場合需要用到密碼，然而「<strong>加密</strong>」的原理似乎相對的卻不是那麼的備受關注。</p>
<span id="more"></span>
<hr>
<h3 id="encrypt-加密">Encrypt (加密)</h3>
<p>從古至今，人們總是在<strong>通訊</strong>、<strong>隱私</strong>上想盡各種方法來提供擁有一定安全性的保護，例如戰國時期<strong>傳送密報</strong>，為了防止可能含有機密的信件被敵軍攔截，因此需要將內容給<strong>加密</strong>，這麼一來即使信件落入敵軍手中，也<strong>不能被解讀</strong>。<br>
在<strong>隱私</strong>上，相信大家也不陌生，現在網上許多服務都需要<strong>註冊會員</strong>，帳戶就需要設定<strong>密碼</strong>來<strong>驗證使用者的身份</strong>。</p>
<blockquote>
<ul>
<li><strong>加密 (Encrypt)</strong><br>
 以加密訊息為例，<strong>尚未加密</strong>的訊息，也就是一般<strong>可以被大家讀懂</strong>的訊息，我們稱作「 <strong>明文 (Plaintext)</strong> 」，而在經過 <strong>演算法加密 (鑰匙)</strong> 後所產出的結果，也就是<strong>不可被其他人解讀</strong>的加密訊息，則稱作「 <strong>密文 (Ciphertext)</strong> 」，並且上述這整個過程稱為「 <strong>加密 (Encrypt)</strong> 」。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>解密 (Decrypt)</strong><br>
 正常來說，明文使用「鑰匙」加密成密文，而密文也必須是擁有相對應鑰匙的人才能解讀內容，這邊所說的「 <strong>鑰匙</strong> 」並非是指現實中常見的那種開鎖的鑰匙，此指的鑰匙通常是一個<strong>數學算式</strong>或是<strong>一段文字</strong>，而這個鑰匙則是解開密文的關鍵，且該鑰匙我們稱作「 <strong>密鑰 (Key)</strong> 」，利用該密鑰來將密文還原成明文的過程則稱作「 <strong>解密 (Decrypt)</strong> 」。</li>
</ul>
</blockquote>
<hr>
<h3 id="symmetric-key-algorithm-對稱加密">Symmetric-key Algorithm (對稱加密)</h3>
<p>「 <strong>Symmetric-key Algorithm (對稱加密)</strong> 」為一種常見且原理簡單的<strong>加密思維</strong>，注意，它並<strong>不</strong>是<strong>加密法</strong>，它只是一個<strong>思維</strong>，在<strong>對稱加密中</strong>，上述的「 <strong>密鑰</strong> 」有個特點，就是<strong>加密跟解密的密鑰為同一把鑰匙</strong>，這邊使用情境來說明下什麼叫做「同一把鑰匙」：</p>
<blockquote>
<ul>
<li><strong>假設情境</strong><br>
<strong> A 先生</strong>因為某些原因，經常需要請<strong> B 先生</strong>代傳訊息給<strong> C 小姐</strong>，但同時<strong> A 先生</strong>又不希望<strong> B 先生</strong>知道該訊息的內容，因此<strong> A 先生</strong>決定使用<strong>對稱加密</strong>來傳送訊息。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>定義密鑰 並 共享</strong><br>
首先，<strong>A 先生</strong>需要設計至少一個密鑰，他將密鑰設定成數字「 <strong>2</strong> 」，並且在一開始的時候<strong> A 先生</strong>需要想辦法將該<strong>密鑰</strong>親手交給<strong> C 小姐</strong>，並且自己也保留一把<strong>一樣的密鑰</strong>。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>加密 並 傳送</strong><br>
前置作業完成後，接著<strong> A 先生</strong>想傳送一則訊息，其內容為「 <strong>Hello, 123</strong> 」，他將該明文使用密鑰加密，加密方法為將文字<strong>往後推移密鑰數</strong>，例如該情境中，密鑰為「 <strong>2</strong> 」，則英文「 <strong>A</strong> 」往後推<strong> 2 次</strong>變成「 <strong>C</strong> 」，數字「 <strong>3</strong> 」往後推<strong> 2 次</strong>則是「 <strong>5</strong> 」，以此類推，因此明文「 <strong>Hello, 123</strong> 」加密後會變成「 <strong>Jgnnq, 345</strong> 」，他將該密文請<strong> B 先生</strong>代傳給<strong> C 小姐</strong>，由於<strong> B 先生</strong>沒有密鑰「 <strong>2</strong> 」因而不懂該密文的含意。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>接收 並 解密</strong><br>
<strong> C 小姐</strong>在收到密文後，使用同一把密鑰「 <strong>2</strong> 」解密，<strong>加密</strong>為<strong>往後推移</strong>，<strong>解密</strong>則為<strong>往前推移</strong>，因此密文「 <strong>Jgnnq, 345</strong> 」在被<strong> C 小姐</strong>往前推移<strong> 2 次</strong>後，解密回明文的「 <strong>Hello, 123</strong> 」。</li>
</ul>
</blockquote>
<img src="/2020/02/10/Symmetric-keyAlgorithm(%E5%B0%8D%E7%A8%B1%E5%8A%A0%E5%AF%86)/01.png" class="" title="流程">
<p>這其中包含一個問題，為什麼<strong> A 先生</strong>與<strong> C 小姐</strong>知道怎麼使用該密鑰加密與解密，是誰規定「加密為往後推移密鑰數」及「解密為往前推移密鑰數」？</p>
<p>其實這些密鑰的「 <strong>使用規則</strong> 」被稱作「 <strong>加密演算法 (Encryption)</strong> 」或稱「 <strong>加密法</strong> 」，<strong>加密演算法</strong>也正是決定該加密安全性的關鍵之一。因此其實在<strong> A 先生</strong>將密鑰交給<strong> C 小姐</strong>時，有偷偷說了要使用哪種加密法，這樣雙方才能正確的運用密鑰進行運算來達到加密及解密的效果。</p>
<hr>
<h3 id="總結">總結</h3>
<p>當然，上面的情境只是舉例，僅僅是為了讓大家方便理解而虛構的場景，一般常見的加密演算法不會設計的這麼弱，也更不應該出現密鑰只有一個數字這種誇張的狀況，而密文通常也並不會與明文有著如此明顯的結構關係，通常只是亂碼，例如「 <strong>Hello, 123</strong> 」加密後的結果可能會長這樣「 <strong>1d5F68ghY8Xa59U6</strong> 」而不是「 <strong>Jgnnq, 345</strong> 」。</p>
<p>有興趣的朋友也可以看看下一篇延伸對稱加密更進階的文章「<strong><a href="/2020/02/16/Public-keyCryptography(%E9%9D%9E%E5%B0%8D%E7%A8%B1%E5%8A%A0%E5%AF%86)/" title="Public-key Cryptography (非對稱加密)">Public-key Cryptography (非對稱加密)</a></strong>」。</p>
<p>P.S. <strong>對稱加密中</strong>常見的<strong>加密演算法</strong>有：<br>
<a href="https://zh.wikipedia.org/wiki/%E8%B3%87%E6%96%99%E5%8A%A0%E5%AF%86%E6%A8%99%E6%BA%96"><strong>DES</strong></a>、<a href="https://zh.wikipedia.org/wiki/3DES"><strong>3DES</strong></a>、<a href="https://zh.wikipedia.org/wiki/%E9%AB%98%E7%BA%A7%E5%8A%A0%E5%AF%86%E6%A0%87%E5%87%86"><strong>AES</strong></a>、<a href="https://zh.wikipedia.org/wiki/Blowfish_(%E5%AF%86%E7%A0%81%E5%AD%A6)"><strong>Blowfish</strong></a>、<a href="https://zh.wikipedia.org/wiki/%E5%9C%8B%E9%9A%9B%E8%B3%87%E6%96%99%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95"><strong>IDEA</strong></a>、<a href="https://zh.wikipedia.org/wiki/RC5"><strong>RC5</strong></a>、<a href="https://zh.wikipedia.org/wiki/RC6"><strong>RC6</strong></a>。<br>
有興趣的朋友可以點擊連結或自行上網研究。</p>
]]></content>
      <categories>
        <category>Computer Science</category>
        <category>Cryptography</category>
      </categories>
      <tags>
        <tag>Cryptography (密碼學)</tag>
        <tag>Symmetric-key Algorithm (對稱加密)</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 18 如何顯示電量百分比？</title>
    <url>/2019/12/20/Ubuntu%E9%A1%AF%E7%A4%BA%E9%9B%BB%E9%87%8F%E7%99%BE%E5%88%86%E6%AF%94/</url>
    <content><![CDATA[<span id="more"></span>
<img src="/2019/12/20/Ubuntu%E9%A1%AF%E7%A4%BA%E9%9B%BB%E9%87%8F%E7%99%BE%E5%88%86%E6%AF%94/title.png" class="">
<hr>
<h3 id="幹話">幹話</h3>
<p>我本身是一位 Ubuntu 的愛好者，非常喜歡 Ubuntu 的美術設計。<br>
尤其當我從 16 版更新至 18 版時，那個模板看了真的是非常舒服！</p>
<p>當我興奮的開始觀察各個角落時，突然發現，畫面右上角好像怪怪的。<br>
ㄟ不是！怎麼沒有顯示電量百分比！ <s>我一整個就不爽了。</s></p>
<p>於是我開始查看設定，試圖尋找「顯示電池百分比」的相關設定項，但逛遍所有地方始終找不到，想到當初剛開始使用 Ubuntu 好像也遇過一次這樣的問題，模糊的印象中記得是要額外安裝個什麼的。<br>
記得好像… 跟 gnome 有關？<br>
：「喔，他媽的，想到了。」</p>
<h3 id="正式開始">正式開始</h3>
<p>更新套件</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">apt-get</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>歡迎今天的主角 — <strong>Gnome-Tweaks</strong>. 下載並啟動它</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">apt-get</span> <span class="token function">install</span> gnome-tweaks
$ gnome-tweaks<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>看到界面之後點選左邊欄位的「頂端列」<br>
裡面就可以開啟顯示電池百分比的設定啦！</p>
<img src="/2019/12/20/Ubuntu%E9%A1%AF%E7%A4%BA%E9%9B%BB%E9%87%8F%E7%99%BE%E5%88%86%E6%AF%94/setting.png" class="" title="Gnome-Tweaks">
]]></content>
      <categories>
        <category>Note (技巧分享)</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>一招啟動 Windows 10 「終極效能」！讓你的電腦瞬間活起來！</title>
    <url>/2021/04/06/Windows10-Ultimate-Performance/</url>
    <content><![CDATA[你還不知道 Windows 10 的「終極效能」模式嗎？嫌電腦變慢不如試試這個！
<hr>
<h2 id="什麼是ultimate-performance-終極效能">什麼是「<strong>Ultimate Performance (終極效能)</strong>」</h2>
<p>微軟在 <strong>Windows 10’s April 2018 Update</strong> 中添加了「<strong> <code>Ultimate Performance (終極效能)</code> </strong>」這樣一個模式，最初該更新被命名為「<strong>Spring Creators Update</strong>」，也正式從 <strong>Win-10 1803</strong> 版本後開始可以使用該模式。</p>
<hr>
<p><strong>Ultimate Performance (終極效能)</strong> 是一種「<strong>電源計劃</strong>」。<br>
可能有些人早就知道，Windows 10 提供我們選擇<strong>電源計劃</strong>的功能，在 <strong>Power Options (電源選項)</strong> 中，沒意外一般的電腦只會出現最多三種選項，分別是：</p>
<ul>
<li><strong> <code>Balanced (平衡)</code> </strong>: 讓為你自動調整效能，使耗電與效能平衡。</li>
<li><strong> <code>Power Saver (省電)</code> </strong>: 降低系統的效能以節省電源。 (通常是筆記型電腦處於低電量時系統自動開啟)</li>
<li><strong> <code>High Performance (高效能)</code> </strong>: 消耗更多的電力，讓系統發揮更高的效能。</li>
</ul>
<p>而 <strong>Ultimate Performance (終極效能)</strong> 則是比 <strong>High Performance (高效能)</strong> 模式的效能來的<strong>更強</strong>。<br>
欸？可是沒看到 <strong>Ultimate Performance (終極效能)</strong> 呀？<br>
別急，因為這個模式預設是給  <code>Windows 10 Pro</code>  使用的，其他版本的用戶是需要 <code>手動開啟</code> 的！</p>
<hr>
<h2 id="開啟-ultimate-performance-終極效能">開啟 <strong>Ultimate Performance (終極效能)</strong></h2>
<h3 id="step1-開啟-powerline">Step.1 開啟 Powerline</h3>
<ol>
<li>
<p>按下左下角的 <strong>Windows</strong> 圖示叫出 <code>選單</code> 。<br>
(你也可以按下鍵盤的 <strong> <code>Win</code> </strong> 鍵，如下圖，大概在左邊的 <code>Ctrl</code>  與 <code>Alt</code>  旁邊)<br>
<img src="win-key.jpg" alt="" height="300px"><br>
 這是選單的樣子:<br>
<img src="win-menu.png" alt=""></p>
</li>
<li>
<p>當選單跳出時，請<strong>直接</strong>在鍵盤輸入「<strong> <code>powershell</code> </strong>」。(ps. 注意<strong>輸入法</strong>要調整成<strong>英文</strong>)<br>
<a href="https://zh.wikipedia.org/wiki/Windows_PowerShell"><img src="powershell-logo.png" alt="" title="圖取自 Wiki 維基百科" align="left" width="30px"></a> 正常來說會找到這樣的 Logo，並寫著「<strong>Power Shell</strong>」字樣的程式:</p>
</li>
<li>
<p>對它點擊  <code>滑鼠右鍵</code>  &gt;  <code>以系統管理員身份執行</code> 。<br>
<img src="win-searching-powershell.png" alt=""><br>
沒意外應該會出現類似這樣 <code>籃底白字</code> 的視窗 (注意左上角應該要出現 <code>系統管理員</code> 字樣):<br>
<img src="powershell.png" alt=""></p>
</li>
</ol>
<h3 id="step2-輸入指令">Step.2 輸入指令</h3>
<p>首先複製以下這段指令:</p>
<pre class="line-numbers language-Powershell" data-language="Powershell"><code class="language-Powershell">powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>接著到剛剛的 <code>Power Shell</code>  視窗中，按下 <code>滑鼠右鍵</code> 貼上後按下 <code>Enter</code> 。</p>
<p><img src="powershell-command.png" alt=""></p>
<p>如果看到系統回應你如上圖的資訊，<br>
那麼恭喜你成功 <code>激活</code>  <strong>Ultimate Performance (終極效能)</strong> 模式！</p>
<p>但注意！這時候 <code>還沒啟動</code> 它。</p>
<p>如果系統沒有回應該訊息，那或許是 <strong> <code>指令輸入錯誤</code> </strong> ，請再確認輸入是否正確。<br>
並且請確認 <strong> <code>Power Shell</code> </strong> 是以 <strong> <code>管理員身份開啟</code> </strong> 。<br>
如果以上都做到了，還是不能，那很有可能是<strong>電腦版本不支援</strong>這個模式，前面有說到，Windows 的版本必須是 <strong> <code>1803 以上</code> </strong> 。</p>
<hr>
<h3 id="step3-啟動-ultimate-performance-終極效能">Step.3 啟動 <strong>Ultimate Performance (終極效能)</strong></h3>
<ol>
<li>
<p>跟剛剛一樣，在按下 <strong> <code>Win</code> </strong> 鍵叫出 <code>選單</code> 後，<strong>直接</strong>在鍵盤輸入「<strong> <code>control</code> </strong>」。<br>
如果右方有出現「<strong> <code>電源選項</code> </strong>」則直接點選，並跳至<a href="#%E6%9C%89%E5%87%BA%E7%8F%BE%E9%9B%BB%E6%BA%90%E9%81%B8%E9%A0%85%E7%9B%B4%E6%8E%A5%E8%B7%B3%E8%87%B3%E9%80%99%E8%A3%A1">步驟 3-4</a><br>
 沒有出現的話就點擊 <strong> <code>控制台</code> </strong> :<br>
<img src="win-search-control.png" alt=""></p>
</li>
<li>
<p>點選「<strong> <code>硬體與音效</code> </strong>」<br>
<img src="control.png" alt=""></p>
</li>
<li>
<p>點選「<strong> <code>電源選項</code> </strong>」<br>
<img src="control-hardware-and-printer.png" alt=""></p>
</li>
<li>
<h4 id="有出現電源選項直接跳至這裡">有出現電源選項直接跳至這裡</h4>
</li>
</ol>
<p>在這裡就可以看到下方出現「<strong> <code>終極效能</code> </strong>」的選項了！直接選取即可。<br>
(ps. 如果沒出現選項，那可能是被隱藏了，請點選右方按鈕)<br>
<img src="battery-option.png" alt=""></p>
<hr>
<h2 id="完成">完成</h2>
<p>這麼一來就完成了！<br>
但注意唷，建議如果沒有這個需求的朋友們平時不要開著這個模式，這會導致沒必要的耗電 (夏天電費很貴 QQ)</p>
<p>最後，如果這篇文章有幫助到你，那也請不吝嗇轉發分享給你的朋友們看唷！</p>
]]></content>
      <categories>
        <category>Note (技巧分享)</category>
      </categories>
      <tags>
        <tag>Windows 10</tag>
      </tags>
  </entry>
  <entry>
    <title>(18+) Xvideos情色爬蟲 -「XD」</title>
    <url>/2020/01/19/XD-XVideosDownloader/</url>
    <content><![CDATA[<p>相信許多老司機對「<em><strong>Xvideos.com</strong></em>」這個網站應該不陌生，此專案「<strong>XD</strong>」全名為「<strong>Xvideos Downloader</strong>」，顧名思義就是下載 Xvideos 影片用的程式 (不需擁有 Xvideos 帳號)。同時，這也是我第一個 Python 專案。</p>
<span id="more"></span>
<img src="/2020/01/19/XD-XVideosDownloader/title.png" class="" title="Thank icon designer - mikicon for made the logo">
<hr>
<h3 id="前言-初次接觸python">前言 (初次接觸 Python)</h3>
<p>近期突然想玩玩看<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E8%B7%AF%E7%88%AC%E8%9F%B2"><strong>爬蟲 (Crawler)</strong></a>，也在此刻才開始接觸腳本語言 - <a href="https://zh.wikipedia.org/wiki/Python"><strong>Python (蟒蛇)</strong></a>。<br>
其實早在兩三年前，友人「<strong>Honor</strong>」就推坑過我，可惜當時在我心中 C 語言的那種架構才是王道 <s>(其他都邪教)</s> ，所以我只接觸諸如<a href="https://zh.wikipedia.org/wiki/C%E2%99%AF"><strong> C#</strong></a>、<a href="https://zh.wikipedia.org/wiki/PHP"><strong>PHP</strong></a> 這類語言。至於爬蟲，基本上是 0 經驗，硬要說的話，只有以前高中做專題時，用 PHP 去抓 <a href="https://zh.wikipedia.org/wiki/%E9%96%8B%E6%94%BE%E8%B3%87%E6%96%99"><strong>OpenData</strong></a> 的資料來使用的經驗而已。</p>
<p>而我必須說，Python 當初開發時的構想「易懂易學」真的做到了！<br>
這個專案是我接觸 Python 兩個小時後就開始製作的，約不到兩天就成功產出。<br>
建議還沒玩過 Python 的朋友們可以開始入坑了 (X</p>
<hr>
<h3 id="題材選擇-為什麼是xvideos">題材選擇 (為什麼是 Xvideos？)</h3>
<div style="width:50%; margin:auto;">
<img src="/2020/01/19/XD-XVideosDownloader/xvideos_logo.png" class="" title="Xvideos logo">
</div>
雖然說下定決心要學習並製作個爬蟲小工具，但我這是屬於為了「學」而「做」，而不像一般專案一樣，先有「目的」再來「做」跟「學」，所以我很煩惱...要爬什麼呢？
我的理想是，這個專案必須是符合大眾族群，而不是單純針對工程師或者資訊領域的人，我也會希望當我把成品分享給身邊朋友們時，他們是感興趣的。
<p>人的生理需求中，就有那麼一項可以當作題材 - 「<a href="https://zh.wikipedia.org/wiki/%E6%80%A7%E6%AC%B2"><strong>性</strong></a>」。<br>
很多時候我會想，如果我要架服務，怎樣的服務賺錢最輕鬆？</p>
<ul>
<li>社交網站：使用者胃口永遠餵不飽，必須一直新增功能，太複雜。</li>
<li>搜尋引擎：目前可以說 <a href="https://zh.wikipedia.org/wiki/Google">Google</a> 一家獨大，太競爭。</li>
<li>影音平台：跟搜尋引擎的問題一樣，如何與 <a href="https://zh.wikipedia.org/wiki/YouTube">Youtube</a> 抗衡？</li>
<li>色情網站：完美！</li>
</ul>
<p>雖然說 <a href="https://zh.wikipedia.org/wiki/Pornhub">Pornhub</a> 已經是主流，但「色情」不像 Google 跟 Youtube 這麼嚴重，只要有色的地方，就會有流量！今天不管世界上色情網站有多少個 (競爭者多)，但只要有新的一出現，一樣會有不少人潮來光顧 (人類本性)。<br>
總有一部分的使用者，會因為網站風格、界面跟操作方式而被吸引成為常客、加入會員甚至使用付費服務。</p>
<p>於是我開始嘗試製作 Pornhub 爬蟲，但最終還是放棄。<br>
原因是，研究了半個小時過去，還是不明白哪裡可以爬，影片請求的部份有 <a href="https://zh.wikipedia.org/wiki/%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B8"><strong>Hash</strong></a> 驗證，在加上自己本身這方面知識不足，如果繼續研究太浪費時間了。<br>
雖說登入會員就有資料可以給它 Hash ，但是既然都要登入會員了，那就用 Pornhub 自己提供的下載功能就好了… 而我也不可能創建公共帳號給各位去使用吧 <s>(奇特思路)</s>，畢竟「大多數人」看片是不註冊會員的，所以我想製作的爬蟲是不用登入也可以抓檔的。</p>
<p>於是矛頭指向了同樣位於色情影片網站高地位的「<a href="https://zh.wikipedia.org/wiki/XVideos"><strong>Xvideos</strong></a>」。</p>
<hr>
<h3 id="我該如何使用">我該如何使用？</h3>
<p>我已經將專案放在<a href="https://github.com/alpaca0x0/PyCrawler_XVideosDownloader/">我的 Github</a> 上了。<br>
你可以透過 <strong>Python3 (或更高版)</strong> 運行目錄下的 <strong>main.py</strong> 來使用。<br>
若你不清楚什麼是 Python 腳本，你可以在 <a href="https://zh.wikipedia.org/wiki/Python">Wiki</a> 得到答案，安裝方法也可以透過<a href="https://www.google.com/search?q=install+python"> Google 搜尋</a>輕鬆找到。<br>
也推薦 Windows 用戶可以使用「<a href="https://pypi.org/project/PyInstaller/">PyInstaller</a>」來將 .py 打包成 windows 的 .exe 執行檔。</p>
<p>這也算不上是什麼專案，應該說是我自己的「Python 爬蟲練習」而已，如果你不喜歡，那麼請看看就好，請勿使用。</p>
<p>喔對了，你可以任意的<strong>修改</strong>、<strong>使用</strong>並<strong>發布更新</strong>，若你覺得不錯也可以轉傳給朋友們，但<strong>請聲明來源</strong>，這是一個對創作者的尊重。</p>
]]></content>
      <categories>
        <category>Project (專案分享)</category>
        <category>我的專案</category>
      </categories>
      <tags>
        <tag>18+</tag>
        <tag>MadeFromMe (我的專案)</tag>
        <tag>Python</tag>
        <tag>Crawler (爬蟲)</tag>
      </tags>
  </entry>
  <entry>
    <title>匿名安全的通訊 - 「XMPP」</title>
    <url>/2020/09/04/XMPP/</url>
    <content><![CDATA[<p><strong>駭客猖獗</strong>的網絡世界，<strong>匿名</strong>、<strong>安全</strong>成了<strong>通訊</strong>不可或缺的必要條件！本文將為你介紹安全性極高的協定 - 「 <strong>XMPP</strong> 」</p>
<span id="more"></span>
<img src="/2020/09/04/XMPP/cover.jpg" class="">
<hr>
<h3 id="xmpp-是什麼">XMPP 是什麼？</h3>
<p>「 <strong>XMPP</strong> 」全名「 <strong>Extensible Messaging and Presence Protocol</strong> 」，中譯「 <strong>可延伸訊息與存在協定</strong> 」，前稱為「 <strong>Jabber</strong> 」，是一種基於 <a href="https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F"><strong>TCP/IP</strong></a> 且為<a href="https://zh.wikipedia.org/wiki/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6"><strong>開源</strong></a>形式組織產生的<strong>網路即時通信協定</strong>，而<strong>非</strong>應用程式。</p>
<hr>
<h3 id="起源">起源</h3>
<ul>
<li><strong>1998 年</strong>「<a href="https://en.wikipedia.org/wiki/Jeremie_Miller"><strong>Jeremie Miller</strong></a>」開始了第一個 <strong>XMPP</strong> 伺服器端軟體「 <strong>jabberd</strong> 」的專案。</li>
<li><strong>2000 年 05 月</strong> 發行第一個公開版本。</li>
<li><strong>2004 年 10 月</strong> <strong>Jabber</strong> 已經由 <a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%B7%A5%E7%A8%8B%E4%BB%BB%E5%8A%A1%E7%BB%84"><strong>IETF</strong></a>（<strong>RFC3920</strong>）<a href="https://zh.wikipedia.org/wiki/%E6%A0%87%E5%87%86%E5%8C%96"><strong>標準化</strong></a>。</li>
</ul>
<p>來自世界各地的開發者正為 XMPP 技術而努力。<br>
今日的網際網路上有著數以<strong>萬</strong>計的 <strong>XMPP 伺服器</strong>正在運作著，並有數以<strong>百萬</strong>計的人們使用 <strong>XMPP 即時傳訊軟體</strong>。</p>
<hr>
<h3 id="架構">架構</h3>
<p><strong>XMPP</strong> 通訊上主要利用常見的 <strong>Client (客戶端)</strong> 、 <strong>Server (伺服器)</strong> 外，還多新增了 <strong>Gateway (閘道器)</strong> 。<br>
傳輸的內容格式則為 <a href="https://zh.wikipedia.org/wiki/XML"><strong>XML</strong></a>。</p>
<blockquote>
<ul>
<li><strong>Server (伺服端)</strong>
<ul>
<li>處理<strong>與 Client 的連接</strong>及直接與之<strong>互相溝通</strong></li>
<li>與<strong>其他 XMPP Server</strong> <strong>互相溝通</strong></li>
<li>處理 <strong>Client 註冊、認證、現狀資訊、好友名單</strong>以及<strong>離線訊息儲存</strong>等等功能。</li>
</ul>
</li>
<li><strong>Client (客戶端)</strong>
<ul>
<li>與 <strong>XMPP Server</strong> <strong>建立溝通連線</strong></li>
<li>解析 <strong>XML Stream</strong></li>
<li>確認 <strong>XMPP 核心資料型態</strong></li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h3 id="運用">運用</h3>
<p>每個 XMPP 的用戶，都有一個獨立的 <strong>Jabber ID (JID)</strong> ，並且使用「 <strong> <code>@</code> </strong> 」連接著 <strong> <code>domain</code> </strong> 。<br>
例如 ID 為「 <strong> <code>alpaca</code> </strong> 」， <strong> <code>Domain</code> </strong> 為「 <strong> <code>xmpp.com</code> </strong> 」，則 <strong> <code>JID</code> </strong> 為「 <strong> <code>alpaca@xmpp.com</code> </strong> 」。<br>
不僅僅是看起來，就連網路架構都與<a href="https://zh.wikipedia.org/wiki/%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6"><strong>電子郵件</strong></a>相似。</p>
<p><strong>XMPP 協議</strong>是<strong>自由</strong>、<strong>開放</strong>、<strong>公開</strong>的。<br>
在<strong>客戶端</strong>、<strong>伺服器</strong>、<strong>元件</strong>、<strong>原始碼庫</strong>等方面，都已經各自有多種實作。</p>
<p>除了可用在<strong>即時通訊</strong>的應用程式，還能用在<strong>網路管理</strong>、<strong>內容供稿</strong>、<strong>協同工具</strong>、<strong>檔案共享</strong>、<strong>遊戲</strong>、<strong>遠端系統監控</strong>等。</p>
<hr>
<h3 id="安全性">安全性</h3>
<p><strong>XMPP 核心協定通信方式</strong>是先建立一個 <strong>Stream</strong>，以 <strong>TCP</strong> 傳遞 <strong>XML 資料流</strong>。不存在<strong>中央主伺服器</strong>，每個人皆可運行自己的 <strong>XMPP Server</strong>。</p>
<p><strong>XMPP 協定</strong>的<strong>伺服器</strong>可以<strong>獨立於公眾 XMPP 網路</strong>（例如在企業內部網路中），而使用 <a href="https://zh.wikipedia.org/wiki/%E7%AE%80%E5%8D%95%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%AE%89%E5%85%A8%E5%B1%82"><strong>SASL</strong></a> 及 <a href="https://zh.wikipedia.org/wiki/%E5%82%B3%E8%BC%B8%E5%B1%A4%E5%AE%89%E5%85%A8%E6%80%A7%E5%8D%94%E5%AE%9A"><strong>TLS</strong></a> 等技術的可靠安全性，已<strong>內建</strong>於核心 XMPP 技術規格中。</p>
<p>用 XMPP 技術開發軟體，<strong>資源</strong>及<strong>支援</strong>的來源是多樣的，這能避免發生因不明軟體背後的運作而遭到軟體挾持的困境。</p>
<hr>
<h3 id="主要參考資料">主要參考資料</h3>
<ul>
<li><strong>IETF</strong> - <a href="//tools.ietf.org"><strong>tools.ietf.org</strong></a></li>
<li><strong>Wiki</strong> - <a href="//zh.wikipedia.org/wiki/%E5%8F%AF%E6%89%A9%E5%B1%95%E6%B6%88%E6%81%AF%E4%B8%8E%E5%AD%98%E5%9C%A8%E5%8D%8F%E8%AE%AE"><strong>wikipedia.org</strong></a></li>
</ul>
]]></content>
      <categories>
        <category>Information (資訊分享)</category>
      </categories>
      <tags>
        <tag>Cyber Security (網絡安全)</tag>
      </tags>
  </entry>
  <entry>
    <title>Hacker 駭客的定義｜白帽？黑帽？灰帽？｜帶你了解各種帽子顏色所代表的含意</title>
    <url>/2020/10/20/hacker/</url>
    <content><![CDATA[<p>時常在<a href="https://zh.wikipedia.org/wiki/%E5%A5%BD%E8%8E%B1%E5%9D%9E"><strong>好萊塢</strong></a>電影中看到駭客的身影，他們給人的形象往往都是<strong>負面</strong>、<strong>惡意</strong>且具有<strong>強烈人格特質</strong>的，這不僅讓人被那獨特的魅力吸引，更多的是那讓人<strong>想一探究竟卻又不敢接近的神秘</strong>，因此「<strong>駭客</strong>」一詞也常受到大家<strong>尊敬</strong>及<strong>崇拜</strong>。</p>
<span id="more"></span>
<hr>
<h3 id="何為-hacker-駭客">何為 <strong>Hacker (駭客)</strong> ？</h3>
<p>實際上「<strong>駭客</strong>」所指的意思僅僅是「<strong>對計算機知識有著高度理解力的人</strong>」，屬於<strong>正向</strong>名詞。也就是說，駭客其實是包含著<strong>正義</strong>與<strong>邪惡</strong>的，我們通常習慣用各種顏色的「<strong>帽子</strong>」來稱呼：</p>
<blockquote>
<p><img src="hat-black.png" alt="Black Hat" width="30%"></p>
<ul>
<li><strong>Black Hat (黑帽)</strong>
<ul>
<li>黑帽駭客通常就是大家<strong>刻板印象</strong>中的那種，因<strong>特定目的</strong>而執行「<strong>網絡攻擊</strong>、<strong>竊取資料</strong>、<strong>販賣個資</strong>」等<strong>違反</strong>計算機安全行動的人，通常是為了從中獲取<strong>利益</strong>。</li>
</ul>
</li>
</ul>
<hr>
<p><img src="hat-white.png" alt="White Hat" width="30%"></p>
<ul>
<li><strong>White Hat (白帽)</strong>
<ul>
<li>又稱「<strong>道德駭客</strong>」，通常指的是<strong>資訊安全人員</strong>、<strong>安全顧問</strong>等相關職位，亦可指<strong>為打擊網絡犯罪盡力的駭客</strong>。他們經常幫助企業進行 <a href="https://zh.wikipedia.org/wiki/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95"><strong>Pen-Test (滲透測試)</strong></a> 檢測漏洞並回報。</li>
</ul>
</li>
</ul>
<hr>
<p><img src="hat-gray.png" alt="Gray Hat" width="30%"></p>
<ul>
<li><strong>Gray Hat (灰帽)</strong>
<ul>
<li>又稱「<strong>自由駭客</strong>」，就像<strong>黑帽</strong>與<strong>白帽</strong>的綜合，通常為了自己的信念，可以做出如同黑帽的犯罪行為，但在許多時候，也會出面打擊犯罪，可以說是遊走在<strong>法律邊界</strong>。</li>
<li>許多時候他們所發起的攻擊行動僅僅是想<strong>提醒</strong>對方「<strong>你的系統有漏洞</strong>」，既<strong>不</strong>完全為了<strong>利益</strong>，也並<strong>非</strong>都是<strong>惡意</strong>。</li>
</ul>
</li>
</ul>
</blockquote>
<p>如果還要再細分，那麼還可以分成：</p>
<blockquote>
<p><img src="hat-red.png" alt="Red Hat" width="30%"></p>
<ul>
<li><strong>Red Hat (紅帽)</strong>
<ul>
<li>簡單來說，可以理解成是<strong>受聘於政府單位</strong>的駭客。他們為政府做事，包括像是政府養的<strong>網軍</strong>，在必要時對<strong>敵國</strong>發起<strong>網絡攻擊</strong>。他們雖然像<strong>白帽</strong>一樣打擊<strong>黑帽</strong>，但卻是以<strong>惡意攻擊</strong>的方式來反擊，用<strong>以暴制暴</strong>的方式來打擊犯罪。</li>
</ul>
</li>
</ul>
<hr>
<p><img src="hat-blue.png" alt="Blue Hat" width="30%"></p>
<ul>
<li><strong>Blue Hat (藍帽)</strong>
<ul>
<li>又稱「<strong>報復者</strong>」，他們平時<strong>不</strong>為非作歹，但會在受到<strong>挑釁</strong>、<strong>威脅</strong>等可能<strong>危害自身利益</strong>的情況時，會用<strong>惡意攻擊</strong>的方式反擊對方。標準的「人不犯我，我不犯人」。</li>
</ul>
</li>
</ul>
<hr>
<p><img src="hat-green.png" alt="Green Hat" width="30%"></p>
<ul>
<li><strong>Green Hat (綠帽)</strong>
<ul>
<li>可以理解成是初入的<strong>萌新</strong>，努力的學習計算機知識，充滿希望的一張白紙。只要有心，任何人都可以成為下一個<strong>綠帽駭客</strong>。<s>(帽子要帶好 www)</s></li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h3 id="其他分類">其他分類</h3>
<blockquote>
<p><img src="cracker.webp" alt="Cracker" width="30%"></p>
<ul>
<li><strong>Cracker (劊客)</strong>
<ul>
<li>又稱「<strong>破壞者</strong>」，一般大家所認知的那種專門搞<strong>破壞</strong>、<strong>竊取資料</strong>、<strong>散播電腦病毒</strong>的駭客，我們可以稱作「<strong>Hacker (駭客)</strong>」但更準確的稱呼則是「<strong>Cracker (劊客)</strong>」。他們通常沒有道德標準 (或很低)。Hacker 們建造，而 Cracker 負責破壞。</li>
</ul>
</li>
</ul>
<hr>
<p><img src="hat-script-kiddie.png" alt="Script Kiddie" width="30%"></p>
<ul>
<li><strong>Script-Kiddie (腳本小子)</strong>
<ul>
<li>為<strong>貶義詞</strong>，通常用來描述那些以「<strong>駭客</strong>」自居並<strong>沾沾自喜</strong>的初學者。<br>
他們通常<strong>沒有</strong>太高的技術，且喜歡使用<strong>他人</strong>所開發好的<strong>攻擊程式</strong>來<strong>惡意破壞</strong>他人系統，藉此使得他的朋友感到驚訝，並期望因此受到崇拜。<br>
在資訊安全領域中，這種人幾乎在哪都受到唾棄。</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h3 id="更多詳情">更多詳情</h3>
<blockquote>
<ul>
<li>更多詳情請看 <a href="https://zh.wikipedia.org/wiki/%E9%BB%91%E5%AE%A2"><strong>Wiki 維基百科 - Hacker</strong></a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>Popular-Science (科普)</category>
      </categories>
      <tags>
        <tag>Cyber Security (網絡安全)</tag>
        <tag>Hacker (駭客)</tag>
      </tags>
  </entry>
  <entry>
    <title>中二病 (ちゅうにびょう)</title>
    <url>/2020/01/26/%E4%B8%AD%E4%BA%8C%E7%97%85/</url>
    <content><![CDATA[<p>是否曾經聽到有人被罵「<strong>中二病</strong>」，好像知道是什麼意思，但又似懂非懂？現在的網路社會裡，如果你還不知道這個詞，就太誇張啦～ 趕快學起來吧！</p>
<span id="more"></span>
<hr>
<h3 id="來源">來源</h3>
<p>「<strong>中二病</strong>」為日文，發音為「<strong>ちゅうにびょう</strong>」，簡稱「<strong>中二</strong>」，是形容詞、微貶義詞。此指的「<strong>中二</strong>」原指「<strong>國中二年級</strong>」。<br>
是日本網絡流行文化中的詞，在台灣現今的網絡文化中也被廣泛的使用。</p>
<p><strong>Wiki 維基百科</strong> 中有提到起源：</p>
<blockquote>
<p>1999 年 1 月 11 日，在日本搞笑藝人伊集院光主持的 TBS 廣播節目《伊集院光 深夜的笨蛋力》（伊集院光 深夜の馬鹿力），「中二病」及其「症狀」首度被明確提出後廣為人知。當時只有伊集院光的聽眾之間有在使用，之後逐漸在網誌和 BBS 流傳成為網路用語。 <a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E4%BA%8C%E7%97%85"><strong>- ReadMore…</strong></a></p>
</blockquote>
<hr>
<h3 id="解釋含意">解釋含意</h3>
<p>通常意指「<strong>沉浸在自我幻想</strong>」的人，類似於<a href="https://zh.wikipedia.org/wiki/%E5%A6%84%E6%83%B3%E7%97%87">妄想症</a>。<br>
這類人的行為或言語充滿「<strong>自我滿足</strong>」，活在自己的世界裡，極力的想展現自身的人格特質，且價值觀往往與他人不合，過度的自信及自我為中心的心態，因此常會有受到同儕排擠的狀況發生。<br>
雖然說是中二「病」，但實際上，這在醫學裡不能被解釋成是疾病，應該說，這算是一種「<strong>心態</strong>」，一種自我認知的偏差，及… 幼稚。</p>
<p>有時候夾帶著的是「<strong>悲劇英雄</strong>」的情節，例如明明沒事，卻整天說自己從小就心臟不好，所以活的比一般人還困難之類的，再不然就是裝有病痛，渴望他人關切的同時，亦不想得到關懷，認為自己本身孤獨，是個矛盾的心態。</p>
<p>常見的例子還有，模仿動漫或電視劇裡自己覺得很帥的台詞跟動作，例如「<strong>別靠近我，我抓狂起來自己也控制不了。</strong>」等…</p>
<p>而是「<strong>中二</strong>」的原因是因為，在當時，日本人普遍認為該症狀多半發生在國中二年級的年紀，但自從這個詞出現後，事實證明，許多年紀更大的族群也是存在中二病的…</p>
<hr>
<h3 id="例子">例子</h3>
<p>以下舉幾個情境台詞。<br>
乍聽之下覺得很好笑，但對中二病患者來說這就是帥：</p>
<ul>
<li>「<strong>別逼我，我的黑暗力量隨時會爆發！</strong>」- 幻想能力</li>
<li>「<strong>我的身體狀況從小就比較差，你們不懂啦。</strong>」- 幻想病徵</li>
<li>「<strong>當我專注看著一個人，我就可以知道他在想什麼。</strong>」- 幻想能力</li>
<li>「<strong>我有雙重人格，很多時候我的行為會比較奇怪。</strong>」- 幻想病徵</li>
</ul>
<p>注意，上述的這幾個狀況是從一個正常無病的人口中說出，並且引以為傲。</p>
<hr>
<h3 id="產生此症狀的原因">產生此症狀的原因</h3>
<p>形成中二病的原因有很多種，普遍認為是在成長過程中未能得到足夠的關愛，或者單純心智尚未發展成熟。</p>
<p>在此呼籲，如果各位真的遇到中二病患者，不要以異樣眼光去看待及排擠，若是真的不舒服，可以簡單敷衍就好，畢竟他是沒有惡意的。</p>
]]></content>
      <categories>
        <category>Popular-Science (科普)</category>
      </categories>
      <tags>
        <tag>Cyberculture (網絡文化)</tag>
      </tags>
  </entry>
  <entry>
    <title>淺談AI人工智慧的深度學習概念 (新手也能理解的基礎)</title>
    <url>/2019/12/12/%E6%B7%BA%E8%AB%87AI%E4%BA%BA%E5%B7%A5%E6%99%BA%E6%85%A7%E7%9A%84%E6%B7%B1%E5%BA%A6%E5%AD%B8%E7%BF%92%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<p><a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"><strong>人工智慧 (AI, Artificial Intelligence)</strong></a> 是目前被大眾探討的焦點話題之一，創造出具有 &quot;智能&quot; 的科技產品一直是人類夢寐以求的，在諸如 智慧冰箱、聲控音響及<a href="https://zh.wikipedia.org/wiki/%E8%98%8B%E6%9E%9C%E5%85%AC%E5%8F%B8"> Apple</a> 知名的智能助理 - <a href="https://zh.wikipedia.org/wiki/Siri"><strong>Siri</strong></a> 等產品，都能看到人類對於創造智能科技的渴望。<br>
而這所謂的 &quot;AI&quot; 其運作原理為何？又與其他一般的科技產品差在哪？以下帶您淺談 AI 的運作概念。</p>
 <span id="more"></span>
<hr>
<p>首先，在了解 AI 之前，我們要先探討 —<br>
「 <strong>為何以往的科技產品無法實現智能行為</strong> 」這個問題。</p>
<h3 id="過去的機器人-delai人工智障-artificial-idiotdel">過去的機器人 <del>AI 人工智障 (Artificial Idiot)</del></h3>
<p>對於以往的科技產品來說，不外乎就是撰寫程式指令，讓這些程式去完成複雜的程序，使其處理更快、更有效率，例如 醫學上癌細胞病變機率、軍事上發射飛彈的角度，又或者是數學家追求的圓周率 等複雜的運算。然而再強大的程式，它也僅僅只是遵循設計者所撰寫的指令一行一行的跑，並不會突然跳脫出設計者所設計的範圍 (暫不討論漏洞情況)。簡單來說，不論這支程式看起來多厲害，它最終依舊是 &quot;死&quot; 的。</p>
<p>若是要單靠敲鍵盤打出一行又一行的程式，去塑造出一個能表現的近乎人類行為的產品，理論上是辦不到的，原因就在於，生活中的 &quot;<strong> 例外</strong> &quot; 太多了。當一個新的例外出現時，對於此產物來說是陌生的，並且它也不能處理眼前所發生的狀況，這時候你又必須多加幾行程式跟它解釋「眼前狀況是什麼」，想想都覺得累，倒杯水，問你杯子是什麼，要喝時再問你水是什麼，喝下去後又問你水去哪了，沒有任何一個設計師會願意做出這樣的「人工智障」。反倒透過告訴它「水」的定義，並讓它理解人類需要水分才能生存。攝取水分的動作中，水需要有容器裝載，所以推測出「杯子」是「裝水的容器」，並且加上剛剛說的「人類需要攝取水分」這條原則，進而判斷出此現象就是「人類用杯子裝水後，攝取杯中的水分」。</p>
<hr>
<h3 id="機器的自主學習">機器的自主學習</h3>
<p>秉持著「 <strong>與其給魚，不如教怎麼釣魚</strong> 」的概念，「 <strong>與其告訴它答案，不如教它如何自己學習</strong> 」<br>
對的！「 <strong>讓它自己學習</strong> 」這樣的思維就這麼產生了！</p>
<p>其實早在 20 世紀 40 年代後期，心理學家 <a href="https://zh.wikipedia.org/wiki/%E5%94%90%E7%BA%B3%E5%BE%B7%C2%B7%E8%B5%AB%E5%B8%83"><em><strong>唐納德・赫布</strong></em></a> 就根據「神經可塑性」的機制，創造了一種對學習的假說，現在稱作<a href="https://zh.wikipedia.org/wiki/%E8%B5%AB%E5%B8%83%E5%9E%8B%E5%AD%A6%E4%B9%A0">赫布型學習</a>。赫布型學習被認為是一種典型的「<a href="https://zh.wikipedia.org/wiki/%E9%9D%9E%E7%9B%91%E7%9D%A3%E5%BC%8F%E5%AD%A6%E4%B9%A0">非監督式學習</a>」規則，也就是剛剛所提到的 — 「 <strong>自行學習</strong> 」。</p>
<p>運用這樣的技術，這些科技產物的行為似乎看起來就再也不是受到設計者所限制了，轉而運用程式內的<strong>演算法</strong>，去<strong>推斷</strong>出哪些資料屬於什麼，並自行做<strong>歸類</strong>，而在往後每次發生例外時，就自行透過以往的<strong>學習經驗</strong>判斷且有效的<strong>整理</strong>這陌生的例外，並且將它納入自身新的<strong>經驗</strong>裡。</p>
<p>有些讀者可能發現了，上述的這種思維，其實就近乎是我們生物的學習模式，舉人類當例子，嬰兒誕生時便賦予「學習」的功能，看到什麼、聽到什麼或者摸到什麼，都會在腦中紀錄，透過不斷的累積經驗，往後發生問題，便能透過以往的經驗去判斷最佳解，即使再次失敗，也能透過納入失敗的經驗，來學習成長。</p>
<p>遇到問題，能透過不斷的學習，運用統計學歸納出各項可能之比重，進而做出更正確的判斷，學習次數越多次，代表樣本越多，則判斷將會更精準，這樣的科技可怕就在於，機器將會透過自身的高效學習，以極高的速度成長。</p>
<p>如果還是不清楚這樣的概念，沒關係，以下舉簡單的例子說明：<br>
假設一個情境，當您對 AI 說「你好！」，AI 從過去的學習裡知道了關於「你好」一詞是屬於「打招呼」類型的句型，且基於禮貌需要給於回應，而 &quot;回應&quot; 關聯的詞有「喔、你好、知道、不知道」，透過歸類後判斷，「知道、不知道」不能用於此做回應，所以剩下的可能性就是「喔、你好」，在沒有其他可判斷的條件下，分配比重「喔 50％、你好 50％」，機率一樣的情況，隨機抽取，選出「喔」，經過這些判斷後，AI 回應您「喔！」，結果您生氣了，您對 AI 說：「你的態度很不好！」，於是 AI 透過這次的<strong>經驗</strong>學習到了用「喔」作為打招呼的回應是「態度很不好」的，於是從新調整比重「喔 25%，你好 75％」，在往後您對 AI 說「你好」時，他便會因為過去經驗所調整得比重，而選擇最適合的回應，即此例子中回應您「你好」。</p>
<hr>
<h3 id="結論">結論</h3>
<p>人工智慧是運用「 <strong>類神經網絡</strong> 」來達到與生物相似的「 <strong>學習</strong> 」效果。<br>
越多的參考樣本 (經驗) 就越能準確的判斷發生問題時的最佳解，透過不斷的失敗，累積經驗來提昇自身判斷的準確度，標準的<strong>越戰越勇</strong>！<br>
因為經驗越多學習越精準，所以在訓練這些 AI 時，我們通常會使用<strong>很多很多的數據</strong>讓 AI 當作樣本參考並學習，這樣的現象我們稱之為「 <strong><a href="https://zh.wikipedia.org/wiki/%E5%A4%A7%E6%95%B8%E6%93%9A">Big Data (大數據)</a> 學習</strong> 」，這也就解釋了為什麼「大數據」總是跟「AI」的話題緊緊相連。</p>
<hr>
<h3 id="最後">最後</h3>
<p>總合以上所說，如果您都聽懂了，<br>
那恭喜您了解了「 <strong><a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C">人工神經網路 (ANN, Artificial Neural Network)</a></strong> 」的基礎概念。<br>
當然背後有更多複雜的邏輯思維，也有很多強大的演算法，<br>
但本文僅僅只是「淺談」則不深入探討，<br>
若是讀者有興趣可以自行上網搜尋「 <strong>神經網路學習</strong> 」的相關資料。</p>
]]></content>
      <categories>
        <category>Concept (概念分享)</category>
      </categories>
      <tags>
        <tag>AI (人工智慧)</tag>
        <tag>Neural Network(神經網絡)</tag>
        <tag>Deep Learning (深度學習)</tag>
        <tag>Machine Learning (機器學習)</tag>
        <tag>Big Data (大數據)</tag>
      </tags>
  </entry>
  <entry>
    <title>量子力學 (Quantum Mechanics)</title>
    <url>/2020/01/27/%E9%87%8F%E5%AD%90%E5%8A%9B%E5%AD%B8%20(Quantum%20Mechanics)/</url>
    <content><![CDATA[<p>量子力學？量子糾纏？<br>
觀測時結果不同！？<br>
無法掌握原理卻開始學著利用！</p>
<span id="more"></span>
<hr>
<h3 id="前言">前言</h3>
<blockquote>
<p>本文僅分享概念而<strong>非</strong>深入討論，並且為<strong>自身認知</strong>概念之分享。<br>
<strong>非專業人士</strong>，內容粗糙且<strong>可能有誤</strong>，徵求完美者，請斟酌觀看。</p>
</blockquote>
<hr>
<h3 id="量子-quantum-量子力學-quantum-mechanics">量子 (Quantum) ＆ 量子力學 (Quantum Mechanics)</h3>
<p>「 <strong>量子</strong> 」一詞源自於拉丁語「 <strong>Quantum</strong> 」，意指「 <strong>有多少</strong> 」。<br>
「 <strong>量子力學 (Quantum Mechanics)</strong> 」為物理學研究<strong>量子化</strong>的一個分支，屬於研究「 <strong>微觀世界</strong> 」的科學理論。</p>
<p>其實就現今的發展而言，我們對於「 <strong>量子</strong> 」這東西其實還是存在許多未解之迷，對於它神奇的運作原理，目前只能暫且先不討論，我們現在需要做的是，認識它並懂的使用它。</p>
<hr>
<h3 id="宏觀-macrocosm-與-微觀-microcosm-世界"><strong>宏觀 (Macrocosm)</strong> 與 <strong>微觀 (Microcosm)</strong> 世界</h3>
<blockquote>
<ul>
<li>宏觀 (Macrocosm)
<ul>
<li>肉眼所能看見的物體稱為「 <strong>宏觀物體</strong> 」，在宏觀的空間裡，發生的所有現象稱為「 <strong>宏觀現象</strong> 」，則「 <strong>宏觀世界</strong> 」為「 <strong>宏觀物體</strong> 」及「 <strong>宏觀現象</strong> 」之總稱。</li>
</ul>
</li>
<li>微觀 (Microcosm)
<ul>
<li>渺小至肉眼所不能看見的物體稱為「 <strong>微觀物體</strong> 」，在微觀的空間裡，發生的所有現象稱為「 <strong>微觀現象</strong> 」，則「 <strong>微觀世界</strong> 」為「 <strong>微觀物體</strong> 」及「 <strong>微觀現象</strong> 」之總稱。</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h3 id="量子糾纏-quantum-entanglement">量子糾纏 (Quantum Entanglement)</h3>
<p>量子力學中，當幾個粒子在互相作用影響後，各個粒子的特性被綜合成整體性質，已經無法對粒子單獨描述其性質，僅能描述整體系統時，則此現象稱為「<a href="https://zh.wikipedia.org/wiki/%E9%87%8F%E5%AD%90%E7%BA%8F%E7%B5%90"><strong>量子糾纏 (Quantum Entanglement)</strong></a>」。</p>
<p>並且神奇的是，在量子系統下的一對糾纏粒子<strong>不論相隔多遠</strong>，都能透過未知的方式<strong>互相連通、感應彼此</strong>。</p>
<hr>
<h3 id="雙縫實驗-double-slit-experiment">雙縫實驗 (Double-Slit Experiment)</h3>
<p>下圖是雙縫實驗的示意圖 (來源 - <a href="https://zh.wikipedia.org/wiki/File:2slits_quantum.jpg">Wiki 維基百科</a>)。<br>
在圖中可以看到將光打入一塊含有兩條縫隙的隔板中時，另一端會因為光源從兩個縫隙中跑出而分開，形成兩個分裂的光，並且在兩個光波互相干擾的情況下，牆上印照出數條明暗不一的光條。</p>
<p><img src="2slits_quantum.jpg" alt="" title="雙縫實驗示意圖 - From Wiki" width="85%"></p>
<hr>
<h3 id="使用-單粒子-進行-雙縫實驗-double-slit-experiment">使用「 <strong>單粒子</strong> 」進行「 <strong>雙縫實驗 (Double-Slit Experiment)</strong> 」</h3>
<p>我們知道「 <strong>光</strong> 」是由「 <strong>光子</strong> 」所組成，而光子是不可再被分割的。<br>
使用「 <strong>光子</strong> 」進行「 <strong>雙縫實驗 (Double-Slit Experiment)</strong> 」的實驗結果是科學史上，一個極度違反我們所認知物理常識的實驗結果。</p>
<p>一開始科學家使用光子進行雙縫實驗時，並無發現任何異狀，和預想的一樣，光子就是不可分裂的，因此在雙縫隔板中，光子一次只能穿越一條縫隙，若是同時打入多個光子分別穿越兩條縫隙，此時另一頭也會起到干擾作用，這也是必然的，畢竟光子與光子之間的波還是會互相干涉的。</p>
<p>到上述實驗為止，一切皆為正常現象，但接下來的實驗才是令科學家們感到驚訝的。</p>
<p>科學家嘗試在雙縫隔板中，一樣持續的打入光子並分別穿越兩條縫隙，但是這一次改成「 <strong>不同時</strong> 」，也就是說光子是輪流打入的，按理來說應該是不存在干涉情形的，一開始光子正常的<strong>看似</strong>沒受到干擾，但在持續的打入光子後，隔板的另一頭居然慢慢的形成與剛剛相似的「數條明暗不一的光條」。</p>
<hr>
<h3 id="波函式-wave-function">波函式 (Wave Function)</h3>
<p>其實，在「隔板」與「印照光條的那面牆」中間，有著一張我們看不見的「網子」，這張網子能夠對於粒子起到<strong>有規律</strong>的干擾作用。每個粒子在打入縫隙，從另一頭出來後就開始接受干擾，並且隨機落在此干擾網所干擾後的範圍內，注意，此範圍是固定的，但有多個範圍，落點是隨機的，也就是說，「 <strong>範圍</strong> 」就是上述的「 <strong>數條明暗不一的光條</strong> 」中的「 <strong>光條</strong> 」，而此光條有數個，光條範圍內的每個點都有可能是光子在干擾網干擾後的落點，因此只要光子打入夠多的數量，就能顯現越清楚的「光條」，等到落點顯現的夠多夠明顯後，就是剛剛所說的「數條明暗不一的光條」。</p>
<p>所以會不會有可能，在一開始的實驗中，同時打入光子至雙縫隔板而產生的數條光條，並非是隔板後兩個光子之間的波在互相干擾，而從頭到尾都是干擾波在干擾呢？</p>
<p>科學家想更進一步的了解這張無形的干擾網，他們在「隔板」至「印出光條的牆」之間使用儀器去監控，打算靠這樣觀察到光子在受干擾時的軌跡，結果… 更神奇的事情發生了…</p>
<hr>
<h3 id="波粒二象性-wave-particle-duality">波粒二象性 (Wave-Particle Duality)</h3>
<p>在儀器的監控下，光子打入雙縫隔板縫隙中，此時，在隔板後，牆上顯示的居然僅僅只是兩條大小一致的「 <strong>光的直射</strong> 」！ 等等，這跟未觀測時的結果不同啊！它就好像知道我們在看著它一樣。</p>
<p><strong>未觀測</strong>與<strong>觀測</strong>的運行結果不同，在量子力學中，<br>
這被稱作「 <strong>波粒二象性 (Wave-Particle Duality)</strong> 」。</p>
<hr>
<h3 id="波函式坍縮-wave-function-collapse">波函式坍縮 (Wave Function Collapse)</h3>
<p>這張干擾網，好像就在我們觀測它的同時，就失去了干擾的作用。</p>
<blockquote>
<p>「<em><strong>某些量子力學體系與外界發生某些作用後波函數發生突變，變為其中一個本徵態或有限個具有相同本徵值的本徵態的線性組合的現象。</strong></em>」 - <a href="https://zh.wikipedia.org/wiki/%E6%B3%A2%E5%87%BD%E6%95%B0%E5%9D%8D%E7%BC%A9">Wiki 維基百科</a></p>
</blockquote>
<p>至於為什麼在被觀察時，會對 光子 (或其他受測粒子) 的運動軌跡造成改變，這點到目前還是個問號。</p>
<hr>
<h3 id="感想">感想</h3>
<p>量子力學的技術若是能在日後成功掌握，這必將是人類科技發展的一大步！量子電腦的發展，超越超級電腦的運算速度，用在許多諸如醫學或者數學上的運算則會有極高的效率。<br>
同時我也擔心該項技術被有心人士利用，例如利用量子電腦的運算速度實施「密碼爆破」。<br>
不過想必該技術在普及之前，也一定會實施預防的相關方案… 吧？</p>
]]></content>
      <categories>
        <category>Concept (概念分享)</category>
      </categories>
      <tags>
        <tag>量子力學 (Quantum Mechanics)</tag>
      </tags>
  </entry>
  <entry>
    <title>Anonymous 匿名者｜恐怖份子？神秘的駭客組織？</title>
    <url>/2020/02/04/Anonymous/</url>
    <content><![CDATA[<p>「 <em><strong>面具之下不止是肉體，而是理念，肉體可以被子彈殺死，但理念永恆不滅，也無畏無懼。</strong></em> 」 - <strong>V</strong></p>
<span id="more"></span>
<hr>
<h3 id="前言">前言</h3>
<p>在過去，<strong>Anonymous</strong> 經常被當成<strong>恐怖份子</strong>、<strong>駭客軍團</strong>或是<strong>國際犯罪組織</strong>等，但事實上並非如此，他們不是惡勢力，相反的，他們的所有事蹟都圍繞著「<strong>平等</strong>」、「<strong>自由</strong>」為主要出發點。本文將講述什麼是 <strong>Anonymous</strong> ，以及他們的起源及理念。</p>
<hr>
<h3 id="起源">起源</h3>
<p><strong>Anonymous</strong>，中譯為「<strong>匿名者</strong>」，起源於<strong>西元 2003 年</strong>時，美國一個名為「<a href="https://zh.wikipedia.org/wiki/4chan"><strong>4chan</strong></a>」的貼圖論壇。在該論壇中，每個人可以自由且匿名的分享各個資訊，所有使用者都享有<a href="https://zh.wikipedia.org/wiki/%E7%84%A1%E6%94%BF%E5%BA%9C%E7%8B%80%E6%85%8B"><strong>無政府狀態</strong></a>的交流。</p>
<p>由於在 4chan 上匿名發文時，系統會顯示使用者們為「<strong>Anonymous</strong>」，因此後來，這群人形成了共識，就以 <strong>Anonymous</strong> 作為統稱。</p>
<p>一開始，大家只是因為好玩，而使用「Anonymous」作為名稱滲透遊戲及論壇，導致許多地方都可以看見一大批的用戶都叫「Anonymous」，僅僅是因為有趣而興起的一項網絡活動，後來形成了一個當時的網絡流行文化。</p>
<p>直到<strong>西元 2008 年</strong>，Anonymous 才有了第一次實質的團結運動，一個名為「<strong>Project Chanology</strong>」的活動被展開，該活動的內容為，以<strong>抗議</strong>、<strong>惡作劇</strong>和<strong>駭客攻擊</strong>的方式反對「<a href="https://zh.wikipedia.org/wiki/%E5%B1%B1%E9%81%94%E5%9F%BA%E6%95%99%E6%9C%83"><strong>山達基教會</strong></a>」，自此事件後，世界各地的 Anonymous 陸續發起更多與國際問題相關的駭客行動。</p>
<p>由於 Anonymous 在全球持續的出擊，因此也快速的吸引到了民眾的注意，而民眾們的反應也非常兩極，有些人認為他們是<strong>正義的私刑者</strong>，代替政府打擊犯罪，也有人認為他們是<strong>邪惡的駭客組織</strong>，甚至有人認為他們是<strong>國際恐怖份子</strong>，因為謠言的傳播，而導致 Anonymous 被污名化好一段時間。</p>
<hr>
<h3 id="組織理念">組織？理念？</h3>
<p><strong>Anonymous</strong> 並<strong>非</strong>是「<strong>組織</strong>」、「<strong>政黨</strong>」，而是「<strong>理念</strong>」，這點是很多人所不知道的，但也卻是最初 <strong>Anonymous</strong> 想傳達的一個重點。<br>
什麼是「<strong>理念</strong>」？跟「<strong>組織</strong>」的差別在於？<br>
你可以這麼想，<strong>組織</strong>是<strong>群體</strong>的，而<strong>理念</strong>可以是<strong>個體</strong>的，並且「<strong>理念</strong>」只是一個「<strong>思想</strong>」，沒有實質上要求你需要<strong>集合</strong>，也就是，只要你認同該理念的一瞬間，你就是 <strong>Anonymous</strong> ，不需登記，不需審核，任何人都可以隨時加入，這就是<strong>理念</strong>。</p>
<hr>
<h3 id="主要理念">主要理念</h3>
<p>Anonymous 的主要理念為希望人民擁有「<strong>平等</strong>」、「<strong>自由</strong>」的權利。<br>
該理念持續的為「<strong>民主</strong>」、「<strong>無戰爭</strong>」、「<strong>無貪污的政府</strong>」等相關事件發聲。</p>
<hr>
<h3 id="形象">形象</h3>
<p>當你在 Google 搜尋 「Anonymous」時，應該會看到許多帶著奇怪「<strong>面具</strong>」的人及「<strong>無頭西裝人</strong>」的圖片。</p>
<blockquote>
<ul>
<li><strong>面具</strong>
<ul>
<li>其實該面具為一部於 2005 年上映的反烏托邦政治驚悚電影「<strong>V for Vendetta</strong>」中，主角「<strong>V</strong>」所戴的面具，其面具名為「 <strong>Guy Fawkes mask (蓋伊・福克斯面具)</strong> 」，是依照「<a href="https://zh.wikipedia.org/wiki/%E7%9B%96%E4%BC%8A%C2%B7%E7%A6%8F%E5%85%8B%E6%96%AF"><strong>Guy Fawkes (蓋伊・福克斯)</strong></a>」的面容加以風格化而描繪成的一種肖像。在許多宣揚民主及自由相關的遊行抗議活動中，都可以看到該面具的蹤跡。</li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/02/04/Anonymous/Anonymous_at_Scientology_in_Los_Angeles.jpg" class="" title="圖源自Wiki，出現在公眾場合的匿名者，戴著流行於漫畫書和電影《V怪客》的面具。">
<blockquote>
<ul>
<li><strong>Anonymous Logo</strong>
<ul>
<li>「<strong>無頭西裝人</strong>」為 Anonymous 的象徵 Logo，當中的西裝人頭上被打上一個大大的問號「？」代表著，他們並<strong>不存在領導者</strong>，並且該 Logo 上的人物並未顯現出性別及人種、長相等，因為這些都不是重點，就如同理念般那樣，大家都是<strong>平等</strong>的。</li>
</ul>
</li>
</ul>
</blockquote>
<img src="/2020/02/04/Anonymous/Anonymous_Flag.svg" class="" title="圖源自Wiki，這標誌傳達與匿名者相關的象徵意義。「無頭西裝」意象代表無領袖抵抗和匿名。">
<blockquote>
<ul>
<li><strong>象徵台詞</strong>
<ul>
<li>「 <strong>We are anonymous, We are legion, We do not forgive, We do not forget, Expect us. (我們是匿名者，我們是軍團，我們不會原諒，我們不會遺忘，期待我們。)</strong> 」，這是 Anonymous 的經典台詞，在許多匿名者的網絡攻擊事件中，受攻擊的網站都會被貼上該台詞。</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h3 id="歷史事蹟">歷史事蹟</h3>
<p>過去到現在，Anonymous 發起了非常多次的活動，從網絡上的駭客行動至現實中的抗議遊行，都能看見他們的蹤跡，其中舉幾個著名活動分享給各位，有興趣看更詳細資訊可以上 <a href="https://zh.wikipedia.org/wiki/%E5%8C%BF%E5%90%8D%E8%80%85"><strong>Wiki 維基百科</strong></a> 網站觀看。</p>
<blockquote>
<ul>
<li><strong>打擊兒童色情</strong>
<ul>
<li>匿名者曾於<strong> 2011 年 10 月</strong>宣布展開名為「<strong>Operation Darknet</strong>」的行動，旨在打擊兒童色情網站。值得一提的是，他們攻陷並關閉一個擁有大量資料的地下<a href="https://zh.wikipedia.org/wiki/%E6%81%8B%E7%AB%A5"><strong>戀童癖</strong></a>網站。此網站名為蘿莉塔之城（洛麗塔之城），建於高度隱匿的 Tor 網路，擁有 100G 以上的色情資料。匿名者侵入該網站後，取得了 1589 名使用者的資料，並公之於眾。匿名者發表聲明稱該網站讓戀童癖的問題惡化，甚至會誘使他們進行誘拐、猥褻、強姦兒童。</li>
</ul>
</li>
<li><strong>入侵麻省理工網站</strong>
<ul>
<li>匿名者於<strong> 2013 年 1 月</strong>攻擊<a href="https://zh.wikipedia.org/wiki/%E9%BA%BB%E7%9C%81%E7%90%86%E5%B7%A5%E5%AD%A6%E9%99%A2"><strong>麻省理工學院</strong></a>的網域並更改標題頁以向死去的<a href="https://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8"><strong>亞倫・斯沃茨</strong></a>致敬，包括向美國著作權法制度提出多項改進的要求及一篇斯沃茨在<strong> 2008 年</strong>寫下的「<strong>開放獲取游擊隊宣言（Guerilla Open Access Manifesto）</strong>」，宣言中鼓勵每一個網路使用者行動起來，阻止商人與政客把網路私有化，將知識與資訊廣泛傳播。<br>
MIT.edu、DOJ.gov、W3.gov 等相關網站相繼被駭客關閉。</li>
</ul>
</li>
<li><strong>入侵菲律賓許漸華政府網站</strong>
<ul>
<li><strong>2013 年 3 月 4 日</strong> 沙巴衝突，馬來西亞與菲律賓駭客大戰，菲律賓總統府網站被匿名者馬來西亞分會成員攻佔。</li>
<li><strong>2013 年 5 月 13 日</strong>，自稱匿名者台灣分部的人入侵菲律賓各機構官方網站，要求菲律賓為<strong> 5 月 9 日</strong>「<strong>海岸防衛隊槍殺台灣漁民</strong>」事件道歉。在<strong> 13 日凌晨</strong>已經將菲律賓政府域名的 DNS 伺服器（dns.gov.ph）資料庫破解，並公開資料庫的帳號密碼。</li>
</ul>
</li>
<li><strong>入侵中共及港府網站</strong>
<ul>
<li>匿名者<strong> 2014 年 10 月 1 日</strong>通過<strong> News2Share 網站</strong>揚言將駭入香港政府的所有網站，表示不滿香港警方動用防暴警察、胡椒噴霧及催淚彈對付手無寸鐵的<strong>雨傘革命</strong>示威者，宣布開展一個代號為「<strong>Operation HongKong</strong>」的網路戰，不排除入侵政府內部網路，公啟動密資料或官員個人資料。<br>
根據 News2Share 收到的影片和被攻陷的網站截圖，匿名者已攻陷過<strong>民建聯</strong>、<strong>工聯會</strong>等多個香港建制派政黨的官網，電視廣播有限公司、香港政府新聞處（之後政府重建網頁）亦已被攻陷。<strong>10 月 4 日</strong>香港政府<strong>工業貿易署</strong>網頁亦已被攻陷。網站截圖顯示<strong>中國官媒人民日報</strong>網站<strong> 10 月 6 日</strong>遭攻陷。</li>
<li><strong>2014 年 10 月 12 日</strong>，匿名者聲稱<strong>攻破 52 個中國政府網站</strong>，並三次披露攻陷獲得的資料，主要來自浙江省長興縣人力資源和社會保障局及浙江省寧波市保稅區管理委員會。匿名者於<strong> 10 月 26 日</strong>攻下<strong>潮洲商會</strong>。<strong>10 月 27 日</strong>攻下<strong>冠忠巴士集團</strong>旗下<strong>環島旅運</strong>網頁。<strong>10 月 29 日</strong>攻下<strong>廣德縣物價局</strong>。<strong>12 月 2 日</strong>攻下<strong>哈爾濱工業大學博物館</strong>。</li>
<li><strong>2016 年 1 月 2 日</strong>，匿名者宣稱將要對任何中國共產黨網站發動網路攻擊，表示不滿<strong>銅鑼灣書店股東及員工失蹤</strong>事件，違反「<strong>一國兩制</strong>」的自由原則。</li>
<li><strong>2016 年 2 月 10 日</strong>，匿名者聲言會對香港政府的網站發動網路攻擊，表示不滿香港警方和政府處理<strong> 2016 年</strong>農曆新年<strong>旺角騷亂</strong>做法，經常用<strong>暴力對待市民</strong>，並<strong>企圖隱瞞事實</strong>。</li>
</ul>
</li>
<li><strong>公布香港警員的個人資料</strong>
<ul>
<li><strong>2019 年 6 月 25 日</strong>，匿名者在網上<strong>公布超過 600 名香港警員的個人資料</strong>，包括<strong>中英文姓名、手提電話號碼及其住址</strong>，表示<strong>不滿香港警方在同年 6 月 12 日<a href="https://zh.wikipedia.org/wiki/%E5%8F%8D%E5%B0%8D%E9%80%83%E7%8A%AF%E6%A2%9D%E4%BE%8B%E4%BF%AE%E8%A8%82%E8%8D%89%E6%A1%88%E4%BD%94%E9%A0%98%E8%A1%8C%E5%8B%95">反對逃犯條例修訂草案佔領行動</a>中打壓異見、暴力犯罪及侵犯人權的行為</strong>，並<strong>認為警方使用槍械和武器的行為已違反《<a href="https://zh.wikipedia.org/wiki/%E6%B5%B7%E7%89%99%E5%85%AC%E7%BA%A6">海牙公約</a>》和《<a href="https://zh.wikipedia.org/wiki/%E6%97%A5%E5%85%A7%E7%93%A6%E5%85%AC%E7%B4%84">日內瓦公約</a>》</strong>。他們稱今次的行動是為了香港市民及人類的福祉，並警告若香港警方「繼續犯罪」，他們將會向公眾公開全部警方成員的資料。</li>
</ul>
</li>
</ul>
</blockquote>
<p>另外還有較具有政治色彩的活動，像是：</p>
<blockquote>
<ul>
<li><strong>聲援周子瑜 (國旗事件)</strong>
<ul>
<li><strong>2016 年 1 月</strong>發生「<a href="https://zh.wikipedia.org/zh-tw/%E5%91%A8%E5%AD%90%E7%91%9C"><strong>周子瑜</strong></a>國旗事件」，一群自稱台灣匿名者於<strong> 1 月 16 日</strong>癱瘓<strong> JYP 娛樂</strong>的官方網站，要求 JYP 娛樂改回周子瑜的國籍並道歉。</li>
<li>香港一位匿名者於<strong> 1 月 19 日</strong>癱瘓<a href="https://zh.wikipedia.org/wiki/%E9%BB%84%E5%AE%89_(%E8%89%BA%E4%BA%BA)"><strong>黃安</strong></a>的經紀公司 — <strong>君樂天禧傳媒</strong>的官方網站。</li>
</ul>
</li>
<li><strong>攻擊川普</strong>
<ul>
<li><strong>2015 年 12 月</strong>，當時尚為總統候選人的<a href="https://zh.wikipedia.org/wiki/%E5%94%90%E7%B4%8D%C2%B7%E5%B7%9D%E6%99%AE"><strong>川普</strong></a>，因<strong>對穆斯林的爭議言論</strong>，遭匿名者癱瘓<strong>川普大樓</strong>的官網。</li>
<li><strong>2017 年 1 月</strong>一群自稱匿名者的人再度對美國川普總統宣戰，上網<strong>公開白宮職員的電話號碼</strong>，呼籲國際社會一起杯葛、撤資及制裁美國。<br>
他們呼籲包括向美國公民實施旅遊禁令、美國勞工抗爭、杯葛美國產品。批評川普不尊重國際法、人權及基本行為準則。</li>
</ul>
</li>
<li><strong>公布三 K 黨成員名單</strong>
<ul>
<li><strong>2014 年 8 月</strong>美國密蘇里州聖路易郡佛格森市<a href="https://zh.wikipedia.org/wiki/%E9%82%81%E5%85%8B%E7%88%BE%C2%B7%E5%B8%83%E6%9C%97%E5%91%BD%E6%A1%88"><strong>非裔青年布朗遭白人警察威爾森當街槍殺 (麥可・布朗命案)</strong></a>，後者卻於當年<strong> 11 月 24 日</strong>獲得<strong>不起訴</strong>處分，導致抗議民眾再度上街。當時<a href="https://zh.wikipedia.org/wiki/%E4%B8%89K%E5%85%9A"><strong> 3K 黨</strong></a>聲稱將使用「<strong>致命武力</strong>」對付示威民眾；匿名者隨後癱瘓<strong> 3K 黨相關網站</strong>，並駭入其兩個相關 <a href="https://zh.wikipedia.org/wiki/Twitter"><strong>Twitter</strong></a> 帳號。</li>
<li><strong>2015 年 10 月</strong>匿名者宣布將<strong>計劃公布 1,000 名美國 3K 黨及其外圍團體的成員名單</strong>，行動代號為「<strong>Operation KKK</strong>」。匿名者發布的新聞稿表示：揭開 3K 黨的真面目是正確的事，他們已長期觀察 3K 黨，揭露這些人的面紗是「正確之舉」；新聞稿中也提到，「 <em>你們比極端主義份子更過分、你們比仇恨團體更過分、你們的行動方式跟恐怖份子如出一轍，你們也應該被當作恐怖份子。</em> 」。</li>
<li><strong>2015 年 11 月 1 日</strong>匿名者表示，凡 3K 黨網站，都被該組織所追緝；3K 黨的伺服器已被他們關掉，也取得 3K 黨成員的個人資訊，另滲透入他們的臉書、推特。而這一切只是開頭而已。但某知名 3K 黨旗下推特帳號已暗示，5 日將舉行反匿名者遊行，以反制該駭客組織。</li>
<li><strong>2015 年 11 月 5 日</strong>匿名者依約<strong>公布 3K 黨匿名者及相關團體的成員名單</strong>，先前匿名者宣稱名單人數「近 1,000 名」，但在公布前夕移除部分仍需進一步調查確認者，自稱為謹慎起見，僅讓數百人曝光。匿名者表示，這份名單主要透過「<strong>人際情報 (HUMINT)</strong>」的資料收集法彙整而成，包括訪談專家與網路間諜行動，而非駭侵手段彙整出清單，並<strong>附上 3K 黨人臉書與 Google + 社群媒體帳戶或電子郵件資訊</strong>。匿名者聲明指出，「 <em>現實是，<a href="https://zh.wikipedia.org/wiki/%E7%A8%AE%E6%97%8F%E4%B8%BB%E7%BE%A9"><strong>種族主義</strong></a>並沒有戴著罩帽，而是滲透在我們文化的各個層面。</em> 」聲明也表示，匿名者摘去這些人的罩帽（HoodsOff）的部分原因不在其身分，而是「他們的罩帽在我們社會中的象徵意義」，但相關領域專家的初步反應則指出，其中大多是大眾已知的 3K 黨活動人士，不算太過刺激的披露，其中還具有一些誤導性的資訊。國際間對抗<a href="https://zh.wikipedia.org/wiki/%E5%8F%8D%E7%8C%B6%E5%A4%AA%E4%B8%BB%E7%BE%A9"><strong>反猶太主義</strong></a>的<a href="https://zh.wikipedia.org/wiki/%E5%8F%8D%E8%AA%B9%E8%AC%97%E8%81%AF%E7%9B%9F"><strong>反誹謗聯盟</strong></a>極端主義中心主任 <strong>Mark Pitcavage (皮特卡瓦奇)</strong> 指出，名單中大多數人的 3K 黨行為都並非秘密，「<strong>基本上是公眾層級的資訊</strong>」，其所列數百位人士當中，雖有些人確實有<a href="https://zh.wikipedia.org/wiki/%E7%99%BD%E4%BA%BA%E5%84%AA%E8%B6%8A%E4%B8%BB%E7%BE%A9"><strong>白人優越思想</strong></a>，但<strong>不是</strong> 3K 黨成員。<br>
匿名者這份名單原本打算在<strong>麥可・布朗命案</strong>中，槍殺黑人青年的白人警員獲不起訴的 1 周年（<strong>11 月 24 日</strong>）進行公布，但因<strong> 11 月 1 日</strong>出現自稱與「匿名者」合作者發布的<strong>假名單流傳</strong>，所以最後提前到對匿名者深具意義的<strong> 11 月 5 日</strong>公布。匿名者也聲明自己與這份假名單沒有關係。最後，匿名者還是成功把 3K 黨變成<strong>比較低調</strong>的地下組織。</li>
</ul>
</li>
<li><strong>攻擊伊斯蘭國 (ISIS)</strong>
<ul>
<li><strong>2014 年 6 月</strong>匿名者上傳了一段影片，針對「<a href="https://zh.wikipedia.org/wiki/%E4%BC%8A%E6%96%AF%E5%85%B0%E5%9B%BD"><strong>伊斯蘭國 (ISIS)</strong></a>」在伊拉克的<a href="https://zh.wikipedia.org/wiki/%E6%81%90%E6%80%96%E4%B8%BB%E7%BE%A9"><strong>恐怖主義</strong></a>行為展開代號「<strong>Operation Ice ISIS</strong>」的行動，宣稱「 <em>我們的榮譽守則促使我們要保護這些手無寸鐵的人們，無論是在網路世界還是現實世界。 (We are held by a code of honor to protect those who are defendless, both in the cyber world and the real world.)</em> 」，同時還警告了一些支援伊斯蘭國的國家和組織、以及「<strong>以安全或民主的名義支援軍火商發動戰爭</strong>」的美國。</li>
<li><strong>2015 年 2 月</strong>，匿名者<strong>對伊斯蘭國宣戰</strong>，並號召全球的駭客行動起來、共同<strong>抵制伊斯蘭國在網路空間的宣傳</strong>。匿名者宣稱「 <em>你們會被當做病毒對待，我們是治療者。 (You will be treated like a virus, and we are the cure)</em> 」。匿名者<strong>聲稱</strong>他們已經<strong>掌控或摧毀 1,000 多個伊斯蘭國的相關網站、社交媒體帳號及電子郵件位址</strong>，匿名者<strong>攻擊伊斯蘭國支持者的推特帳號</strong>，也<strong>嘗試關閉伊斯蘭國支持者的臉書專頁、部落格、網頁及代理伺服器</strong>；他們成功入侵一些帳號以後，便將<strong>帳號頭像</strong>換成日本動漫女孩「<a href="https://zh.wikipedia.org/wiki/ISIS%E9%85%B1"><strong>伊斯蘭國娘 (ISIS ちゃん)</strong></a>」的圖片。</li>
<li><strong>2015 年 11 月</strong>，<a href="https://zh.wikipedia.org/wiki/2015%E5%B9%B411%E6%9C%88%E5%B7%B4%E9%BB%8E%E8%A5%B2%E6%93%8A%E4%BA%8B%E4%BB%B6"><strong>巴黎襲擊事件後</strong></a>，匿名者<strong>在 Twitter 宣布向發動恐襲的伊斯蘭國宣戰</strong>，誓言「不會放過你們」，並<strong>在 YouTube 上傳影片叫伊斯蘭國「等著瞧」</strong>，<strong>伊斯蘭國則回擊稱匿名者不過是一群幼稚小孩，只能入侵 Twitter 和電子郵件的白痴</strong>。</li>
</ul>
</li>
</ul>
</blockquote>
<hr>
<h3 id="總結">總結</h3>
<p>看完該文章後，希望讀者對於該理念有著更多的了解，也請別再說「 <strong>Anonymous (匿名者)</strong> 」是組織啦～</p>
<p>另外補充一點：<br>
許多惡意的網絡攻擊事件都會與 Anonymous 扯上關係，許多攻擊者自稱匿名者，並發動惡意的網絡攻擊，但<strong>惡意</strong>的攻擊本身就違背了 Anonymous 的理念，因此我們並<strong>不能</strong>承認這種行為為 Anonymous。</p>
]]></content>
      <categories>
        <category>Information (資訊分享)</category>
      </categories>
      <tags>
        <tag>Hacker (駭客)</tag>
        <tag>Anonymous (匿名者)</tag>
      </tags>
  </entry>
  <entry>
    <title>詳細解說 Encode 編碼、Encrypt 加密、Hash 雜湊 的概念｜不要再搞混了！</title>
    <url>/2021/04/20/Encode-Encrypt-Hash/</url>
    <content><![CDATA[Encode (編碼)、Encrypt (加密)、Hash (雜湊) 一直令許多新手們搞混，雖然說可能運算後的結果看起來都是一串亂碼，但原理及使用場合卻天差地遠，千萬不要再分不清處了！
<hr>
<h2 id="encode-編碼">Encode (編碼)</h2>
<p>在計算機中，需要儲存大量資料，而這些資料基於各國的語言不同，可能是基本的 <code>英文</code> 或是博大精深的 <code>中文</code> ，中文又分 <code>簡體</code> 、 <code>繁體</code> ，甚至是由右至左書寫的 <code>阿拉伯文</code> 等。</p>
<p>雖然各種國家的文字零零種種非常多，尤其中文數量更是大的驚人，但這些文字對計算機來說都只是「<strong>字元</strong>」，更精確來說都只是機器語言，也就是常聽見的「<strong>0</strong>、<strong>1</strong>」，所以儲存上並難不倒它，問題就出在，如何 <code>顯示</code> 給使用者觀看？</p>
<blockquote>
<h3 id="ascii">ASCII</h3>
<p>舉例剛開始美國人使用的編碼「<strong> <code>ASCII</code> </strong>」，全名「<strong> <code>American Standard Code for Information Interchange (美國資訊交換標準代碼)</code> </strong>」，主要是用來顯示基本的  <code>阿拉伯數字</code> 、 <code>26 個英文字母(大小寫)</code> 、 <code>英式標點符號</code> 。但這很快就使得在其他語系的國家顯示上出現問題，例如 <code>西歐語言</code> 就無法套用在  <code>ASCII</code>  上。</p>
<p><a href="https://zh.wikipedia.org/wiki/ASCII#/media/File:USASCII_code_chart.png"><img src="USASCII_code_chart.png" alt="1968年版ASCII編碼速見表｜圖源自 Wiki 維基百科"></a></p>
<p>雖然後來也使用  <code>EASCII</code>  解決了部分西歐語言的顯示問題，但還是有著各式各樣的語言在顯示上有問題，這也是導致為什麼會有那麼多種編碼的原因之一，儘管有著這麼多的編碼，但也出現了一個新的問題「如何統一」？直到「<strong> <code>Unicode</code> </strong>」被發明。</p>
</blockquote>
<blockquote>
<h3 id="unicode-utf">Unicode (UTF)</h3>
<p>「 <code>Unicode</code> 」簡稱「 <code>UTF</code> 」又稱「 <code>萬國碼</code> 、 <code>統一碼</code> 」，是一種被大家公認的標準編碼。<br>
它最大的優點在於，該編碼納入了世界上大部分的文字系統，也就是將那些 <code>雜亂的編碼</code> 給 <code>統整</code> 了，所以其實它是一種「 <code>編碼集</code> 」，這也就使得計算機能夠更簡單方便的呈現和處理文字。</p>
</blockquote>
<p>說了這麼多，你可能已經發現，<strong>名詞</strong>「 <code>Encode (編碼)</code> 」其實就只是在指 <code>資料的格式</code> ，放在<strong>動詞</strong>上解釋就只是 <code>轉換資料格式的過程</code> 。因此，編碼僅僅只是將<strong>文字轉換成不同格式</strong>做儲存、顯示等，並<strong>無</strong>實質上的<strong>安全作用</strong>。</p>
<hr>
<h2 id="decode解碼">Decode (解碼)</h2>
<p>基本上就是將 Encode (編碼) 過後的資料做 <code>反向編碼</code> 的動作。<br>
其實從字面上意思也不難理解「<strong>編</strong>」與「<strong>解</strong>」所表達的含意，就像是 <code>加工</code> 與 <code>還原</code> 般。</p>
<hr>
<h2 id="encrypt-加密">Encrypt (加密)</h2>
<blockquote>
<p>基於資料的 <code>隱私</code> 及 <code>安全</code> 性考量，在許多時候我們不得將資料給加密以確保資料內容不被輕易讀取。<br>
但要特別在此聲明的一點是，這裡所指的「 <code>Encrypt (加密)</code> 」並<strong>非</strong>是大家常使用的「帳號、密碼」系統。</p>
<p>以往我們不希望他人讀取自己較私人的訊息時，我們會在這些資料被讀取前請求驗證身份，舉例將檔案放在保險箱中，若是密碼不正確則無法開啟保險箱，藉此達到資料不被讀取的安全功能。<br>
理論上沒問題，但這其實有個致命的缺點… 如果鎖被破壞呢？</p>
</blockquote>
<p>萬一有些方法能破壞這些鎖，進而達到<strong>不用輸入密碼也能存取</strong>的動作，那這種加密豈不是失去作用了。</p>
<blockquote>
<p>會導致這樣的原因主要是因為，這些聲稱加密的檔案其實並沒有被真正的「<strong>加密運算</strong>」，只是在外層加上了一道防護而已。而安全的加密應該是連同裡面的資料進行改變，這麼一來若是無法有相對應的金鑰，則無法解密資料。</p>
</blockquote>
<p>可以想像成  <code>Encrypt (加密)</code>  就是將  <code>Encode (編碼)</code>  中融入了  <code>Key (密鑰)</code>  及 <a href="https://zh.wikipedia.org/wiki/%E7%AE%97%E6%B3%95"> <code>Algorithm (演算法)</code> </a> 的元素，使  <code>Key (密鑰)</code>  參與了這整個利用  <code>Algorithm (演算法)</code>  轉換格式的過程，因此若是缺少  <code>Key (密鑰)</code>  是無法反推算原始含意的。</p>
<p>而加密的方式有成千上萬中種，大致上可以分成兩類，分別是「 <code>Symmetric-key algorithm (對稱加密)</code> 」及「 <code>Public-key Cryptography (非對稱加密)</code> 」。<br>
對這部份想更深入了解的朋友可以看看我之前寫的文章「<strong><a href="/2020/02/10/Symmetric-keyAlgorithm(%E5%B0%8D%E7%A8%B1%E5%8A%A0%E5%AF%86)/" title="Symmetric-key Algorithm (對稱加密)">Symmetric-key Algorithm (對稱加密)</a></strong>」及「<strong><a href="/2020/02/16/Public-keyCryptography(%E9%9D%9E%E5%B0%8D%E7%A8%B1%E5%8A%A0%E5%AF%86)/" title="Public-key Cryptography (非對稱加密)">Public-key Cryptography (非對稱加密)</a></strong>」。</p>
<hr>
<h2 id="decrypt-解密">Decrypt (解密)</h2>
<p>指對於「 <code>Encrypt (加密)</code> 」過的檔案使用對應的  <code>Key(密鑰)</code>  進行反運算以得出<strong>原本內容</strong>的過程。</p>
<hr>
<h2 id="hash-雜湊">Hash (雜湊)</h2>
<p>相較於上述的  <code>Encode (編碼)</code>  及  <code>Encrypt (加密)</code>  來說， <code>Hash (雜湊)</code>  算是個特別的存在。<br>
直接道出重點的話就是「<strong>Hash (雜湊) 是不可逆的</strong>」。</p>
<blockquote>
<h3 id="可逆性-reversibility">可逆性 (Reversibility)</h3>
<p>顧名思義就是可以<strong>逆向回朔原始狀態</strong>的意思。與其相反的詞為「<strong>不可逆性 (Irreversible)</strong>」。<br>
好比上述的「 <code>Encode (編碼)</code> 」，基本上各式各樣的<strong>編碼方式</strong>及<strong>編碼對應表</strong>在網絡上都可以搜尋的到，也就表示任何人都可以對這些編碼進行解碼的動作，因為方法是公開的。(當然，自創的編碼例外)<br>
 再者，「 <code>Encrypt (加密)</code> 」也可以被持有「 <code>Key (密鑰)</code> 」者透過「 <code>Decrypt (解密)</code> 」的動作還原出原始的含意。<br>
這些可以被成功<strong>回朔至原始含意</strong>的都代表含有 <strong> <code>可逆性 (Reversibility)</code> </strong>。</p>
</blockquote>
<blockquote>
<h3 id="不可逆性-irreversible">不可逆性 (Irreversible)</h3>
<p>與上述的 <code>可逆性 (Reversibility)</code>  擁有相反性質，表示 <code>無法單純透過字串或亂碼追朔其原始含意</code> 。<br>
 <code>Hash (雜湊)</code>  就是這樣的存在。</p>
</blockquote>
<p>那麼是如何做到 <strong>不可逆性 (Irreversible)</strong> 的呢？</p>
<blockquote>
<h3 id="破壞性的運算">破壞性的運算</h3>
<p>有著 <code>可逆性 (Reversibility)</code>  的主要原因是因為其內容依舊被「 <code>完整的保留</code> 」，只是換了種儲存方式而已。但 <code>Hash (雜湊)</code>  則不會如此，也就是說 Hash (雜湊) 會將原始的資料給破壞保存。</p>
</blockquote>
<blockquote>
<p>舉個例子，我們都知道的<strong>除法</strong>。<br>
除法「<strong> <code>16 / 8</code> </strong>」會等於「<strong> <code>2</code> </strong>」，若試問你「<strong> <code>X / 8</code> </strong>」結果為「<strong> <code>2</code> </strong>」，你依然能透過「<strong> <code>2 * 8</code> </strong>」得出 「<strong> <code>X</code> </strong> = <strong> <code>16</code> </strong>」，因為「<strong> <code>除法</code> </strong>」可以被理解成是「<strong> <code>乘法的反運算</code> </strong>」。</p>
<p>這個道理大家都懂，那麼若是 <code>取餘數</code> 呢？(或說是 <code>取模數</code> )<br>
 舉例「<strong> <code>16 Mod 4</code> </strong>」會是「<strong> <code>0</code> </strong>」，因為 <strong> <code>16</code> </strong> 能被 <strong> <code>4</code> </strong> 整除。<br>
而「<strong> <code>16 Mod 5</code> </strong>」則會是「<strong> <code>1</code> </strong>」，問題來了，若試問你「<strong> <code>X Mod 5</code> </strong>」結果為「<strong> <code>1</code> </strong>」，你能推出「<strong> <code>X</code> </strong>」的值嗎？<br>
這可能的值將趨近<strong>無限多種</strong>，你<strong>無法</strong>光靠<strong>保留下來的資訊</strong>推算原始內容，因此就可以達到 <strong>不可逆性 (Irreversible)</strong> 的效果。</p>
</blockquote>
<p>這只是其中一個簡單的例子，而 <strong>Hash (雜湊)</strong> 中含有各種類似的概念以確保運算後的結果<strong>不能被反推</strong>。<br>
並且 Hash (雜湊) 有著特點，就是當輸入的內容相差了哪怕只有一點，也會導致雜湊結果截然不同。</p>
<p>舉例「 <code>alpaca blog</code> 」的  <code>SHA-256</code>  雜湊為「 <code>58e93956c3cc49342b607a931e4fd60e37518d7f21f29e1dfc968d4be98c976a</code> 」。那在後面加個小點變成「 <code>alpaca blog.</code> 」的  <code>SHA-256</code>  會是長怎樣呢？<br>
答案是「 <code>3e445a9b450005d71ce28992d24871ddd5bcf5495a6eb52d3fe91f594cf3c35d</code> 」。<br>
完全不同的結果，若要分析破解雜湊值根本無跡可尋。</p>
<p>但也因此，其實雜湊是「 <code>可能會重複</code> 」的！<br>
畢竟即使擁有「 <code>2^256+1</code> 」種可能性的  <code>SHA-256</code>  也不能裝下第「 <code>2^256+2</code> 」種輸入還不產出重複的輸出結果吧！<br>
只是 <code>很難</code> 找到重複的兩筆資料，因為實在是<strong>太多種可能性</strong>了！<br>
即使找到了，但也 <code>很難是有意義的資料</code> ，通常是 <code>亂碼</code> ，這也可以使<strong>人為修改幾乎成為不可能的事情</strong>。</p>
<p>(ps. 許多雜湊是不論輸入的字串長度多長，輸出的長度皆相同的。舉例「 <code>SHA-256</code> 」就是輸出  <code>256 bits</code> ，大小寫英文及數字，字元長度為「 <code>64</code> 」，而  <code>MD5</code>  則固定輸出  <code>128 bits</code> ，大小寫英文及數字，字元長度為「 <code>32</code> 」。)</p>
<p>大致上都了解雜湊的特性了<br>
那麼問題來了，什麼情況下我們會需要將資料  <code>Hash (雜湊)</code>  ？<br>
既然不能被還原，那要那串雜湊過後的亂碼有什麼用？</p>
<hr>
<h2 id="驗證資料完整性">驗證資料完整性</h2>
<p>由於基本上很難找到兩筆有意義的重複雜湊值，因此就可以透過此方式來驗證檔案的完整性。</p>
<p>舉例「<strong>虛擬貨幣</strong>」就使用這點來驗證每筆交易的<strong>可信度</strong>，又或者你可能在下載某些檔案時，就曾看過官方在該檔案旁標示的「 <code>識別亂碼</code> 」，就是使用雜湊的原理。<br>
常見的雜湊就有「 <code>SHA-1</code> 、 <code>SHA-256</code> 、 <code>MD5</code> 」等。</p>
<p>每個在計算機上的「 <code>File (檔案)</code> 」不論是  <code>mp3</code> 、 <code>mp4</code> 、 <code>txt</code> 、 <code>jpg</code> 、 <code>png</code> 、 <code>gif</code>  等，對電腦來說都只是一串很長的 <code>文字</code> ，更精確來說都只是  <code>0</code>  與  <code>1</code> 。<br>
既然如此，那麼我們就可以將檔案進行 <code>雜湊運算</code> ！</p>
<p>有什麼用處？</p>
<p>試想一下，是否曾經聽過駭客入侵網站後，將原有的檔案<strong>竄改</strong>加入病毒使他人下載並執行到被加工檔案的事件。若是有個機制能<strong>檢測檔案是否遭到竄改</strong>，但過程又<strong>不必要去比對整個檔案的內容</strong> (太耗效能資源)，該怎麼做？<br>
看看上面的 <strong>Hash (雜湊)</strong> 特性，就不難理解它可以有效的做到這點。</p>
<p>官方在釋出檔案的同時，附上一段該檔案的 <code>雜湊值</code> 及 <code>雜湊演算法</code> ，使用者下載了該檔案後，可以自己將檔案再次經過雜湊後 <code>比對是否跟官方所附上的雜湊值一致</code> ，若<strong>不一致表示該檔案被竄改</strong>過！</p>
<p>例如 <a href="https://"><strong>bitcoin.org</strong></a> 網站提供大家下載「 <code>bitcoin core</code> 」比特幣錢包。<br>
並且付上了對於檔案的數字簽名。<br>
內容大致上長這樣：</p>
<pre class="line-numbers language-none"><code class="language-none">-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

43416854330914992bbba2d0e9adf2a6fff4130be9af8ae2ef1186e743d9a3fe  bitcoin-0.21.0-aarch64-linux-gnu.tar.gz
f028af308eda45a3c4c90f9332f96b075bf21e3495c945ebce48597151808176  bitcoin-0.21.0-arm-linux-gnueabihf.tar.gz
695fb624fa6423f5da4f443b60763dd1d77488bfe5ef63760904a7b54e91298d  bitcoin-0.21.0-osx64.tar.gz
6223fd23d07133a6bfa2aa3d2554a09dc1d790d28ce67b0085d3fdcc1c126e05  bitcoin-0.21.0-osx.dmg
f8b2adfeae021a672effbc7bd40d5c48d6b94e53b2dd660f787340bf1a52e4e9  bitcoin-0.21.0-riscv64-linux-gnu.tar.gz
1a91202c62ee49fb64d57a52b8d6d01cd392fffcbef257b573800f9289655f37  bitcoin-0.21.0.tar.gz
54050748ef4d4f000ea1ece472491b3e5fd546efc74ed52119354b2893f6624b  bitcoin-0.21.0-win64-setup.exe
1d0052c4ce80227fb6d0bc1c4e673ba21033e219c1f935d25f130ef7f43360d4  bitcoin-0.21.0-win64.zip
da7766775e3f9c98d7a9145429f2be8297c2672fe5b118fd3dc2411fb48e0032  bitcoin-0.21.0-x86_64-linux-gnu.tar.gz
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.11 (GNU&#x2F;Linux)

iQIcBAEBCAAGBQJgADqTAAoJEJDIAZ42wulkjtkQAJwlSTDinKsxZIMky3MeVhwB
CmxxYiMLPQA8bwgxyc4RaTxUrqL2oExPOtfcDzcR1WbQe12niG40N&#x2F;2yrtf66lG9
KbSsQD6nKat9B3mCk9&#x2F;jNkJHWmq5JJbOyfRs2mex75Lj7UHaPPrqh2rMfEewljed
kHkDuaqeqYlTAh981WqLD+l5jnpQZqBSrcz3YTTvXWd7xKfFSVzqF&#x2F;tD4CQFrPX2
9b2BLzA&#x2F;u+29Z3s+zio1l5c7fikNDd404T5U&#x2F;y+NMOyCmgT4eiDGLQPlEpoGNq3w
GYU7FNZUO9xXeatx4PI8qiq5mIK46UwfPUTeruTzNrHsME7YioUa87uSYKM8jqwP
FSnbhYoUqCB&#x2F;wPaKZwEF+2WzG88yj2+PzalVt8cnjRnTQ77COtHJqs8AjLWnVACF
LluplM16xyiLn0FWkrEHyi5HlI+X+cqIiTtehojMBXIkHugIYMnT5XB9llh5OWXg
Bp1UGupojLXYuMNF5R6cU5Iq+xJjbUiQ&#x2F;PDm38MBlFlQ9RzRCYyZpMYZE3K9p789
jpjdYdMPtzkYlIKD87S89JtE1s6i&#x2F;SkTPhebyu&#x2F;328rqkqnNKSCHnuB7Fy2iEKJj
5kLs&#x2F;LjY8yxSMuGeNl6LhWGKVZKy0AS&#x2F;BztSHr2jgThfhN1BemFRcViSvcXhMeNw
ka8Z9KLt&#x2F;N0ziabBexAw
&#x3D;bi4p
-----END PGP SIGNATURE-----<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在第二行的位置，官方標示了「 <code>Hash 方式為 SHA256</code> 」，接著就列出了各個檔案的 <code>雜湊值</code> 供大家驗證，可是該文檔也是可能受到偽造的，那怎麼辦？<br>
還記得前面所說的「 <code>非對稱加密</code> 」嗎？在此情境當中被用在了「 <code>數字簽名</code> 」，並且將簽章寫在文檔最後，也就是最後那串很長的亂碼。</p>
<p>官方將前面的整段「 <code>BEGIN PGP SIGNED MESSAGE</code>  與  <code>-----BEGIN PGP SIGNATURE-----</code>  中間」的內容給簽章成「 <code>-----BEGIN PGP SIGNATURE-----</code>  與  <code>-----END PGP SIGNATURE-----</code>  中間」的那串亂碼了！你只需要使用官方提供的公鑰便可以驗證這一切的資訊是否源自官方。</p>
<p>萬一駭客 <code>更改了檔案</code> ，則無法通過該文檔的  <code>Hash (雜湊)</code>  驗證，若駭客連該文檔一起修改，將 <code>檔案對應的雜湊值</code> 也更改了，但由於駭客 <code>沒有官方所釋出的公鑰所對應的私鑰</code> ，因此也 <code>無法對修改後的訊息進行官方簽章</code> 。</p>
<hr>
<h2 id="hash-雜湊-其實可以被破解">Hash (雜湊) 其實可以被破解？</h2>
<p>雜湊也並非無敵，它只是盡量的避免了原文被修改成其他 <code>有意義的內容</code> ，藉此達到降低被欺騙的可能而已。<br>
有些網站標榜能破解 Hash (雜湊)，那其實是利用大數據來進行「 <code>暴力攻擊 (Brute-force attack)</code>  又稱 <a href="https://zh.wikipedia.org/wiki/%E8%9B%AE%E5%8A%9B%E6%94%BB%E5%87%BB"> <code>窮舉攻擊 (Exhaustive attack)</code> </a> 或  <code>爆破</code> 」或者「<a href="https://zh.wikipedia.org/wiki/%E5%BD%A9%E8%99%B9%E8%A1%A8"> <code>彩虹表 (Rainbow Table)</code> </a>」。</p>
<ul>
<li>暴力攻擊 (Brute-force attack)<br>
 暴力攻擊其實就是以「 <code>窮舉</code> 」的方式來找出該雜湊值對應的明文，因此需要嘗試許多種的可能性，也非常耗時，通常<strong>不</strong>太會真正的<strong>窮舉</strong>，畢竟可能性太多了。<br>
假設我們是要利用該方法來找出某一串「 <code>已知是人工輸入的密碼的雜湊值</code> 」的明文，那只要我們可以 <code>收集許多常見密碼的列表</code> ，就可以使用這些列表來嘗試，萬一該密碼有在列表中，就可以<strong>成功找到比對一致的結果</strong>。而這種方式依賴的那個 <code>裝著許多待比對的字串的檔案</code> 我們稱它為「 <code>字典檔</code> 」。<br>
將字典檔中的各項可能結果使用腳本或特定程式一個個的雜湊後，再去比對是否有與欲破解的雜湊值有相符結果，若沒有則繼續嘗試下一筆資料，若成功批配，則表示該項就是 (幾乎是) 該雜湊值的原文，同時我們也稱這種雜湊過後得出相同值的狀況為「 <code>發生碰撞</code> 」。</li>
<li>彩虹表 (Rainbow Table)<br>
 嚴格來說也算是一種暴力攻擊的方式，但在某些時候效率比暴力攻擊更高。<br>
通常是指將雜湊的公式 <code>逆向運算回推</code> 所預先計算好的表。在密碼學打滾的人一定都知道這個！<br>
關於彩虹表的原理解釋相對較複雜，簡單來說就是…
<blockquote>
<p>假設原本的雜湊函式為  <code>H</code> ，則創建一個與其對應的相反函式  <code>R</code>  又稱「 <code>歸約函式 (Reduction function)</code> 」。函式  <code>R</code>  可以將利用函式  <code>H</code>  所計算出的雜湊值反算回 <code>與原本格式類似的亂碼</code> ，這裡也可以理解成是將這 <code>雜湊值</code>  Hash 成  <code>新雜湊值</code> ，而這個 <code>新雜湊值</code> 格式是 <code>類似原文的格式</code> 。就這樣持續的經過  <code>R 運算</code> 、 <code>H 運算</code> 、 <code>R 運算</code> 、 <code>H 運算</code> … 形成了一條很長的鏈，由於這條鏈的結果是必然的，因此只需要對該鏈的 <code>初始節點</code> 及 <code>末端節點</code> 儲存即可。<br>
假設原文為「 <code>aaaaaa</code> 」在經過  <code>H 運算</code>  之後雜湊值為「 <code>281DAF40</code> 」，則我們將該雜湊值用  <code>R 運算</code>  得出一個反雜湊值為「 <code>sgfnyd</code> 」之後再進行一次  <code>H 運算</code>  得出「 <code>920ECF10</code> 」再進行  <code>R 運算</code>  得出「 <code>kiebgt</code> 」，之後將這條鏈存入表中 (只存頭尾節點)。過程如下圖：</p>
<p><a href="https://wikimedia.org/api/rest_v1/media/math/render/svg/bbacb4ee3811ce261fa6023c6de90718e22c7b49"><img src="01.png" alt="圖源自 Wiki 維基百科"></a><br>
若 <code>欲破解的雜湊值</code> 所運算出的 <code>雜湊鏈</code> 中的 <code>任意節點</code> 與 <code>表中</code> 的 <code>某項末端節點</code> 發生 <code>碰撞</code> ，就可以由該鏈的 <code>初始節點</code> 開始嘗試重建對應的雜湊鏈。<br>
延續剛剛的情境，假設 <code>欲破解的雜湊值</code> 為「 <code>920ECF10</code> 」，在使用  <code>R 運算</code>  後得出「 <code>kiebgt</code> 」。</p>
<p><a href="https://wikimedia.org/api/rest_v1/media/math/render/svg/6f221f7b41880f40014bb8a62c238fc393dfaa7b"><img src="02.png" alt="圖源自 Wiki 維基百科"></a><br>
我們發現該值出現在表中，於是我們將該鏈的 <code>初始節點</code> 開始進行  <code>H 及 R 運算</code>  直到找出「 <code>920ECF10</code> 」為止，若成功找到，則表示該鏈中的「 <code>920ECF10</code> 」的 <code>前個節點</code> 便是解，即為下圖的「 <code>sgfnyd</code> 」。</p>
<p><a href="https://wikimedia.org/api/rest_v1/media/math/render/svg/c1f95ab4100e23af7fa96fa7f3f71c28edeb7a17"><img src="03.png" alt="圖源自 Wiki 維基百科"></a><br>
但由於剛剛說過，雜湊是可能會重複的，因此在此情境中，即便「 <code>kiebgt</code> 」在表中的 <code>某項末節點</code> 被找到，但也<strong>可能發生</strong>當你嘗試利用該鏈的 <code>初始節點</code> 開始進行運算後，也無法找到「 <code>920ECF10</code> 」的狀況，對此我們稱作「 <code>誤報 (False alarm)</code> 」，接著只需要跳過該次批配，繼續做運算嘗試找出下個配對即可。<br>
舉例上述情境可能在「 <code>FB107E70</code>  (不同的雜湊值)」進行  <code>R 運算</code>  後得出「 <code>kiebgt</code>  (有著一樣的雜湊)」。</p>
<p><a href="https://wikimedia.org/api/rest_v1/media/math/render/svg/7e3220acb1fc2552f863e5fc14eaf76fa269ec37"><img src="04.png" alt="圖源自 Wiki 維基百科"></a></p>
</blockquote>
</li>
</ul>
<hr>
<h2 id="總結">總結</h2>
<p>只能說現在在資訊安全上真的衍生出了許多方法，這些方法能有著許多優點，但同時也能帶來許多危機。<br>
在寫這篇文章時，寫著寫著突然發現好像重心著重在  <code>Hash (雜湊)</code>  的部份太多了，造成各位在觀看時可能有點失去平衡，真的很抱歉，但這也是因為我希望將<strong>較完整的資訊</strong>帶給各位。</p>
<p>文章內容較為繁瑣，也有些許離題。資料都是自己的知識及  <code>Wiki 維基百科</code>  的輔助！<br>
若內容有誤請不吝嗇通知我，非常感謝！</p>
<p>另外喜歡這篇文章也別忘了分享給你身邊的朋友觀看！</p>
<hr>
<h2 id="參考資料">參考資料</h2>
<p>《<strong>Wiki 維基百科 - ASCII</strong>》<a href="https://zh.wikipedia.org/wiki/ASCII">https://zh.wikipedia.org/wiki/ASCII</a><br>
《<strong>Wiki 維基百科 - Unicode</strong>》 <a href="https://zh.wikipedia.org/wiki/Unicode">https://zh.wikipedia.org/wiki/Unicode</a><br>
《<strong>Wiki 維基百科 - SHA-2</strong>》<a href="https://zh.wikipedia.org/wiki/SHA-2">https://zh.wikipedia.org/wiki/SHA-2</a><br>
《<strong>Wiki 維基百科 - MD5</strong>》<a href="https://zh.wikipedia.org/wiki/MD5">https://zh.wikipedia.org/wiki/MD5</a><br>
《<strong>Wiki 維基百科 - 蠻力攻擊</strong>》<a href="https://zh.wikipedia.org/wiki/%E8%9B%AE%E5%8A%9B%E6%94%BB%E5%87%BB">https://zh.wikipedia.org/wiki/ 蛮力攻击</a><br>
《<strong>Wiki 維基百科 - 彩虹表</strong>》<a href="https://zh.wikipedia.org/wiki/%E5%BD%A9%E8%99%B9%E8%A1%A8">https://zh.wikipedia.org/wiki/ 彩虹表</a></p>
]]></content>
      <categories>
        <category>Computer Science</category>
      </categories>
      <tags>
        <tag>Cyber Security (網絡安全)</tag>
        <tag>Cryptography (密碼學)</tag>
        <tag>Public-key Cryptography (非對稱加密)</tag>
        <tag>Digital Signature (數位簽章)</tag>
      </tags>
  </entry>
  <entry>
    <title>Pi 幣是什麼？數位貨幣「π」到底是韭菜傳說，還是改寫歷史的神話！？</title>
    <url>/2021/01/09/Pi-Coin/</url>
    <content><![CDATA[<p>從 <strong>2020 年 3 月</strong> 開始，全球開始發起關於「<strong>Pi Coin</strong>」的熱潮，當在實際找尋資料時發現，支持與反對的聲音勢不兩立。而這讓幣圈玩家炸了鍋討論的「<strong>π</strong>」到底是什麼？</p>
<span id="more"></span>
<h2 id="手機挖礦">手機挖礦</h2>
<h3 id="如果你只是想知道如何用手機賺-pi-coin那麼可以直接看我的-下一篇文章">如果你只是想知道<strong>如何用手機賺 Pi Coin</strong>，那麼可以直接看我的 <a href="#%E7%94%A8%E6%89%8B%E6%A9%9F%E8%B3%BA%E5%8F%96-Pi-Coin">下一篇文章</a>。</h3>
<hr>
<h2 id="pi-幣">Pi 幣？</h2>
<p>「<strong>π 幣</strong>」是一種「<a href="https://zh.wikipedia.org/wiki/%E6%95%B8%E4%BD%8D%E8%B2%A8%E5%B9%A3"><strong>數位貨幣</strong></a>」，又稱「<strong>Pi 幣</strong>」、「<strong>派幣</strong>」、「<strong>Pi Coin</strong>」甚至被稱作是「<strong>下一個比特幣</strong>」。其主要核心技術為「<strong>Pi Network</strong>」。(Pi Network 官方：<a href="https://minepi.com/">https://minepi.com/</a>)</p>
<hr>
<h2 id="pi-network-起源">Pi Network 起源</h2>
<p>「<strong>Pi Network</strong>」該項目於 <strong>2019/03/14</strong> 啟用，由「<a href="https://zh.wikipedia.org/wiki/%E5%8F%B2%E4%B8%B9%E4%BD%9B%E5%A4%A7%E5%AD%B8"><strong>Leland Stanford Junior University</strong></a> (<strong>小利蘭・史丹佛</strong>大學，又稱 <strong>斯坦福</strong>大學)」的 3 名學生所共同開發，分別是：</p>
<ul>
<li>Dr. <strong>Nicolas Kokkalis</strong>, Head of Technologies;</li>
<li>Dr. <strong>Chengdiao Fan</strong>, Head of Product;</li>
<li><strong>Vincent McPhillip</strong>, Head of Community.</li>
</ul>
<p>資料來源：<a href="https://minepi.com/team">https://minepi.com/team</a></p>
<hr>
<h2 id="pi-coin-值多少錢">Pi Coin 值多少錢？</h2>
<p>當前 Pi Network 還處於<strong>測試階段</strong>，因此若要談價值… 可以說是個<strong>問號</strong>，必須等到<strong>正式上線</strong>之後才會知道，這也正是許多人所質疑該數位貨幣是否能在未來順利發展的點。</p>
<hr>
<h2 id="如何獲取-pi-coin">如何獲取 Pi Coin？</h2>
<p>以下是轉自 <a href="https://minepi.com/white-paper"><strong>Pi Network White-Paper (Pi Network 白皮書)</strong></a>：</p>
<blockquote>
<p>There are four roles Pi users can play, as Pi miners. Namely:</p>
<ul>
<li><strong>Pioneer</strong><br>
A user of the Pi mobile app who is simply confirming that they are not a “robot” on a daily basis. This user validates their presence every time they sign in to the app. They can also open the app to request transactions (e.g. make a payment in Pi to another Pioneer)</li>
<li><strong>Contributor</strong><br>
A user of the Pi mobile app who is contributing by providing a list of pioneers he or she knows and trusts. In aggregate, Pi contributors will build a global trust graph.</li>
<li><strong>Ambassador</strong><br>
A user of the Pi mobile app who is introducing other users into Pi network.</li>
<li><strong>Node</strong><br>
A user who is a pioneer, a contributor using the Pi mobile app, and is also running the Pi node software on their desktop or laptop computer. The Pi node software is the software that runs the core SCP algorithm, taking into account the trust graph information provided by the Contributors.</li>
</ul>
</blockquote>
<p>大致上意思是：</p>
<blockquote>
<p>用戶們可以透過扮演以下 4 種身份來取得 Pi Coin：</p>
<ul>
<li><strong>Pioneer (先鋒)</strong><br>
 Pi Network 提供手機 APP，用戶只需每天使用手機上線點擊，讓他們確認你不是「機器人」，即可開始「<a href="https://zh.wikipedia.org/wiki/%E6%8C%96%E7%A4%A6_(%E6%95%B8%E4%BD%8D%E8%B2%A8%E5%B9%A3)"><strong>挖礦 (Mining)</strong></a>」。(以 <strong>Faucet (水龍頭)</strong> 的方式進行)</li>
<li><strong>Contributor (貢獻者)</strong><br>
 Pi APP 的用戶通過提供他或她認識和信任的先驅者列表來做出貢獻。</li>
<li><strong>Ambassador (大使)</strong><br>
 Pi 移動應用程序的用戶，正在將其他用戶引入 Pi 網絡。</li>
<li><strong>Node (節點)</strong><br>
 先鋒用戶，使用 Pi 移動應用程序的用戶，並且還在其台式機或便攜式計算機上運行 Pi 節點軟件。Pi 節點軟件是運行核心 SCP 算法的軟件，同時考慮了貢獻者提供的信任圖信息。</li>
</ul>
</blockquote>
<hr>
<h2 id="pi-network-項目流程">Pi Network 項目流程</h2>
<blockquote>
<ul>
<li>Phase <strong>1</strong> - <strong>Design, Distribution, Trust Graph Bootstrap. (設計、分發、信任圖引導程序)</strong><br>
 Pi 伺服器開始模擬<strong>去中心化</strong>的運作模式，並以 <strong>Faucet (水龍頭)</strong> 的方式運行 (即前面所說：Pioneer 每天透過 APP 點擊，確認自己不是機器人即可以 Faucet (水龍頭) 的方式挖礦獲取 Pi Coin)，並且開始少量測試 <strong>KYC (實名認證)</strong>。<br>
與第三階段「Mainnet (主網)」相比，該階段更容易改善用戶體驗。此階段於 <strong>2019/03/14</strong> 開始運作，並持續一年的時間，於 <strong>2020/03</strong> 末進入第二階段「<strong>Testnet (測試網)</strong>」。</li>
<li>Phase <strong>2</strong> - <strong>Testnet (測試網)</strong><br>
 該階段將會與第三階段「<strong>Mainnet (主網)</strong>」使用相同的<strong>精確信任圖</strong>，但其中使用的是 <strong>Pi 測試幣</strong>，另外，也將開始大量測試 <strong>KYC (實名認證)</strong>。<br>
官方也於該階段發布了 <strong>Node (節點)</strong> 程式，並且鼓勵用戶們啟動節點。此外，<strong>第二階段</strong>將與<strong>第一階段</strong>並行運作，並且定期比較兩個系統的結果，若結果始終相同，那麼就代表準備就緒，即可開始迎向第三階段「<strong>Mainnet (主網)</strong>」。</li>
<li>Phase <strong>3</strong> - <strong>Mainnet (主網)</strong><br>
 此階段為主網路正式運行，不僅會關閉前兩項階段，並且每個使用者必須接受 <strong>KYC (實名認證)</strong>，因為 <strong>Pi Network</strong> 只允許<strong>一人擁有一個帳戶</strong>，<strong>假的帳戶</strong>及<strong>重複的帳戶</strong>餘額將被<strong>丟棄</strong>。<br>
並且在這個階段，正式開始開放交易 Pi Coin，也正是如此，Pi Coin 於該階段，也開始有了<strong>實際的價值</strong>。<strong>未來的更新</strong>將會由 <strong>Pi Network 開發人員社區</strong> 以及 <strong>Pi Network 核心團隊</strong> 共同提供，並由<strong>委員會</strong>提出更新。</li>
</ul>
</blockquote>
<p>詳情請查閱 <a href="https://minepi.com/white-paper"><strong>Pi Network White-Paper (Pi Network 白皮書)</strong></a> 原文：</p>
<blockquote>
<p><strong>Roadmap / Deployment plan</strong></p>
<ul>
<li>Phase <strong>1</strong> - <strong>Design, Distribution, Trust Graph Bootstrap</strong>.<br>
The Pi server is operating as a faucet emulating the behavior of the decentralized system as it will function once its live. During this phase improvements in the user experience and behavior are possible and relatively easy to make compared to the stable phase of the main net. All minting of coins to users will be migrated to the live net once it launches. In other words, the livenet will pre-mint  in its genesis block all account holder balances generated during Phase 1, and continue operating just like the current system but fully decentralized. Pi is not listed on exchanges during this phase and it is impossible to “buy” Pi with any other currency.</li>
<li>Phase <strong>2</strong> - <strong>Testnet</strong><br>
Before we launch the main net, the Node software will be deployed on a test net. The test net will use the same exact trust graph as the main net but on a testing Pi coin. Pi core team will host several nodes on the test net, but will encourage more Pioneers to start their own nodes on the testnet. In fact, in order for any node to join the main net, they are advised to begin on the testnet. The test net will be run in parallel to the Pi emulator in phase one, and periodically, e.g. daily, the results from both systems will be compared to catch the gaps and misses of the test net, which will allow Pi developers to propose and implement fixes.  After a thorough concurrent run of both systems, testnet will reach a state where its results consistently match the emulator’s. At that time when the community feels its ready, Pi will migrate to the next phase.</li>
<li>Phase <strong>3</strong> - <strong>Mainnet</strong><br>
When the community feels the software is ready for production, and it has been thoroughly tested on the testnet, the official mainnet of the Pi network will be launched. An important detail is that, in the transition into the mainnet, only accounts validated to belong to distinct real individuals will be honored. After this point, the faucet and Pi network emulator of Phase 1 will be shut down and the system will continue on its own forever. Future updates to the protocol will be contributed by the Pi developer community and Pi’s core team, and will be proposed by the committee. Their implementation and deployment will depend on nodes updating the mining software just like any other blockchains. No central authority will be controlling the currency and it will be fully decentralized. Balances of fake users or duplicate users will be discarded. This is the phase when Pi can be connected to exchanges and be exchanged for other currencies.</li>
</ul>
</blockquote>
<hr>
<h2 id="pi-coin-的供給">Pi Coin 的供給</h2>
<p>Pi Coin 的經濟模型為「<strong>Balancing Scarcity and Access (平衡稀缺性和獲取)</strong>」。</p>
<blockquote>
<ul>
<li><strong>優點</strong>
<ul>
<li>固定供給<br>
以 <a href="https://zh.wikipedia.org/wiki/%E6%AF%94%E7%89%B9%E5%B8%81"><strong>Bitcoin (比特幣)</strong></a> 為例 (以下統稱 <strong>BTC</strong>)，BTC 在被設計出來的時候，其產量上限就是固定的，上限為「<strong>2,100 萬</strong>」顆 BTC。全世界只有 <strong>2,100 萬</strong>顆的 BTC 在 <strong>75 億</strong>的人口中流通，這樣的稀缺性也正是導致 BTC 價值高的重點因素之一。</li>
</ul>
</li>
<li><strong>減少區塊獎勵 (礦工獎勵)</strong><br>
 BTC 的這種分配方案更是增強了稀缺性。BTC 的挖礦獎勵每 <strong>210,000</strong> 個區塊將會減半 (約每 <strong>4</strong> 年一次)。<br>
早期，BTC 挖礦獎勵為 <strong>50</strong> BTC，最近則為 <strong>12.5</strong> BTC，並在 <strong>2020</strong> 年 <strong>05</strong> 月減半為 <strong>6.25</strong> BTC。</li>
<li><strong>缺點</strong>
<ul>
<li><strong>反向傳播</strong>模型 意味著 <strong>不均勻</strong><br>
 BTC 所採用的是 <a href="https://zh.wikipedia.org/wiki/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%E7%AE%97%E6%B3%95"><strong>Backpropagation (反向傳播)</strong></a> 模型 (一開始<strong>少數的人</strong>賺著<strong>多數的 BTC</strong>，如今<strong>多數的人</strong>賺著<strong>少數的 BTC</strong> )。因此導致 BTC 分配不均。</li>
<li><strong>囤積</strong>阻礙了作為<strong>交易媒介</strong>的使用<br>
儘管 BTC 被發佈為「點對點<strong>電子現金</strong>」系統，但 BTC 的相對<strong>稀缺性</strong>阻礙了 BTC 作為交易媒介的運用。BTC 的稀缺性導致人們將其視為一種「<strong>數位黃金</strong>」或<strong>數字價值存儲形式</strong>。這種看法的結果是，許多 BTC 持有人<strong>不</strong>願意將 BTC 用於<strong>日常支出</strong>。</li>
</ul>
</li>
</ul>
</blockquote>
<p>Pi Coin 的<strong>經濟模型</strong>設計要求為：</p>
<blockquote>
<ul>
<li><strong>簡潔</strong><br>
一個<strong>直觀</strong>且<strong>透明</strong>的模型。</li>
<li><strong>公平分配</strong><br>
讓全世界有<strong>大量的人口</strong>持有 Pi Coin。</li>
<li><strong>稀缺性</strong><br>
營造<strong>稀缺感</strong>，使 Pi Coin 在<strong>時間的推移</strong>中，仍<strong>維持其價值</strong>。</li>
<li><strong>精英階層的收入</strong><br>
為建立和為維持 <strong>Pi Network</strong> 而貢獻的人提供<strong>獎勵</strong>。</li>
</ul>
</blockquote>
<p><strong>Pi Coin Token Emission Policy (Pi Coin 的供應政策)</strong>：</p>
<blockquote>
<ol>
<li>
<p><strong>Total Max Supply (最大供應量) = M + R + D</strong><br>
a. <strong>M</strong> = total mining rewards (總挖礦獎勵)<br>
b. <strong>R</strong> = total referral rewards (總推薦獎勵)<br>
c. <strong>D</strong> = total developer rewards (總協助開發獎勵)</p>
</li>
<li>
<p><strong>M = ∫ f§ dx where f is a logarithmically declining function (該 f 為 對數遞減函式)</strong><br>
a. <strong>P</strong> = <strong>Population number (人口數)</strong> (e.g., 1st person to join, 2nd person to join, etc.)</p>
</li>
<li>
<p><strong>R = r * M</strong><br>
a. <strong>r</strong> = <strong>referral rate (推薦率)</strong> (50% total or 25% for both referrer and referee)</p>
</li>
<li>
<p><strong>D = t * (M + R)</strong></p>
</li>
<li>
<p><strong>t = developer reward rate (開發者獎勵率，25%)</strong></p>
</li>
</ol>
</blockquote>
<blockquote>
<ul>
<li><strong>M - 挖礦供應 (為每人鑄造的 固定採礦供應)</strong><br>
 與為整個世界提供固定硬幣供應的 BTC 不同，Pi Coin 為加入網絡的每個人 (前 1 億參與者) 創建 Pi Coin 的<strong>固定供應</strong>。換句話說，對於每個加入 Pi Network 的人來說，Pi Coin 的數量都是固定的，這會根據成員的<strong>參與程度</strong>和對<strong>該網路安全</strong>的<strong>貢獻</strong>，為成員終生釋出此供應。<br>
說白一點就是，Pi Coin 的<strong>總量</strong>，是依據<strong>用戶的數量</strong>來決定的，<strong>用戶越多</strong>，則 <strong>Pi Coin 上限也將越多</strong>，最大上線為 <strong>1 億用戶</strong>，當超過上限，則 <strong>M</strong> 將<strong>不</strong>再增加。<br>
由於 <strong>M</strong> 的<strong>公式</strong>是採用「<strong>對數遞減函式</strong>」，因此也就表示著「<strong>越早挖礦的人獎勵越多，隨著人數增長，挖礦獎勵將會遞減</strong>」。<br>
<strong>2019/09/05</strong> Pi Network 宣布用戶數到達 <strong>32.5 萬</strong>。<br>
<strong>2019/09/25</strong> Pi Network 宣布真實活躍用戶達到 <strong>45 萬</strong>。<br>
<strong>2019/10/10</strong> Pi Network 宣布用戶數到達 <strong>65 萬</strong>。<br>
<strong>2019/10/17</strong> Pi Network 宣布用戶數到達 <strong>80 萬</strong>。<br>
<strong>2019/10/22</strong> Pi Network 宣布用戶數到達 <strong>90 萬</strong>。<br>
<strong>2019/10/25</strong> Pi Network 用戶數到達 <strong>100 萬</strong>，並且官方刪除了 <strong>10 萬</strong> 個<strong>違規帳號</strong>。<br>
<strong>2019/10/31</strong> Pi Network 宣布用戶數到達 <strong>100 萬</strong>，<strong>挖礦速度</strong>第三次<strong>減半</strong>。(當用戶數量達到 <strong>1000 萬</strong> 時，挖礦速度將再次<strong>減半</strong>。)<br>
<strong>2019/11/14</strong> Pi Network 宣布用戶數到達 <strong>125 萬</strong>。<br>
<strong>2019/11/16</strong> Pi Network 發出警告，表示現階段 Pi Coin <strong>尚未</strong>開放交易，當前有關 Pi Coin 的交易項目皆可能是<strong>詐騙</strong>。</li>
</ul>
</blockquote>
<blockquote>
<p><strong>R - 推薦人供應量 (為每人鑄造的固定推薦人獎勵，並在 推薦人 和 受推薦人 之間共享)</strong><br>
 為了使一種貨幣有<strong>價值</strong>，它必須被<strong>廣泛分配</strong>。為了激勵這個目標，該協議還生成了固定數量的 Pi Coin 作為<strong>推薦人</strong>和<strong>受推薦人 (或父推薦人、子推薦人)<strong> 的</strong>推薦獎金</strong>。各方都在積極挖礦，<strong>推薦人</strong>和<strong>受推薦人</strong>都可以利用該礦池，以避免<strong>推薦人</strong>能夠「<strong>掠奪</strong>」<strong>受推薦人</strong>的剝削行為模型。推薦獎金可作為<strong>網絡級別</strong>的獎勵，以發展 Pi Network，同時還鼓勵成員之間積極參與以確保該網絡的安全。<br>
也就是說，只要多邀請一個人加入 Pi Network，<strong>推薦方</strong>及<strong>受推薦方</strong>則各自會多 <strong>25%</strong> 的<strong>挖礦獎勵</strong>。</p>
</blockquote>
<blockquote>
<p><strong>D - 開發者獎勵 (為支持正在進行的 開發 而創建的附加 Pi Coin)</strong><br>
 Pi Coin 將通過「<strong>開發者獎勵</strong>」為正在進行的開發提供<strong>資金</strong>，該獎勵與為<strong>挖礦</strong>和<strong>推薦的每枚硬幣</strong>同時鑄造。<br>
傳統上，加密貨幣協議產生了固定數量的供應，由於 Pi Coin 的總供應量取決於網絡中的成員數量，因此 Pi Coin 會隨著網絡的擴展逐步獲得開發人員的獎勵。Pi Coin 開發人員獎勵的逐步完善旨在使 Pi Coin 的貢獻者的<strong>激勵</strong>與<strong>網絡的整體健康狀況</strong>保持一致。</p>
</blockquote>
<blockquote>
<p><strong>f - 對數遞減函數 (早期成員賺取更多)</strong><br>
 雖然 Pi Coin 試圖避免財富過度的極端集中，但該網絡還試圖以更大比例的 Pi Coin 來獎勵較早的成員及其貢獻。<br>
當像 Pi Network 這樣的網絡在成立之初，它們往往會為參與者提供較低的效用。設想，假設您擁有世界上第一台電話，這將是一項偉大的技術創新，但並非十分有用，不過隨著越來越多的人購買電話，每個電話持有者將從網絡中獲得更多的效用。為了獎勵早日進入網絡的人員，Pi Coin 的個人挖礦獎勵和推薦獎勵隨網絡人數的減少而降低。換句話說，為 Pi Network 中的每個「插槽」保留了一定數量的 Pi Coin。</p>
</blockquote>
<p>詳情請查閱 <a href="https://minepi.com/white-paper"><strong>Pi Network White-Paper (Pi Network 白皮書)</strong></a> 原文：</p>
<blockquote>
<ul>
<li><strong>M - Mining Supply (Based on fixed mining supply minted per person)</strong><br>
In contrast to Bitcoin which created a fixed supply of coins for the entire global population, Pi creates a fixed supply of Pi for each person that joins the network up to the first 100 Million participants. In other words, for each person that joins the Pi Network, a fixed amount of Pi is pre-minted. This supply is then released over the lifetime of that member based on their level of engagement and contribution to network security. The supply is released using an exponentially decreasing function similar to Bitcoin’s over the member’s lifetime.</li>
<li><strong>R - Referral Supply (Based on fixed referral reward minted per person and shared b/w referrer and referee)</strong><br>
In order for a currency to have value, it must be widely distributed. To incentivize this goal, the protocol also generates a fixed amount of Pi that serves as a referral bonus for both the referrer and the referee (or both parent and offspring ) This shared pool can be mined by both parties over their lifetime - when both parties are actively mining. Both referrer and referee are able to draw upon this pool in order to avoid exploitative models where referrers are able to “prey” on their referees. The referral bonus serves as a network-level incentive to grow the Pi Network while also incentivizing engagement among members in actively securing the network.</li>
<li><strong>D - Developer Reward Supply (Additional Pi minted to support ongoing development)</strong><br>
Pi will fund its ongoing development with a “Developer Reward” that is minted alongside each coin that is minted for mining and referrals. Traditionally, cryptocurrency protocols have minted a fixed amount of supply that is immediately placed into treasury. Because Pi’s total supply is dependent on the number of members in the network, Pi progressively mints its developer reward as the network scales. The progressive minting of Pi’s developer reward is meant to align the incentives of Pi’s contributors with the overall health of the network.</li>
<li><strong>f is a logarithmically decreasing function - early members earn more</strong><br>
While Pi seeks to avoid extreme concentrations of wealth, the network also seeks to reward earlier members and their contributions with a relatively larger share of Pi. When networks such as Pi are in their early days, they tend to provide a lower utility to participants. For example, imagine having the very first telephone in the world. It would be a great technological innovation but not extremely useful. However, as more people acquire telephones, each telephone holder gets more utility out of the network. In order to reward people that come to the network early, Pi’s individual mining reward and referral rewards decrease as a function of the number of people in the network. In other words, there is a certain amount of Pi that is reserved for each “slot” in the Pi Network.</li>
</ul>
</blockquote>
<hr>
<h2 id="謠言爭議">謠言 / 爭議</h2>
<ol>
<li>一開始有謠言指出，Pi Network 官方表示將在 <strong>2020/03/14</strong> 將正式啟用第三階段「<strong>Mainnet (主網)</strong>」。但官方證實為謠言，並表示是在當天開始準備進入第二階段 - <strong>Testnet (測試網)</strong>。</li>
<li>由於官方要求用戶們必須經過 <strong>KYC (實名認證)</strong>，在當前 Pi Coin 沒有實質價值時，不少人質疑，Pi Coin 是一場大型的詐騙，許多人認為，這將可能會導致引發一場大型的<strong>個資洩漏</strong>事件。</li>
</ol>
<hr>
<h2 id="用手機賺取-pi-coin">用手機賺取 Pi Coin</h2>
<p>在下一篇文章中，我會講解如何用手機賺取 Pi Coin！<br>
不需要投入資金，免費 0 成本，每天花個 1 分鐘即可，有空不妨試試看！<br>
詳情請看「<strong><a href="/2021/01/11/Pi-Coin-APP/" title="用手機賺 Pi 幣，趁現在還免費趕快挖！(詳細圖文教學)">用手機賺 Pi 幣，趁現在還免費趕快挖！(詳細圖文教學)</a></strong>」！</p>
<hr>
<h2 id="參考資料">參考資料</h2>
<p>《Pi Network White-Paper》<a href="https://minepi.com/white-paper">https://minepi.com/white-paper</a></p>
]]></content>
      <categories>
        <category>Information (資訊分享)</category>
      </categories>
      <tags>
        <tag>Bitcoin (比特幣)</tag>
        <tag>Digital-Currency (數位貨幣)</tag>
      </tags>
  </entry>
</search>
